make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Dec  5 20:26:50 2022

# Variables

# environment
LC_ALL = C
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# environment
VSCODE_CWD = /mnt/c/Users/dwiwa/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'Makefile', line 6)
DOCKER_DEBIAN_MIRROR = http://deb.debian.org/debian
# default
MAKE_COMMAND := make
# environment
VSCODE_HANDLES_SIGPIPE = true
 
# environment
GOPATH = /home/au/go
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 3)
DOCKER_CONTAINER_NAME = addons-task-service
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from 'Makefile', line 12)
BINARY = ddons-task-service
# default
.VARIABLES := 
# environment
PWD = /home/au/go/src/addons-task-service
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 9)
BUILD_VERSION = 0.1.0
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# automatic
^D = $(patsubst %/,%,$(dir $^))
# automatic
%F = $(notdir $%)
# environment
LANG = C
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/au/go/src/addons-task-service
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MFLAGS = -pqrR
# default
.SHELLFLAGS := -c
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 8)
BUILD_DATE = $(shell date -u +'%Y-%m-%dT00:00:00Z')
# automatic
*F = $(notdir $*)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /home/au/.vscode-server/bin/6261075646f055b99068d3688932416f2346dd3b/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Go/bin:/mnt/c/protoc-21.9-win64/bin:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/dwiwa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/dwiwa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/dwiwa/go/bin:/snap/bin:/usr/local/go/bin:/home/au/go/bin
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# automatic
?F = $(notdir $?)
# environment
NAME = DESKTOP-EAGMJSA
# makefile (from 'Makefile', line 4)
DOCKER_CONTAINER_IMAGE = addons-task-service:latest
# environment
HOSTTYPE = x86_64
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
+F = $(notdir $+)
# environment
WSL_INTEROP = /run/WSL/11_interop
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 5)
DOCKER_BUILD_ARGS = 
# environment
LOGNAME = au
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/dwiwa/.vscode/extensions/ms-vscode-remote.remote-wsl-0.72.0
# makefile
.DEFAULT_GOAL := build
# environment
USER = au
# default
MAKE_VERSION := 4.3
# makefile (from 'Makefile', line 11)
TOPDIR = $(PWD)
# makefile (from 'Makefile', line 1)
DOCKERCMD = docker
# environment
_ = /home/au/.vscode-server/bin/6261075646f055b99068d3688932416f2346dd3b/node
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-708123df-c910-4d23-a1a0-098ddba58351.sock
# environment
GOMODCACHE = /home/au/go/pkg/mod
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/au
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
TERM = xterm-256color
# environment
GOPROXY = https://proxy.golang.org,direct
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# environment
WSL_DISTRO_NAME = Ubuntu
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# variable set hash-table stats:
# Load=75/1024=7%, Rehash=0, Collisions=2/114=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 85106): 23 files, no impossibilities.

# 23 files, no impossibilities in 1 directories.

# Implicit Rules

guard-%:
#  recipe to execute (from 'Makefile', line 28):
	@if [ -z '${${*}}' ]; then echo 'Environment variable $* not set' && exit 1; fi

# 1 implicit rules, 0 (0.0%) terminal.
# Files

depend:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := depend
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'Makefile', line 55):
	@echo "Pulling all Go dependencies"
	go mod download
	go mod verify
	go mod tidy
	@echo "You can now run 'make build' to compile all packages"

solr:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

generate:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 46):
	go generate ./...

default: depend
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-12-05 20:26:23.654229
#  File has been updated.
#  Successfully updated.

migrate-db:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 52):
	go run ./server/ db-migrate

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 71):
	rm -f $(BINARY)
	rm -f $(BINARY).exe

unit-test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	@echo "Executing go unit test"
	go test -v -json -count=1 -parallel=4 ./...
	@echo "Unit test done"

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: depend generate build unit-test
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

run:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 49):
	go run ./server/ grpc-gw-server

vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	@echo "Running Go static code analysis with go vet"
	go vet -asmdecl -atomic -bool -buildtags -copylocks -httpresponse -loopclosure -lostcancel -methods -nilfunc -printf -rangeloops -shift -structtag -tests -unreachable -unsafeptr ./...
	@echo "go vet complete"

 
build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 31):
	@echo "Executing go build"
	go build -v -buildmode=pie -ldflags "-X main.version=$(BUILD_VERSION)" -o app ./server/
	@echo "Binary ready"

.FORCE:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

generates:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install: depend build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

docker-build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 62):
	$(DOCKERCMD) build -t $(DOCKER_CONTAINER_IMAGE) --build-arg GOPROXY=$(GOPROXY) --build-arg GOSUMDB=$(GOSUMDB) --build-arg BUILD_VERSION=$(BUILD_VERSION) $(DOCKER_BUILD_ARGS) .

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: build vet unit-test generates depend docker-build solr clean install all .FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=19/1024=2%, Rehash=0, Collisions=0/66=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 44 / storage = 419 B / avg = 9 B
# current buf: size = 8162 B / used = 419 B / count = 44 / avg = 9 B

# strcache performance: lookups = 100 / hit rate = 56%
# hash-table stats:
# Load=44/8192=1%, Rehash=0, Collisions=0/100=0%
# Finished Make data base on Mon Dec  5 20:26:50 2022

 
