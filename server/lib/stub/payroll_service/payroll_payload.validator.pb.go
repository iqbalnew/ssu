// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: payroll_payload.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PayrollDataJob) Validate() error {
	if this.ScheduledAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ScheduledAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ScheduledAt", err)
		}
	}
	if this.InquiryResult != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.InquiryResult); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("InquiryResult", err)
		}
	}
	if this.TransferResult != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TransferResult); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TransferResult", err)
		}
	}
	return nil
}
func (this *PayrollData) Validate() error {
	if this.ScheduledAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ScheduledAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ScheduledAt", err)
		}
	}
	return nil
}
func (this *PayrollDataList) Validate() error {
	if this.ScheduledAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ScheduledAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ScheduledAt", err)
		}
	}
	return nil
}
func (this *PayrollDataDetail) Validate() error {
	if this.ScheduledAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ScheduledAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ScheduledAt", err)
		}
	}
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *PayrollItemDetail) Validate() error {
	if this.Validation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Validation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Validation", err)
		}
	}
	return nil
}
func (this *PayrollItem) Validate() error {
	if !(this.Amount >= 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Amount", fmt.Errorf(`value '%v' must be greater than or equal to '0'`, this.Amount))
	}
	return nil
}
func (this *PayrollItemValidation) Validate() error {
	if this.BeneficiaryAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BeneficiaryAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BeneficiaryAccount", err)
		}
	}
	if this.BeneficiaryName != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BeneficiaryName); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BeneficiaryName", err)
		}
	}
	if this.BeneficiaryEmail != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BeneficiaryEmail); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BeneficiaryEmail", err)
		}
	}
	if this.Amount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Amount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Amount", err)
		}
	}
	return nil
}
func (this *PayrollItemValidationData) Validate() error {
	return nil
}
func (this *TaskPayrollData) Validate() error {
	if this.Task != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Task); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Task", err)
		}
	}
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	if this.Workflow != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Workflow); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Workflow", err)
		}
	}
	return nil
}
func (this *TaskPayrollDataList) Validate() error {
	if this.Task != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Task); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Task", err)
		}
	}
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	if this.Workflow != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Workflow); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Workflow", err)
		}
	}
	return nil
}
func (this *DecodePayrollFileRequest) Validate() error {
	return nil
}
func (this *DecodePayrollFileResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *DecodePayrollData) Validate() error {
	for _, item := range this.Rows {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rows", err)
			}
		}
	}
	return nil
}
func (this *DecodePayrollRow) Validate() error {
	return nil
}
func (this *GetTaskPayrollFileRequest) Validate() error {
	return nil
}
func (this *GetTaskPayrollFileResponse) Validate() error {
	return nil
}
func (this *GetTaskPayrollRequest) Validate() error {
	return nil
}
func (this *GetTaskPayrollResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *GetTaskPayrollDetailRequest) Validate() error {
	return nil
}
func (this *GetTaskPayrollDetailResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *CreateTaskPayrollRequest) Validate() error {
	if this.ScheduledAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ScheduledAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ScheduledAt", err)
		}
	}
	return nil
}
func (this *CreateTaskPayrollResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *CreateTaskPayrollResponseData) Validate() error {
	return nil
}
func (this *CancelTransferPayrollRequest) Validate() error {
	return nil
}
func (this *CancelTransferPayrollResponse) Validate() error {
	return nil
}
func (this *RunMassInquiryJobRequest) Validate() error {
	return nil
}
func (this *RunMassInquiryJobResponse) Validate() error {
	return nil
}
func (this *RunMassTransferJobRequest) Validate() error {
	return nil
}
func (this *RunMassTransferJobResponse) Validate() error {
	return nil
}
func (this *RunCreateMassTransferJobRequest) Validate() error {
	return nil
}
func (this *RunCreateMassTransferJobResponse) Validate() error {
	return nil
}
func (this *RunFileCheckingPayrollJobRequest) Validate() error {
	return nil
}
func (this *RunFileCheckingPayrollJobResponse) Validate() error {
	return nil
}
func (this *ExecFileCheckingPayrollJobRequest) Validate() error {
	return nil
}
func (this *ExecFileCheckingPayrollJobResponse) Validate() error {
	return nil
}
func (this *SetTaskPayrollRequest) Validate() error {
	return nil
}
func (this *SetTaskPayrollResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *InquiryResult) Validate() error {
	return nil
}
func (this *InquiryResultItem) Validate() error {
	return nil
}
func (this *CreateMassInquiryRequest) Validate() error {
	return nil
}
func (this *CreateMassInquiryResponse) Validate() error {
	return nil
}
func (this *CreateMassTransferRequest) Validate() error {
	return nil
}
func (this *CreateMassTransferResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *CreateMassTransferResponseData) Validate() error {
	if this.TaskData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TaskData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TaskData", err)
		}
	}
	return nil
}
