// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: liquidity_payload.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *LoginRequest) Validate() error {
	return nil
}
func (this *LoginResponse) Validate() error {
	return nil
}
func (this *HealthCheckResponse) Validate() error {
	return nil
}
func (this *Empty) Validate() error {
	return nil
}
func (this *PaginationResponse) Validate() error {
	return nil
}
func (this *Sort) Validate() error {
	return nil
}
func (this *ErrorBodyResponse) Validate() error {
	return nil
}
func (this *ListTaskLiquidityRequest) Validate() error {
	return nil
}
func (this *ListLiquidityTaskResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *ListTaskLiquidityRes) Validate() error {
	if this.CompanyGroup != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CompanyGroup); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CompanyGroup", err)
		}
	}
	if this.Company != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Company); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Company", err)
		}
	}
	if this.CurrencyTask != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CurrencyTask); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CurrencyTask", err)
		}
	}
	for _, item := range this.Cashflow {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cashflow", err)
			}
		}
	}
	if this.Task != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Task); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Task", err)
		}
	}
	return nil
}
func (this *CompanyGroupListTask) Validate() error {
	return nil
}
func (this *CompanyListTask) Validate() error {
	return nil
}
func (this *CurrencyListTask) Validate() error {
	return nil
}
func (this *CashflowsListTask) Validate() error {
	return nil
}
func (this *TaskListTask) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *DetailLiquidityTaskRequest) Validate() error {
	return nil
}
func (this *DetailLiquidityTaskResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *DetailTaskLiquidityRes) Validate() error {
	if this.CompanyGroup != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CompanyGroup); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CompanyGroup", err)
		}
	}
	if this.Company != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Company); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Company", err)
		}
	}
	if this.CurrencyTask != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CurrencyTask); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CurrencyTask", err)
		}
	}
	for _, item := range this.Cashflows {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cashflows", err)
			}
		}
	}
	if this.Task != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Task); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Task", err)
		}
	}
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *CompanyGroupDetailTask) Validate() error {
	return nil
}
func (this *CompanyDetailTask) Validate() error {
	return nil
}
func (this *CurrencyDetailTask) Validate() error {
	return nil
}
func (this *CashflowsDetailTask) Validate() error {
	return nil
}
func (this *CreateLiquidityRequest) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *CreateTaskLiquidityRequest) Validate() error {
	if this.Company != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Company); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Company", err)
		}
	}
	if this.CompanyGroup != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CompanyGroup); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CompanyGroup", err)
		}
	}
	if this.Currency != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Currency); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Currency", err)
		}
	}
	for _, item := range this.Cashflow {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cashflow", err)
			}
		}
	}
	for _, item := range this.PriorityUpdates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PriorityUpdates", err)
			}
		}
	}
	return nil
}
func (this *CompanyCreateTask) Validate() error {
	return nil
}
func (this *CompanyGroupCreateTask) Validate() error {
	return nil
}
func (this *CurrencyCreateTask) Validate() error {
	return nil
}
func (this *PriorityUpdatesCreateTask) Validate() error {
	return nil
}
func (this *CashflowsCreateTask) Validate() error {
	return nil
}
func (this *CreateTaskLiquidityResponse) Validate() error {
	return nil
}
func (this *DeleteLiquidityTaskRequest) Validate() error {
	return nil
}
func (this *DeleteTaskLiquidityResponse) Validate() error {
	return nil
}
