// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: liquidity_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListTaskLiquidityRequestStatuses int32

const (
	ListTaskLiquidityRequest_AllStatus     ListTaskLiquidityRequestStatuses = 0
	ListTaskLiquidityRequest_Pending       ListTaskLiquidityRequestStatuses = 1
	ListTaskLiquidityRequest_Draft         ListTaskLiquidityRequestStatuses = 2
	ListTaskLiquidityRequest_Returned      ListTaskLiquidityRequestStatuses = 3
	ListTaskLiquidityRequest_Approved      ListTaskLiquidityRequestStatuses = 4
	ListTaskLiquidityRequest_Rejected      ListTaskLiquidityRequestStatuses = 5
	ListTaskLiquidityRequest_DeleteRequest ListTaskLiquidityRequestStatuses = 6
)

// Enum value maps for ListTaskLiquidityRequestStatuses.
var (
	ListTaskLiquidityRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
	}
	ListTaskLiquidityRequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
	}
)

func (x ListTaskLiquidityRequestStatuses) Enum() *ListTaskLiquidityRequestStatuses {
	p := new(ListTaskLiquidityRequestStatuses)
	*p = x
	return p
}

func (x ListTaskLiquidityRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTaskLiquidityRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[0].Descriptor()
}

func (ListTaskLiquidityRequestStatuses) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[0]
}

func (x ListTaskLiquidityRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTaskLiquidityRequestStatuses.Descriptor instead.
func (ListTaskLiquidityRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{9, 0}
}

type ListTaskLiquidityRequestSteps int32

const (
	ListTaskLiquidityRequest_AllStep  ListTaskLiquidityRequestSteps = 0
	ListTaskLiquidityRequest_Maker    ListTaskLiquidityRequestSteps = 1
	ListTaskLiquidityRequest_Checker  ListTaskLiquidityRequestSteps = 2
	ListTaskLiquidityRequest_Signer   ListTaskLiquidityRequestSteps = 3
	ListTaskLiquidityRequest_Releaser ListTaskLiquidityRequestSteps = 4
)

// Enum value maps for ListTaskLiquidityRequestSteps.
var (
	ListTaskLiquidityRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListTaskLiquidityRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListTaskLiquidityRequestSteps) Enum() *ListTaskLiquidityRequestSteps {
	p := new(ListTaskLiquidityRequestSteps)
	*p = x
	return p
}

func (x ListTaskLiquidityRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTaskLiquidityRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[1].Descriptor()
}

func (ListTaskLiquidityRequestSteps) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[1]
}

func (x ListTaskLiquidityRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTaskLiquidityRequestSteps.Descriptor instead.
func (ListTaskLiquidityRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{9, 1}
}

type ListTaskLiquidityRequestDirection int32

const (
	ListTaskLiquidityRequest_DESC ListTaskLiquidityRequestDirection = 0
	ListTaskLiquidityRequest_ASC  ListTaskLiquidityRequestDirection = 1
)

// Enum value maps for ListTaskLiquidityRequestDirection.
var (
	ListTaskLiquidityRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListTaskLiquidityRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListTaskLiquidityRequestDirection) Enum() *ListTaskLiquidityRequestDirection {
	p := new(ListTaskLiquidityRequestDirection)
	*p = x
	return p
}

func (x ListTaskLiquidityRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTaskLiquidityRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[2].Descriptor()
}

func (ListTaskLiquidityRequestDirection) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[2]
}

func (x ListTaskLiquidityRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTaskLiquidityRequestDirection.Descriptor instead.
func (ListTaskLiquidityRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{9, 2}
}

type DownloadListTaskLiquidityRequestStatuses int32

const (
	DownloadListTaskLiquidityRequest_AllStatus DownloadListTaskLiquidityRequestStatuses = 0
	DownloadListTaskLiquidityRequest_Pending   DownloadListTaskLiquidityRequestStatuses = 1
	DownloadListTaskLiquidityRequest_Draft     DownloadListTaskLiquidityRequestStatuses = 2
	DownloadListTaskLiquidityRequest_Returned  DownloadListTaskLiquidityRequestStatuses = 3
	DownloadListTaskLiquidityRequest_Approved  DownloadListTaskLiquidityRequestStatuses = 4
	DownloadListTaskLiquidityRequest_Rejected  DownloadListTaskLiquidityRequestStatuses = 5
)

// Enum value maps for DownloadListTaskLiquidityRequestStatuses.
var (
	DownloadListTaskLiquidityRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	DownloadListTaskLiquidityRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x DownloadListTaskLiquidityRequestStatuses) Enum() *DownloadListTaskLiquidityRequestStatuses {
	p := new(DownloadListTaskLiquidityRequestStatuses)
	*p = x
	return p
}

func (x DownloadListTaskLiquidityRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListTaskLiquidityRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[3].Descriptor()
}

func (DownloadListTaskLiquidityRequestStatuses) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[3]
}

func (x DownloadListTaskLiquidityRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListTaskLiquidityRequestStatuses.Descriptor instead.
func (DownloadListTaskLiquidityRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{10, 0}
}

type DownloadListTaskLiquidityRequestSteps int32

const (
	DownloadListTaskLiquidityRequest_AllStep  DownloadListTaskLiquidityRequestSteps = 0
	DownloadListTaskLiquidityRequest_Maker    DownloadListTaskLiquidityRequestSteps = 1
	DownloadListTaskLiquidityRequest_Checker  DownloadListTaskLiquidityRequestSteps = 2
	DownloadListTaskLiquidityRequest_Signer   DownloadListTaskLiquidityRequestSteps = 3
	DownloadListTaskLiquidityRequest_Releaser DownloadListTaskLiquidityRequestSteps = 4
)

// Enum value maps for DownloadListTaskLiquidityRequestSteps.
var (
	DownloadListTaskLiquidityRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	DownloadListTaskLiquidityRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x DownloadListTaskLiquidityRequestSteps) Enum() *DownloadListTaskLiquidityRequestSteps {
	p := new(DownloadListTaskLiquidityRequestSteps)
	*p = x
	return p
}

func (x DownloadListTaskLiquidityRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListTaskLiquidityRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[4].Descriptor()
}

func (DownloadListTaskLiquidityRequestSteps) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[4]
}

func (x DownloadListTaskLiquidityRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListTaskLiquidityRequestSteps.Descriptor instead.
func (DownloadListTaskLiquidityRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{10, 1}
}

type DownloadListTaskLiquidityRequestDirection int32

const (
	DownloadListTaskLiquidityRequest_DESC DownloadListTaskLiquidityRequestDirection = 0
	DownloadListTaskLiquidityRequest_ASC  DownloadListTaskLiquidityRequestDirection = 1
)

// Enum value maps for DownloadListTaskLiquidityRequestDirection.
var (
	DownloadListTaskLiquidityRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	DownloadListTaskLiquidityRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x DownloadListTaskLiquidityRequestDirection) Enum() *DownloadListTaskLiquidityRequestDirection {
	p := new(DownloadListTaskLiquidityRequestDirection)
	*p = x
	return p
}

func (x DownloadListTaskLiquidityRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListTaskLiquidityRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[5].Descriptor()
}

func (DownloadListTaskLiquidityRequestDirection) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[5]
}

func (x DownloadListTaskLiquidityRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListTaskLiquidityRequestDirection.Descriptor instead.
func (DownloadListTaskLiquidityRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{10, 2}
}

type DownloadListTaskLiquidityRequest_Formats int32

const (
	DownloadListTaskLiquidityRequest_null DownloadListTaskLiquidityRequest_Formats = 0
	DownloadListTaskLiquidityRequest_pdf  DownloadListTaskLiquidityRequest_Formats = 1
	DownloadListTaskLiquidityRequest_xls  DownloadListTaskLiquidityRequest_Formats = 2
	DownloadListTaskLiquidityRequest_csv  DownloadListTaskLiquidityRequest_Formats = 3
)

// Enum value maps for DownloadListTaskLiquidityRequest_Formats.
var (
	DownloadListTaskLiquidityRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	DownloadListTaskLiquidityRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x DownloadListTaskLiquidityRequest_Formats) Enum() *DownloadListTaskLiquidityRequest_Formats {
	p := new(DownloadListTaskLiquidityRequest_Formats)
	*p = x
	return p
}

func (x DownloadListTaskLiquidityRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListTaskLiquidityRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[6].Descriptor()
}

func (DownloadListTaskLiquidityRequest_Formats) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[6]
}

func (x DownloadListTaskLiquidityRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListTaskLiquidityRequest_Formats.Descriptor instead.
func (DownloadListTaskLiquidityRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{10, 3}
}

type ListDataRequestDirection int32

const (
	ListDataRequest_DESC ListDataRequestDirection = 0
	ListDataRequest_ASC  ListDataRequestDirection = 1
)

// Enum value maps for ListDataRequestDirection.
var (
	ListDataRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListDataRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListDataRequestDirection) Enum() *ListDataRequestDirection {
	p := new(ListDataRequestDirection)
	*p = x
	return p
}

func (x ListDataRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListDataRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[7].Descriptor()
}

func (ListDataRequestDirection) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[7]
}

func (x ListDataRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListDataRequestDirection.Descriptor instead.
func (ListDataRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{42, 0}
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ArrayString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ArrayString) Reset() {
	*x = ArrayString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayString) ProtoMessage() {}

func (x *ArrayString) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayString.ProtoReflect.Descriptor instead.
func (*ArrayString) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{3}
}

func (x *ArrayString) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ArrayString) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ArrayString) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ArrayString) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{4}
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{5}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{6}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListLiquidityFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Company           string `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	CreateBy          string `protobuf:"bytes,3,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	ReviewedBy        string `protobuf:"bytes,4,opt,name=reviewed_by,json=reviewedBy,proto3" json:"reviewed_by,omitempty"`
	SchemeType        string `protobuf:"bytes,5,opt,name=scheme_type,json=schemeType,proto3" json:"scheme_type,omitempty"`
	FlowType          string `protobuf:"bytes,6,opt,name=flow_type,json=flowType,proto3" json:"flow_type,omitempty"`
	Period            string `protobuf:"bytes,7,opt,name=period,proto3" json:"period,omitempty"`
	StartDate         string `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate           string `protobuf:"bytes,9,opt,name=endDate,proto3" json:"endDate,omitempty"`
	StartDateModified string `protobuf:"bytes,10,opt,name=startDateModified,proto3" json:"startDateModified,omitempty"`
	EndDateModified   string `protobuf:"bytes,11,opt,name=endDateModified,proto3" json:"endDateModified,omitempty"`
	RunningStatus     string `protobuf:"bytes,12,opt,name=running_status,json=runningStatus,proto3" json:"running_status,omitempty"`
}

func (x *ListLiquidityFilter) Reset() {
	*x = ListLiquidityFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLiquidityFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiquidityFilter) ProtoMessage() {}

func (x *ListLiquidityFilter) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiquidityFilter.ProtoReflect.Descriptor instead.
func (*ListLiquidityFilter) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{8}
}

func (x *ListLiquidityFilter) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListLiquidityFilter) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ListLiquidityFilter) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ListLiquidityFilter) GetReviewedBy() string {
	if x != nil {
		return x.ReviewedBy
	}
	return ""
}

func (x *ListLiquidityFilter) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *ListLiquidityFilter) GetFlowType() string {
	if x != nil {
		return x.FlowType
	}
	return ""
}

func (x *ListLiquidityFilter) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *ListLiquidityFilter) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListLiquidityFilter) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListLiquidityFilter) GetStartDateModified() string {
	if x != nil {
		return x.StartDateModified
	}
	return ""
}

func (x *ListLiquidityFilter) GetEndDateModified() string {
	if x != nil {
		return x.EndDateModified
	}
	return ""
}

func (x *ListLiquidityFilter) GetRunningStatus() string {
	if x != nil {
		return x.RunningStatus
	}
	return ""
}

type ListTaskLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListTaskLiquidityRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=liquidity.service.v1.ListTaskLiquidityRequestStatuses" json:"status,omitempty"`
	Step   ListTaskLiquidityRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=liquidity.service.v1.ListTaskLiquidityRequestSteps" json:"step,omitempty"`
	Limit  int32                             `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                            `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListTaskLiquidityRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=liquidity.service.v1.ListTaskLiquidityRequestDirection" json:"dir,omitempty"`
	Filter *ListLiquidityFilter              `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search string                            `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *ListTaskLiquidityRequest) Reset() {
	*x = ListTaskLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLiquidityRequest) ProtoMessage() {}

func (x *ListTaskLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLiquidityRequest.ProtoReflect.Descriptor instead.
func (*ListTaskLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{9}
}

func (x *ListTaskLiquidityRequest) GetStatus() ListTaskLiquidityRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListTaskLiquidityRequest_AllStatus
}

func (x *ListTaskLiquidityRequest) GetStep() ListTaskLiquidityRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListTaskLiquidityRequest_AllStep
}

func (x *ListTaskLiquidityRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTaskLiquidityRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTaskLiquidityRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListTaskLiquidityRequest) GetDir() ListTaskLiquidityRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListTaskLiquidityRequest_DESC
}

func (x *ListTaskLiquidityRequest) GetFilter() *ListLiquidityFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListTaskLiquidityRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type DownloadListTaskLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     DownloadListTaskLiquidityRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=liquidity.service.v1.DownloadListTaskLiquidityRequestStatuses" json:"status,omitempty"`
	Step       DownloadListTaskLiquidityRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=liquidity.service.v1.DownloadListTaskLiquidityRequestSteps" json:"step,omitempty"`
	Limit      int32                                     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                    `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        DownloadListTaskLiquidityRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=liquidity.service.v1.DownloadListTaskLiquidityRequestDirection" json:"dir,omitempty"`
	Filter     *ListLiquidityFilter                      `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                                    `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	FileFormat DownloadListTaskLiquidityRequest_Formats  `protobuf:"varint,15,opt,name=fileFormat,proto3,enum=liquidity.service.v1.DownloadListTaskLiquidityRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *DownloadListTaskLiquidityRequest) Reset() {
	*x = DownloadListTaskLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadListTaskLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadListTaskLiquidityRequest) ProtoMessage() {}

func (x *DownloadListTaskLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadListTaskLiquidityRequest.ProtoReflect.Descriptor instead.
func (*DownloadListTaskLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadListTaskLiquidityRequest) GetStatus() DownloadListTaskLiquidityRequestStatuses {
	if x != nil {
		return x.Status
	}
	return DownloadListTaskLiquidityRequest_AllStatus
}

func (x *DownloadListTaskLiquidityRequest) GetStep() DownloadListTaskLiquidityRequestSteps {
	if x != nil {
		return x.Step
	}
	return DownloadListTaskLiquidityRequest_AllStep
}

func (x *DownloadListTaskLiquidityRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DownloadListTaskLiquidityRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DownloadListTaskLiquidityRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DownloadListTaskLiquidityRequest) GetDir() DownloadListTaskLiquidityRequestDirection {
	if x != nil {
		return x.Dir
	}
	return DownloadListTaskLiquidityRequest_DESC
}

func (x *DownloadListTaskLiquidityRequest) GetFilter() *ListLiquidityFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DownloadListTaskLiquidityRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *DownloadListTaskLiquidityRequest) GetFileFormat() DownloadListTaskLiquidityRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return DownloadListTaskLiquidityRequest_null
}

type ListLiquidityTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*ListTaskLiquidityRes `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse     `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListLiquidityTaskResponse) Reset() {
	*x = ListLiquidityTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLiquidityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiquidityTaskResponse) ProtoMessage() {}

func (x *ListLiquidityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiquidityTaskResponse.ProtoReflect.Descriptor instead.
func (*ListLiquidityTaskResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{11}
}

func (x *ListLiquidityTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListLiquidityTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListLiquidityTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListLiquidityTaskResponse) GetData() []*ListTaskLiquidityRes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListLiquidityTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListTaskLiquidityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string                `protobuf:"bytes,15,opt,name=code,proto3" json:"code,omitempty"`
	LiquidityID  uint64                `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	CompanyGroup *CompanyGroupListTask `protobuf:"bytes,2,opt,name=companyGroup,proto3" json:"companyGroup,omitempty"`
	Company      *CompanyListTask      `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Currency     *CurrencyListTask     `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	SchemeType   string                `protobuf:"bytes,5,opt,name=schemeType,proto3" json:"schemeType,omitempty"`
	Description  string                `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Cashflow     []*CashflowsListTask  `protobuf:"bytes,7,rep,name=cashflow,proto3" json:"cashflow,omitempty"`
	StartDate    string                `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      string                `protobuf:"bytes,9,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Disabled     bool                  `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Priority     int32                 `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	Task         *TaskListTask         `protobuf:"bytes,12,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *ListTaskLiquidityRes) Reset() {
	*x = ListTaskLiquidityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLiquidityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLiquidityRes) ProtoMessage() {}

func (x *ListTaskLiquidityRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLiquidityRes.ProtoReflect.Descriptor instead.
func (*ListTaskLiquidityRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{12}
}

func (x *ListTaskLiquidityRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *ListTaskLiquidityRes) GetCompanyGroup() *CompanyGroupListTask {
	if x != nil {
		return x.CompanyGroup
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetCompany() *CompanyListTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetCurrency() *CurrencyListTask {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetCashflow() []*CashflowsListTask {
	if x != nil {
		return x.Cashflow
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *ListTaskLiquidityRes) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ListTaskLiquidityRes) GetTask() *TaskListTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type CompanyGroupListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyGroupID uint64 `protobuf:"varint,1,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyGroupListTask) Reset() {
	*x = CompanyGroupListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGroupListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGroupListTask) ProtoMessage() {}

func (x *CompanyGroupListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGroupListTask.ProtoReflect.Descriptor instead.
func (*CompanyGroupListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{13}
}

func (x *CompanyGroupListTask) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CompanyGroupListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyListTask) Reset() {
	*x = CompanyListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyListTask) ProtoMessage() {}

func (x *CompanyListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyListTask.ProtoReflect.Descriptor instead.
func (*CompanyListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{14}
}

func (x *CompanyListTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanyListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CurrencyListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CurrencyID uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
}

func (x *CurrencyListTask) Reset() {
	*x = CurrencyListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyListTask) ProtoMessage() {}

func (x *CurrencyListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyListTask.ProtoReflect.Descriptor instead.
func (*CurrencyListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{15}
}

func (x *CurrencyListTask) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CurrencyListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrencyListTask) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

type CashflowsListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashflowID   string `protobuf:"bytes,1,opt,name=cashflowID,proto3" json:"cashflowID,omitempty"`
	CashflowType string `protobuf:"bytes,2,opt,name=cashflowType,proto3" json:"cashflowType,omitempty"`
	// string type = 3;
	Period         string                     `protobuf:"bytes,4,opt,name=period,proto3" json:"period,omitempty"`
	PeriodTime     string                     `protobuf:"bytes,5,opt,name=periodTime,proto3" json:"periodTime,omitempty"`
	TBAType        string                     `protobuf:"bytes,6,opt,name=TBAType,proto3" json:"TBAType,omitempty"`
	TBAValue       int64                      `protobuf:"varint,7,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	TBARoundedBase bool                       `protobuf:"varint,8,opt,name=TBARoundedBase,proto3" json:"TBARoundedBase,omitempty"`
	TBATopValue    int64                      `protobuf:"varint,9,opt,name=TBATopValue,proto3" json:"TBATopValue,omitempty"`
	TBABottomValue int64                      `protobuf:"varint,10,opt,name=TBABottomValue,proto3" json:"TBABottomValue,omitempty"`
	TBAFillDefisit bool                       `protobuf:"varint,11,opt,name=TBAFillDefisit,proto3" json:"TBAFillDefisit,omitempty"`
	TBAFillToTop   bool                       `protobuf:"varint,12,opt,name=TBAFillToTop,proto3" json:"TBAFillToTop,omitempty"`
	Recurring      bool                       `protobuf:"varint,13,opt,name=recurring,proto3" json:"recurring,omitempty"`
	RecurringValue string                     `protobuf:"bytes,22,opt,name=recurringValue,proto3" json:"recurringValue,omitempty"`
	RecurringDate  int64                      `protobuf:"varint,23,opt,name=recurringDate,proto3" json:"recurringDate,omitempty"`
	Source         []*LiquiditySourceRes      `protobuf:"bytes,14,rep,name=source,proto3" json:"source,omitempty"`
	Beneficiary    []*LiquidityBeneficiaryRes `protobuf:"bytes,15,rep,name=beneficiary,proto3" json:"beneficiary,omitempty"`
}

func (x *CashflowsListTask) Reset() {
	*x = CashflowsListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowsListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowsListTask) ProtoMessage() {}

func (x *CashflowsListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowsListTask.ProtoReflect.Descriptor instead.
func (*CashflowsListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{16}
}

func (x *CashflowsListTask) GetCashflowID() string {
	if x != nil {
		return x.CashflowID
	}
	return ""
}

func (x *CashflowsListTask) GetCashflowType() string {
	if x != nil {
		return x.CashflowType
	}
	return ""
}

func (x *CashflowsListTask) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CashflowsListTask) GetPeriodTime() string {
	if x != nil {
		return x.PeriodTime
	}
	return ""
}

func (x *CashflowsListTask) GetTBAType() string {
	if x != nil {
		return x.TBAType
	}
	return ""
}

func (x *CashflowsListTask) GetTBAValue() int64 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *CashflowsListTask) GetTBARoundedBase() bool {
	if x != nil {
		return x.TBARoundedBase
	}
	return false
}

func (x *CashflowsListTask) GetTBATopValue() int64 {
	if x != nil {
		return x.TBATopValue
	}
	return 0
}

func (x *CashflowsListTask) GetTBABottomValue() int64 {
	if x != nil {
		return x.TBABottomValue
	}
	return 0
}

func (x *CashflowsListTask) GetTBAFillDefisit() bool {
	if x != nil {
		return x.TBAFillDefisit
	}
	return false
}

func (x *CashflowsListTask) GetTBAFillToTop() bool {
	if x != nil {
		return x.TBAFillToTop
	}
	return false
}

func (x *CashflowsListTask) GetRecurring() bool {
	if x != nil {
		return x.Recurring
	}
	return false
}

func (x *CashflowsListTask) GetRecurringValue() string {
	if x != nil {
		return x.RecurringValue
	}
	return ""
}

func (x *CashflowsListTask) GetRecurringDate() int64 {
	if x != nil {
		return x.RecurringDate
	}
	return 0
}

func (x *CashflowsListTask) GetSource() []*LiquiditySourceRes {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CashflowsListTask) GetBeneficiary() []*LiquidityBeneficiaryRes {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

type TaskListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	CreatedByID        uint64                 `protobuf:"varint,10,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,11,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,16,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,12,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	Workflow           string                 `protobuf:"bytes,14,opt,name=workflow,proto3" json:"workflow,omitempty"`
	CompanyID          uint64                 `protobuf:"varint,15,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TaskListTask) Reset() {
	*x = TaskListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListTask) ProtoMessage() {}

func (x *TaskListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListTask.ProtoReflect.Descriptor instead.
func (*TaskListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{17}
}

func (x *TaskListTask) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskListTask) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskListTask) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskListTask) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *TaskListTask) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *TaskListTask) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *TaskListTask) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *TaskListTask) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *TaskListTask) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *TaskListTask) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *TaskListTask) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *TaskListTask) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *TaskListTask) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *TaskListTask) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TaskListTask) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *TaskListTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *TaskListTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskListTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DetailLiquidityTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *DetailLiquidityTaskRequest) Reset() {
	*x = DetailLiquidityTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailLiquidityTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailLiquidityTaskRequest) ProtoMessage() {}

func (x *DetailLiquidityTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailLiquidityTaskRequest.ProtoReflect.Descriptor instead.
func (*DetailLiquidityTaskRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{18}
}

func (x *DetailLiquidityTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type DetailLiquidityTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DetailTaskLiquidityRes `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DetailLiquidityTaskResponse) Reset() {
	*x = DetailLiquidityTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailLiquidityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailLiquidityTaskResponse) ProtoMessage() {}

func (x *DetailLiquidityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailLiquidityTaskResponse.ProtoReflect.Descriptor instead.
func (*DetailLiquidityTaskResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{19}
}

func (x *DetailLiquidityTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DetailLiquidityTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DetailLiquidityTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DetailLiquidityTaskResponse) GetData() *DetailTaskLiquidityRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type DetailTaskLiquidityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string                  `protobuf:"bytes,18,opt,name=code,proto3" json:"code,omitempty"`
	LiquidityID  uint64                  `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	CompanyGroup *CompanyGroupDetailTask `protobuf:"bytes,2,opt,name=companyGroup,proto3" json:"companyGroup,omitempty"`
	Company      *CompanyDetailTask      `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Currency     *CurrencyDetailTask     `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	SchemeType   string                  `protobuf:"bytes,5,opt,name=schemeType,proto3" json:"schemeType,omitempty"`
	Description  string                  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Cashflow     []*CashflowsDetailTask  `protobuf:"bytes,7,rep,name=cashflow,proto3" json:"cashflow,omitempty"`
	StartDate    string                  `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      string                  `protobuf:"bytes,9,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Disabled     bool                    `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Priority     int32                   `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	Task         *TaskListTask           `protobuf:"bytes,12,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DetailTaskLiquidityRes) Reset() {
	*x = DetailTaskLiquidityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTaskLiquidityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTaskLiquidityRes) ProtoMessage() {}

func (x *DetailTaskLiquidityRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTaskLiquidityRes.ProtoReflect.Descriptor instead.
func (*DetailTaskLiquidityRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{20}
}

func (x *DetailTaskLiquidityRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *DetailTaskLiquidityRes) GetCompanyGroup() *CompanyGroupDetailTask {
	if x != nil {
		return x.CompanyGroup
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetCompany() *CompanyDetailTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetCurrency() *CurrencyDetailTask {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetCashflow() []*CashflowsDetailTask {
	if x != nil {
		return x.Cashflow
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *DetailTaskLiquidityRes) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DetailTaskLiquidityRes) GetTask() *TaskListTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type CompanyGroupDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyGroupID uint64 `protobuf:"varint,1,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyGroupDetailTask) Reset() {
	*x = CompanyGroupDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGroupDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGroupDetailTask) ProtoMessage() {}

func (x *CompanyGroupDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGroupDetailTask.ProtoReflect.Descriptor instead.
func (*CompanyGroupDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{21}
}

func (x *CompanyGroupDetailTask) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CompanyGroupDetailTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyDetailTask) Reset() {
	*x = CompanyDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDetailTask) ProtoMessage() {}

func (x *CompanyDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDetailTask.ProtoReflect.Descriptor instead.
func (*CompanyDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{22}
}

func (x *CompanyDetailTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanyDetailTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CurrencyDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyID uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CurrencyDetailTask) Reset() {
	*x = CurrencyDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyDetailTask) ProtoMessage() {}

func (x *CurrencyDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyDetailTask.ProtoReflect.Descriptor instead.
func (*CurrencyDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{23}
}

func (x *CurrencyDetailTask) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CurrencyDetailTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CashflowsDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashflowID     string                     `protobuf:"bytes,1,opt,name=cashflowID,proto3" json:"cashflowID,omitempty"`
	CashflowType   string                     `protobuf:"bytes,2,opt,name=cashflowType,proto3" json:"cashflowType,omitempty"`
	Period         string                     `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	PeriodTime     string                     `protobuf:"bytes,4,opt,name=periodTime,proto3" json:"periodTime,omitempty"`
	TBAType        string                     `protobuf:"bytes,5,opt,name=TBAType,proto3" json:"TBAType,omitempty"`
	TBAValue       int64                      `protobuf:"varint,6,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	TBARoundedBase bool                       `protobuf:"varint,7,opt,name=TBARoundedBase,proto3" json:"TBARoundedBase,omitempty"`
	TBATopValue    int64                      `protobuf:"varint,8,opt,name=TBATopValue,proto3" json:"TBATopValue,omitempty"`
	TBABottomValue int64                      `protobuf:"varint,9,opt,name=TBABottomValue,proto3" json:"TBABottomValue,omitempty"`
	TBAFillDefisit bool                       `protobuf:"varint,10,opt,name=TBAFillDefisit,proto3" json:"TBAFillDefisit,omitempty"`
	TBAFillToTop   bool                       `protobuf:"varint,11,opt,name=TBAFillToTop,proto3" json:"TBAFillToTop,omitempty"`
	Recurring      bool                       `protobuf:"varint,12,opt,name=recurring,proto3" json:"recurring,omitempty"`
	RecurringValue string                     `protobuf:"bytes,22,opt,name=recurringValue,proto3" json:"recurringValue,omitempty"`
	RecurringDate  int64                      `protobuf:"varint,23,opt,name=recurringDate,proto3" json:"recurringDate,omitempty"`
	Source         []*LiquiditySourceRes      `protobuf:"bytes,13,rep,name=source,proto3" json:"source,omitempty"`
	Beneficiary    []*LiquidityBeneficiaryRes `protobuf:"bytes,14,rep,name=beneficiary,proto3" json:"beneficiary,omitempty"`
}

func (x *CashflowsDetailTask) Reset() {
	*x = CashflowsDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowsDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowsDetailTask) ProtoMessage() {}

func (x *CashflowsDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowsDetailTask.ProtoReflect.Descriptor instead.
func (*CashflowsDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{24}
}

func (x *CashflowsDetailTask) GetCashflowID() string {
	if x != nil {
		return x.CashflowID
	}
	return ""
}

func (x *CashflowsDetailTask) GetCashflowType() string {
	if x != nil {
		return x.CashflowType
	}
	return ""
}

func (x *CashflowsDetailTask) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CashflowsDetailTask) GetPeriodTime() string {
	if x != nil {
		return x.PeriodTime
	}
	return ""
}

func (x *CashflowsDetailTask) GetTBAType() string {
	if x != nil {
		return x.TBAType
	}
	return ""
}

func (x *CashflowsDetailTask) GetTBAValue() int64 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *CashflowsDetailTask) GetTBARoundedBase() bool {
	if x != nil {
		return x.TBARoundedBase
	}
	return false
}

func (x *CashflowsDetailTask) GetTBATopValue() int64 {
	if x != nil {
		return x.TBATopValue
	}
	return 0
}

func (x *CashflowsDetailTask) GetTBABottomValue() int64 {
	if x != nil {
		return x.TBABottomValue
	}
	return 0
}

func (x *CashflowsDetailTask) GetTBAFillDefisit() bool {
	if x != nil {
		return x.TBAFillDefisit
	}
	return false
}

func (x *CashflowsDetailTask) GetTBAFillToTop() bool {
	if x != nil {
		return x.TBAFillToTop
	}
	return false
}

func (x *CashflowsDetailTask) GetRecurring() bool {
	if x != nil {
		return x.Recurring
	}
	return false
}

func (x *CashflowsDetailTask) GetRecurringValue() string {
	if x != nil {
		return x.RecurringValue
	}
	return ""
}

func (x *CashflowsDetailTask) GetRecurringDate() int64 {
	if x != nil {
		return x.RecurringDate
	}
	return 0
}

func (x *CashflowsDetailTask) GetSource() []*LiquiditySourceRes {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CashflowsDetailTask) GetBeneficiary() []*LiquidityBeneficiaryRes {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

type CreateLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateTaskLiquidityRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64                      `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateLiquidityRequest) Reset() {
	*x = CreateLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquidityRequest) ProtoMessage() {}

func (x *CreateLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquidityRequest.ProtoReflect.Descriptor instead.
func (*CreateLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{25}
}

func (x *CreateLiquidityRequest) GetData() *CreateTaskLiquidityRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateLiquidityRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateTaskLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
	//		example: "{\"companyGroupID\":0,\"companyID\":0,\"currencyID\":0,\"schemeType\":\"string\",\"description\":\"string\",\"cashflow\":[{\"cashflowType\":\"string\",\"period\":\"string\",\"periodTime\":\"15:04:05\",\"TBAType\":\"string\",\"TBAValue\":0,\"TBARoundedBase\":true,\"TBATopValue\":0,\"TBABottomValue\":0,\"TBAFillDefisit\":true,\"TBAFillToTop\":true,\"recurring\":true,\"recurringValue\":\"string\",\"recurringDate\":0,\"source\":[{\"accountID\":0,\"accountAlias\":\"string\"}],\"beneficiary\":[{\"accountID\":0,\"accountAlias\":\"string\",\"TBAValue\":0,\"remark\":\"string\"}]}],\"startDate\":\"2000-01-01\",\"endDate\":\"2000-01-01\",\"priority\":0,\"isDraft\":true}";
	//	};
	Id              uint64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskID          uint64                       `protobuf:"varint,17,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Code            string                       `protobuf:"bytes,18,opt,name=code,proto3" json:"code,omitempty"`
	Company         *CompanyCreateTask           `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	CompanyGroup    *CompanyGroupCreateTask      `protobuf:"bytes,3,opt,name=companyGroup,proto3" json:"companyGroup,omitempty"`
	Currency        *CurrencyCreateTask          `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	CompanyGroupID  uint64                       `protobuf:"varint,5,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	CompanyID       uint64                       `protobuf:"varint,6,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CurrencyID      uint64                       `protobuf:"varint,7,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	SchemeType      string                       `protobuf:"bytes,8,opt,name=schemeType,proto3" json:"schemeType,omitempty"`
	Description     string                       `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Cashflow        []*CashflowsCreateTask       `protobuf:"bytes,10,rep,name=cashflow,proto3" json:"cashflow,omitempty"`
	StartDate       string                       `protobuf:"bytes,11,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate         string                       `protobuf:"bytes,12,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Priority        int32                        `protobuf:"varint,13,opt,name=priority,proto3" json:"priority,omitempty"`
	PriorityUpdates []*PriorityUpdatesCreateTask `protobuf:"bytes,14,rep,name=priorityUpdates,proto3" json:"priorityUpdates,omitempty"`
	IsDraft         bool                         `protobuf:"varint,15,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	Disabled        bool                         `protobuf:"varint,16,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *CreateTaskLiquidityRequest) Reset() {
	*x = CreateTaskLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskLiquidityRequest) ProtoMessage() {}

func (x *CreateTaskLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskLiquidityRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{26}
}

func (x *CreateTaskLiquidityRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetCompany() *CompanyCreateTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetCompanyGroup() *CompanyGroupCreateTask {
	if x != nil {
		return x.CompanyGroup
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetCurrency() *CurrencyCreateTask {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetCashflow() []*CashflowsCreateTask {
	if x != nil {
		return x.Cashflow
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetPriorityUpdates() []*PriorityUpdatesCreateTask {
	if x != nil {
		return x.PriorityUpdates
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *CreateTaskLiquidityRequest) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type LiquiditySourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountAlias  string `protobuf:"bytes,2,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountNumber uint64 `protobuf:"varint,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
}

func (x *LiquiditySourceReq) Reset() {
	*x = LiquiditySourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquiditySourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquiditySourceReq) ProtoMessage() {}

func (x *LiquiditySourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquiditySourceReq.ProtoReflect.Descriptor instead.
func (*LiquiditySourceReq) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{27}
}

func (x *LiquiditySourceReq) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LiquiditySourceReq) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *LiquiditySourceReq) GetAccountNumber() uint64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

type LiquidityBeneficiaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64  `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountAlias  string  `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountNumber uint64  `protobuf:"varint,5,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	TBAValue      float32 `protobuf:"fixed32,2,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	Remark        string  `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *LiquidityBeneficiaryReq) Reset() {
	*x = LiquidityBeneficiaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidityBeneficiaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidityBeneficiaryReq) ProtoMessage() {}

func (x *LiquidityBeneficiaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidityBeneficiaryReq.ProtoReflect.Descriptor instead.
func (*LiquidityBeneficiaryReq) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{28}
}

func (x *LiquidityBeneficiaryReq) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LiquidityBeneficiaryReq) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *LiquidityBeneficiaryReq) GetAccountNumber() uint64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *LiquidityBeneficiaryReq) GetTBAValue() float32 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *LiquidityBeneficiaryReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type LiquiditySourceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountAlias  string `protobuf:"bytes,2,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountNumber string `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
}

func (x *LiquiditySourceRes) Reset() {
	*x = LiquiditySourceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquiditySourceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquiditySourceRes) ProtoMessage() {}

func (x *LiquiditySourceRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquiditySourceRes.ProtoReflect.Descriptor instead.
func (*LiquiditySourceRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{29}
}

func (x *LiquiditySourceRes) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LiquiditySourceRes) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *LiquiditySourceRes) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

type LiquidityBeneficiaryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64  `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountAlias  string  `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountNumber string  `protobuf:"bytes,4,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	TBAValue      float32 `protobuf:"fixed32,2,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	Remark        string  `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *LiquidityBeneficiaryRes) Reset() {
	*x = LiquidityBeneficiaryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidityBeneficiaryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidityBeneficiaryRes) ProtoMessage() {}

func (x *LiquidityBeneficiaryRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidityBeneficiaryRes.ProtoReflect.Descriptor instead.
func (*LiquidityBeneficiaryRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{30}
}

func (x *LiquidityBeneficiaryRes) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LiquidityBeneficiaryRes) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *LiquidityBeneficiaryRes) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *LiquidityBeneficiaryRes) GetTBAValue() float32 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *LiquidityBeneficiaryRes) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CompanyCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyCreateTask) Reset() {
	*x = CompanyCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyCreateTask) ProtoMessage() {}

func (x *CompanyCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyCreateTask.ProtoReflect.Descriptor instead.
func (*CompanyCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{31}
}

func (x *CompanyCreateTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanyCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyGroupCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyGroupID uint64 `protobuf:"varint,1,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyGroupCreateTask) Reset() {
	*x = CompanyGroupCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGroupCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGroupCreateTask) ProtoMessage() {}

func (x *CompanyGroupCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGroupCreateTask.ProtoReflect.Descriptor instead.
func (*CompanyGroupCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{32}
}

func (x *CompanyGroupCreateTask) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CompanyGroupCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CurrencyCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyID uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code       string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CurrencyCreateTask) Reset() {
	*x = CurrencyCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyCreateTask) ProtoMessage() {}

func (x *CurrencyCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyCreateTask.ProtoReflect.Descriptor instead.
func (*CurrencyCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{33}
}

func (x *CurrencyCreateTask) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CurrencyCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrencyCreateTask) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type PriorityUpdatesCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityID uint64 `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	Priority    int32  `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *PriorityUpdatesCreateTask) Reset() {
	*x = PriorityUpdatesCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriorityUpdatesCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriorityUpdatesCreateTask) ProtoMessage() {}

func (x *PriorityUpdatesCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriorityUpdatesCreateTask.ProtoReflect.Descriptor instead.
func (*PriorityUpdatesCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{34}
}

func (x *PriorityUpdatesCreateTask) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *PriorityUpdatesCreateTask) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type CashflowsCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CashflowType   string                     `protobuf:"bytes,2,opt,name=cashflowType,proto3" json:"cashflowType,omitempty"`
	Period         string                     `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	PeriodTime     string                     `protobuf:"bytes,4,opt,name=periodTime,proto3" json:"periodTime,omitempty"`
	TBAType        string                     `protobuf:"bytes,5,opt,name=TBAType,proto3" json:"TBAType,omitempty"`
	TBAValue       int64                      `protobuf:"varint,6,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	TBARoundedBase bool                       `protobuf:"varint,7,opt,name=TBARoundedBase,proto3" json:"TBARoundedBase,omitempty"`
	TBATopValue    int64                      `protobuf:"varint,8,opt,name=TBATopValue,proto3" json:"TBATopValue,omitempty"`
	TBABottomValue int64                      `protobuf:"varint,9,opt,name=TBABottomValue,proto3" json:"TBABottomValue,omitempty"`
	TBAFillDefisit bool                       `protobuf:"varint,10,opt,name=TBAFillDefisit,proto3" json:"TBAFillDefisit,omitempty"`
	TBAFillToTop   bool                       `protobuf:"varint,11,opt,name=TBAFillToTop,proto3" json:"TBAFillToTop,omitempty"`
	Recurring      bool                       `protobuf:"varint,12,opt,name=recurring,proto3" json:"recurring,omitempty"`
	RecurringValue string                     `protobuf:"bytes,22,opt,name=recurringValue,proto3" json:"recurringValue,omitempty"`
	RecurringDate  int64                      `protobuf:"varint,23,opt,name=recurringDate,proto3" json:"recurringDate,omitempty"`
	Source         []*LiquiditySourceReq      `protobuf:"bytes,19,rep,name=source,proto3" json:"source,omitempty"`
	Beneficiary    []*LiquidityBeneficiaryReq `protobuf:"bytes,20,rep,name=beneficiary,proto3" json:"beneficiary,omitempty"`
}

func (x *CashflowsCreateTask) Reset() {
	*x = CashflowsCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowsCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowsCreateTask) ProtoMessage() {}

func (x *CashflowsCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowsCreateTask.ProtoReflect.Descriptor instead.
func (*CashflowsCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{35}
}

func (x *CashflowsCreateTask) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashflowsCreateTask) GetCashflowType() string {
	if x != nil {
		return x.CashflowType
	}
	return ""
}

func (x *CashflowsCreateTask) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CashflowsCreateTask) GetPeriodTime() string {
	if x != nil {
		return x.PeriodTime
	}
	return ""
}

func (x *CashflowsCreateTask) GetTBAType() string {
	if x != nil {
		return x.TBAType
	}
	return ""
}

func (x *CashflowsCreateTask) GetTBAValue() int64 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *CashflowsCreateTask) GetTBARoundedBase() bool {
	if x != nil {
		return x.TBARoundedBase
	}
	return false
}

func (x *CashflowsCreateTask) GetTBATopValue() int64 {
	if x != nil {
		return x.TBATopValue
	}
	return 0
}

func (x *CashflowsCreateTask) GetTBABottomValue() int64 {
	if x != nil {
		return x.TBABottomValue
	}
	return 0
}

func (x *CashflowsCreateTask) GetTBAFillDefisit() bool {
	if x != nil {
		return x.TBAFillDefisit
	}
	return false
}

func (x *CashflowsCreateTask) GetTBAFillToTop() bool {
	if x != nil {
		return x.TBAFillToTop
	}
	return false
}

func (x *CashflowsCreateTask) GetRecurring() bool {
	if x != nil {
		return x.Recurring
	}
	return false
}

func (x *CashflowsCreateTask) GetRecurringValue() string {
	if x != nil {
		return x.RecurringValue
	}
	return ""
}

func (x *CashflowsCreateTask) GetRecurringDate() int64 {
	if x != nil {
		return x.RecurringDate
	}
	return 0
}

func (x *CashflowsCreateTask) GetSource() []*LiquiditySourceReq {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CashflowsCreateTask) GetBeneficiary() []*LiquidityBeneficiaryReq {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

type CreateTaskLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTaskLiquidityResponse) Reset() {
	*x = CreateTaskLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskLiquidityResponse) ProtoMessage() {}

func (x *CreateTaskLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskLiquidityResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{36}
}

func (x *CreateTaskLiquidityResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateTaskLiquidityResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateTaskLiquidityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTaskLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTaskLiquidityResponse) Reset() {
	*x = DeleteTaskLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskLiquidityResponse) ProtoMessage() {}

func (x *DeleteTaskLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskLiquidityResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteTaskLiquidityResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteTaskLiquidityResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteTaskLiquidityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteLiquidityTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityID uint64 `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
}

func (x *DeleteLiquidityTaskRequest) Reset() {
	*x = DeleteLiquidityTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiquidityTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiquidityTaskRequest) ProtoMessage() {}

func (x *DeleteLiquidityTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiquidityTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteLiquidityTaskRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteLiquidityTaskRequest) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

type DeleteLiquidityTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteLiquidityTaskResponse) Reset() {
	*x = DeleteLiquidityTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiquidityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiquidityTaskResponse) ProtoMessage() {}

func (x *DeleteLiquidityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiquidityTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteLiquidityTaskResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteLiquidityTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteLiquidityTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteLiquidityTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteLiquidityTaskRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64                      `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *DeleteLiquidityRequest) Reset() {
	*x = DeleteLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiquidityRequest) ProtoMessage() {}

func (x *DeleteLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiquidityRequest.ProtoReflect.Descriptor instead.
func (*DeleteLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteLiquidityRequest) GetData() *DeleteLiquidityTaskRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteLiquidityRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type DeleteLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteLiquidityResponse) Reset() {
	*x = DeleteLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiquidityResponse) ProtoMessage() {}

func (x *DeleteLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiquidityResponse.ProtoReflect.Descriptor instead.
func (*DeleteLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteLiquidityResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteLiquidityResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteLiquidityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liquidity *LiquiditySchemes        `protobuf:"bytes,1,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Limit     int32                    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page      int32                    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort      string                   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir       ListDataRequestDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=liquidity.service.v1.ListDataRequestDirection" json:"dir,omitempty"`
	Filter    string                   `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query     string                   `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListDataRequest) Reset() {
	*x = ListDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataRequest) ProtoMessage() {}

func (x *ListDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataRequest.ProtoReflect.Descriptor instead.
func (*ListDataRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{42}
}

func (x *ListDataRequest) GetLiquidity() *LiquiditySchemes {
	if x != nil {
		return x.Liquidity
	}
	return nil
}

func (x *ListDataRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDataRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDataRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListDataRequest) GetDir() ListDataRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListDataRequest_DESC
}

func (x *ListDataRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDataRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{43}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type Search struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Columns string `protobuf:"bytes,2,opt,name=columns,proto3" json:"columns,omitempty"`
}

func (x *Search) Reset() {
	*x = Search{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Search) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Search) ProtoMessage() {}

func (x *Search) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Search.ProtoReflect.Descriptor instead.
func (*Search) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{44}
}

func (x *Search) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Search) GetColumns() string {
	if x != nil {
		return x.Columns
	}
	return ""
}

type ListDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*LiquiditySchemes `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListDataResponse) Reset() {
	*x = ListDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataResponse) ProtoMessage() {}

func (x *ListDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataResponse.ProtoReflect.Descriptor instead.
func (*ListDataResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{45}
}

func (x *ListDataResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListDataResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListDataResponse) GetData() []*LiquiditySchemes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListDataResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListTBAValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*TBAValue `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListTBAValueResponse) Reset() {
	*x = ListTBAValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTBAValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTBAValueResponse) ProtoMessage() {}

func (x *ListTBAValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTBAValueResponse.ProtoReflect.Descriptor instead.
func (*ListTBAValueResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{46}
}

func (x *ListTBAValueResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListTBAValueResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListTBAValueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListTBAValueResponse) GetData() []*TBAValue {
	if x != nil {
		return x.Data
	}
	return nil
}

type RunLiquidityTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityID uint64 `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	CashflowID  uint64 `protobuf:"varint,2,opt,name=cashflowID,proto3" json:"cashflowID,omitempty"`
}

func (x *RunLiquidityTaskRequest) Reset() {
	*x = RunLiquidityTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLiquidityTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLiquidityTaskRequest) ProtoMessage() {}

func (x *RunLiquidityTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLiquidityTaskRequest.ProtoReflect.Descriptor instead.
func (*RunLiquidityTaskRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{47}
}

func (x *RunLiquidityTaskRequest) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *RunLiquidityTaskRequest) GetCashflowID() uint64 {
	if x != nil {
		return x.CashflowID
	}
	return 0
}

type RunLiquidityTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DetailTaskLiquidityRes `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RunLiquidityTaskResponse) Reset() {
	*x = RunLiquidityTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunLiquidityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLiquidityTaskResponse) ProtoMessage() {}

func (x *RunLiquidityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLiquidityTaskResponse.ProtoReflect.Descriptor instead.
func (*RunLiquidityTaskResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{48}
}

func (x *RunLiquidityTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *RunLiquidityTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RunLiquidityTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RunLiquidityTaskResponse) GetData() *DetailTaskLiquidityRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValidateDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate   string `protobuf:"bytes,1,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate     string `protobuf:"bytes,2,opt,name=endDate,proto3" json:"endDate,omitempty"`
	PeriodType  string `protobuf:"bytes,3,opt,name=periodType,proto3" json:"periodType,omitempty"`
	PeriodRange string `protobuf:"bytes,4,opt,name=periodRange,proto3" json:"periodRange,omitempty"`
}

func (x *ValidateDateRequest) Reset() {
	*x = ValidateDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDateRequest) ProtoMessage() {}

func (x *ValidateDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDateRequest.ProtoReflect.Descriptor instead.
func (*ValidateDateRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{49}
}

func (x *ValidateDateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ValidateDateRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ValidateDateRequest) GetPeriodType() string {
	if x != nil {
		return x.PeriodType
	}
	return ""
}

func (x *ValidateDateRequest) GetPeriodRange() string {
	if x != nil {
		return x.PeriodRange
	}
	return ""
}

type ValidateDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *AvailableTime `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ValidateDateResponse) Reset() {
	*x = ValidateDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDateResponse) ProtoMessage() {}

func (x *ValidateDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDateResponse.ProtoReflect.Descriptor instead.
func (*ValidateDateResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{50}
}

func (x *ValidateDateResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ValidateDateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ValidateDateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateDateResponse) GetData() *AvailableTime {
	if x != nil {
		return x.Data
	}
	return nil
}

type AvailableTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableDates []int64  `protobuf:"varint,1,rep,packed,name=availableDates,proto3" json:"availableDates,omitempty"`
	AvailableDays  []string `protobuf:"bytes,2,rep,name=availableDays,proto3" json:"availableDays,omitempty"`
	AvailableMonth []string `protobuf:"bytes,3,rep,name=availableMonth,proto3" json:"availableMonth,omitempty"`
}

func (x *AvailableTime) Reset() {
	*x = AvailableTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableTime) ProtoMessage() {}

func (x *AvailableTime) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableTime.ProtoReflect.Descriptor instead.
func (*AvailableTime) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{51}
}

func (x *AvailableTime) GetAvailableDates() []int64 {
	if x != nil {
		return x.AvailableDates
	}
	return nil
}

func (x *AvailableTime) GetAvailableDays() []string {
	if x != nil {
		return x.AvailableDays
	}
	return nil
}

func (x *AvailableTime) GetAvailableMonth() []string {
	if x != nil {
		return x.AvailableMonth
	}
	return nil
}

type CreateLiquiditySchedulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityCode string `protobuf:"bytes,1,opt,name=liquidityCode,proto3" json:"liquidityCode,omitempty"`
}

func (x *CreateLiquiditySchedulesRequest) Reset() {
	*x = CreateLiquiditySchedulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquiditySchedulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquiditySchedulesRequest) ProtoMessage() {}

func (x *CreateLiquiditySchedulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquiditySchedulesRequest.ProtoReflect.Descriptor instead.
func (*CreateLiquiditySchedulesRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{52}
}

func (x *CreateLiquiditySchedulesRequest) GetLiquidityCode() string {
	if x != nil {
		return x.LiquidityCode
	}
	return ""
}

type CreateLiquiditySchedulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedules []*CreateLiquiditySchedulesRes `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *CreateLiquiditySchedulesResponse) Reset() {
	*x = CreateLiquiditySchedulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquiditySchedulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquiditySchedulesResponse) ProtoMessage() {}

func (x *CreateLiquiditySchedulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquiditySchedulesResponse.ProtoReflect.Descriptor instead.
func (*CreateLiquiditySchedulesResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{53}
}

func (x *CreateLiquiditySchedulesResponse) GetSchedules() []*CreateLiquiditySchedulesRes {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type CreateLiquiditySchedulesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashflowID   uint64                 `protobuf:"varint,1,opt,name=cashflowID,proto3" json:"cashflowID,omitempty"`
	LiquidityID  uint64                 `protobuf:"varint,2,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	ScheduleTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=scheduleTime,proto3" json:"scheduleTime,omitempty"`
}

func (x *CreateLiquiditySchedulesRes) Reset() {
	*x = CreateLiquiditySchedulesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquiditySchedulesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquiditySchedulesRes) ProtoMessage() {}

func (x *CreateLiquiditySchedulesRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquiditySchedulesRes.ProtoReflect.Descriptor instead.
func (*CreateLiquiditySchedulesRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{54}
}

func (x *CreateLiquiditySchedulesRes) GetCashflowID() uint64 {
	if x != nil {
		return x.CashflowID
	}
	return 0
}

func (x *CreateLiquiditySchedulesRes) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *CreateLiquiditySchedulesRes) GetScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

type RunDailyScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RunDailyScheduleResponse) Reset() {
	*x = RunDailyScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunDailyScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunDailyScheduleResponse) ProtoMessage() {}

func (x *RunDailyScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunDailyScheduleResponse.ProtoReflect.Descriptor instead.
func (*RunDailyScheduleResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{55}
}

func (x *RunDailyScheduleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *RunDailyScheduleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RunDailyScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TaskActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID   uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Action   string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Comment  string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Reasons  string `protobuf:"bytes,4,opt,name=reasons,proto3" json:"reasons,omitempty"`
	UserName string `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`
	PassCode string `protobuf:"bytes,6,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *TaskActionRequest) Reset() {
	*x = TaskActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActionRequest) ProtoMessage() {}

func (x *TaskActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActionRequest.ProtoReflect.Descriptor instead.
func (*TaskActionRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{56}
}

func (x *TaskActionRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskActionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *TaskActionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TaskActionRequest) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *TaskActionRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *TaskActionRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type TaskActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool          `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskListTask `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskActionResponse) Reset() {
	*x = TaskActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActionResponse) ProtoMessage() {}

func (x *TaskActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActionResponse.ProtoReflect.Descriptor instead.
func (*TaskActionResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{57}
}

func (x *TaskActionResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *TaskActionResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskActionResponse) GetData() *TaskListTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateLiquidityTransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID          uint64                      `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Data            *CreateTaskLiquidityRequest `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	CurrentWorkflow *ValidateWorkflowData       `protobuf:"bytes,3,opt,name=currentWorkflow,proto3" json:"currentWorkflow,omitempty"`
}

func (x *CreateLiquidityTransactionReq) Reset() {
	*x = CreateLiquidityTransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquidityTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquidityTransactionReq) ProtoMessage() {}

func (x *CreateLiquidityTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquidityTransactionReq.ProtoReflect.Descriptor instead.
func (*CreateLiquidityTransactionReq) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{58}
}

func (x *CreateLiquidityTransactionReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateLiquidityTransactionReq) GetData() *CreateTaskLiquidityRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateLiquidityTransactionReq) GetCurrentWorkflow() *ValidateWorkflowData {
	if x != nil {
		return x.CurrentWorkflow
	}
	return nil
}

type CreateLiquidityTransactionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateLiquidityTransactionRes) Reset() {
	*x = CreateLiquidityTransactionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquidityTransactionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquidityTransactionRes) ProtoMessage() {}

func (x *CreateLiquidityTransactionRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquidityTransactionRes.ProtoReflect.Descriptor instead.
func (*CreateLiquidityTransactionRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{59}
}

func (x *CreateLiquidityTransactionRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateLiquidityTransactionRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateLiquidityTransactionRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidateWorkflowData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow   *WorkflowPayload `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	NextStatus string           `protobuf:"bytes,2,opt,name=nextStatus,proto3" json:"nextStatus,omitempty"`
	NextStep   string           `protobuf:"bytes,3,opt,name=nextStep,proto3" json:"nextStep,omitempty"`
}

func (x *ValidateWorkflowData) Reset() {
	*x = ValidateWorkflowData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateWorkflowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateWorkflowData) ProtoMessage() {}

func (x *ValidateWorkflowData) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateWorkflowData.ProtoReflect.Descriptor instead.
func (*ValidateWorkflowData) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{60}
}

func (x *ValidateWorkflowData) GetWorkflow() *WorkflowPayload {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *ValidateWorkflowData) GetNextStatus() string {
	if x != nil {
		return x.NextStatus
	}
	return ""
}

func (x *ValidateWorkflowData) GetNextStep() string {
	if x != nil {
		return x.NextStep
	}
	return ""
}

type WorkflowPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header          *WorkflowHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Records         *WorkflowRecords       `protobuf:"bytes,2,opt,name=records,proto3" json:"records,omitempty"`
	CreatedBy       *UserData              `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	IsDefault       bool                   `protobuf:"varint,5,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	IsTransactional bool                   `protobuf:"varint,6,opt,name=isTransactional,proto3" json:"isTransactional,omitempty"`
	CurrentRoleIDs  []uint64               `protobuf:"varint,7,rep,packed,name=currentRoleIDs,proto3" json:"currentRoleIDs,omitempty"`
	CurrentStep     string                 `protobuf:"bytes,8,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
}

func (x *WorkflowPayload) Reset() {
	*x = WorkflowPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowPayload) ProtoMessage() {}

func (x *WorkflowPayload) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowPayload.ProtoReflect.Descriptor instead.
func (*WorkflowPayload) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{61}
}

func (x *WorkflowPayload) GetHeader() *WorkflowHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *WorkflowPayload) GetRecords() *WorkflowRecords {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *WorkflowPayload) GetCreatedBy() *UserData {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *WorkflowPayload) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowPayload) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *WorkflowPayload) GetIsTransactional() bool {
	if x != nil {
		return x.IsTransactional
	}
	return false
}

func (x *WorkflowPayload) GetCurrentRoleIDs() []uint64 {
	if x != nil {
		return x.CurrentRoleIDs
	}
	return nil
}

func (x *WorkflowPayload) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

type WorkflowHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID           uint64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductName         string `protobuf:"bytes,2,opt,name=productName,proto3" json:"productName,omitempty"`
	CurrencyID          uint64 `protobuf:"varint,3,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	CurrencyName        string `protobuf:"bytes,5,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
	CompanyID           uint64 `protobuf:"varint,6,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName         string `protobuf:"bytes,7,opt,name=companyName,proto3" json:"companyName,omitempty"`
	TransactionalNumber uint64 `protobuf:"varint,10,opt,name=transactionalNumber,proto3" json:"transactionalNumber,omitempty"`
	WorkflowID          uint64 `protobuf:"varint,11,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
}

func (x *WorkflowHeader) Reset() {
	*x = WorkflowHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowHeader) ProtoMessage() {}

func (x *WorkflowHeader) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowHeader.ProtoReflect.Descriptor instead.
func (*WorkflowHeader) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{62}
}

func (x *WorkflowHeader) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *WorkflowHeader) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *WorkflowHeader) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *WorkflowHeader) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *WorkflowHeader) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *WorkflowHeader) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *WorkflowHeader) GetTransactionalNumber() uint64 {
	if x != nil {
		return x.TransactionalNumber
	}
	return 0
}

func (x *WorkflowHeader) GetWorkflowID() uint64 {
	if x != nil {
		return x.WorkflowID
	}
	return 0
}

type WorkflowRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=lastUpdatedAt,proto3" json:"lastUpdatedAt,omitempty"`
	TopRange      uint64                 `protobuf:"varint,2,opt,name=topRange,proto3" json:"topRange,omitempty"`
	BottomRange   uint64                 `protobuf:"varint,3,opt,name=bottomRange,proto3" json:"bottomRange,omitempty"`
	Flows         []*Flow                `protobuf:"bytes,4,rep,name=flows,proto3" json:"flows,omitempty"`
}

func (x *WorkflowRecords) Reset() {
	*x = WorkflowRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowRecords) ProtoMessage() {}

func (x *WorkflowRecords) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowRecords.ProtoReflect.Descriptor instead.
func (*WorkflowRecords) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{63}
}

func (x *WorkflowRecords) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *WorkflowRecords) GetTopRange() uint64 {
	if x != nil {
		return x.TopRange
	}
	return 0
}

func (x *WorkflowRecords) GetBottomRange() uint64 {
	if x != nil {
		return x.BottomRange
	}
	return 0
}

func (x *WorkflowRecords) GetFlows() []*Flow {
	if x != nil {
		return x.Flows
	}
	return nil
}

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{64}
}

func (x *UserData) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type Flow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowLogicID uint64                 `protobuf:"varint,1,opt,name=workflowLogicID,proto3" json:"workflowLogicID,omitempty"`
	Verifier        *Participants          `protobuf:"bytes,2,opt,name=verifier,proto3" json:"verifier,omitempty"`
	Approver        *Participants          `protobuf:"bytes,3,opt,name=approver,proto3" json:"approver,omitempty"`
	Releaser        *Participants          `protobuf:"bytes,4,opt,name=releaser,proto3" json:"releaser,omitempty"`
	IsRejected      bool                   `protobuf:"varint,5,opt,name=isRejected,proto3" json:"isRejected,omitempty"`
	CompletedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
}

func (x *Flow) Reset() {
	*x = Flow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{65}
}

func (x *Flow) GetWorkflowLogicID() uint64 {
	if x != nil {
		return x.WorkflowLogicID
	}
	return 0
}

func (x *Flow) GetVerifier() *Participants {
	if x != nil {
		return x.Verifier
	}
	return nil
}

func (x *Flow) GetApprover() *Participants {
	if x != nil {
		return x.Approver
	}
	return nil
}

func (x *Flow) GetReleaser() *Participants {
	if x != nil {
		return x.Releaser
	}
	return nil
}

func (x *Flow) GetIsRejected() bool {
	if x != nil {
		return x.IsRejected
	}
	return false
}

func (x *Flow) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type Participants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApprovedCount int32          `protobuf:"varint,1,opt,name=approvedCount,proto3" json:"approvedCount,omitempty"`
	RejectedCount int32          `protobuf:"varint,2,opt,name=rejectedCount,proto3" json:"rejectedCount,omitempty"`
	Requirement   int32          `protobuf:"varint,3,opt,name=Requirement,proto3" json:"Requirement,omitempty"`
	Participants  []*Participant `protobuf:"bytes,4,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *Participants) Reset() {
	*x = Participants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participants) ProtoMessage() {}

func (x *Participants) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participants.ProtoReflect.Descriptor instead.
func (*Participants) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{66}
}

func (x *Participants) GetApprovedCount() int32 {
	if x != nil {
		return x.ApprovedCount
	}
	return 0
}

func (x *Participants) GetRejectedCount() int32 {
	if x != nil {
		return x.RejectedCount
	}
	return 0
}

func (x *Participants) GetRequirement() int32 {
	if x != nil {
		return x.Requirement
	}
	return 0
}

func (x *Participants) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64                 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName   string                 `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	RoleID     uint64                 `protobuf:"varint,3,opt,name=roleID,proto3" json:"roleID,omitempty"`
	IsReject   bool                   `protobuf:"varint,5,opt,name=isReject,proto3" json:"isReject,omitempty"`
	ApprovedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=approvedAt,proto3" json:"approvedAt,omitempty"`
	Step       string                 `protobuf:"bytes,7,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{67}
}

func (x *Participant) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Participant) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Participant) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *Participant) GetIsReject() bool {
	if x != nil {
		return x.IsReject
	}
	return false
}

func (x *Participant) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *Participant) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

var File_liquidity_payload_proto protoreflect.FileDescriptor

var file_liquidity_payload_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x32, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x3c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x57, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x03, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa3, 0x05, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x4a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x4e, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0x92, 0x41,
	0x1f, 0x32, 0x1d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x20, 0x43, 0x6f, 0x64, 0x65, 0x20, 0x4f, 0x52, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x6e, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x06, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04,
	0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01,
	0x22, 0xbb, 0x06, 0x0a, 0x20, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50,
	0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x52,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x4e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0b, 0x92,
	0x41, 0x08, 0x32, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x4f, 0x52, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x5e, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x2e,
	0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c,
	0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0xe9,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x48, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x04, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x43, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x73,
	0x68, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x52, 0x0a,
	0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x43, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x44, 0x22, 0x82, 0x05, 0x0a, 0x11, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42,
	0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x42,
	0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66,
	0x69, 0x73, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54,
	0x6f, 0x54, 0x6f, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x54, 0x42, 0x41, 0x46,
	0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x22, 0x96, 0x05, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e,
	0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x34, 0x0a, 0x1a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xa3, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xda, 0x04, 0x0a,
	0x16, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x50, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x41, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x08, 0x63, 0x61,
	0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f,
	0x77, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x45, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x84, 0x05, 0x0a, 0x13, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42,
	0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x42,
	0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66,
	0x69, 0x73, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54,
	0x6f, 0x54, 0x6f, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x54, 0x42, 0x41, 0x46,
	0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x22, 0x76, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22,
	0xa5, 0x06, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x55, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x08, 0x63,
	0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c,
	0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x0f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x29, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x29, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x7c, 0x0a, 0x12, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb5, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x42,
	0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x54, 0x42,
	0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x45,
	0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x12, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x19, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x22, 0x97, 0x05, 0x0a, 0x13, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x42, 0x41, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0e, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x54, 0x42, 0x41, 0x54,
	0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44,
	0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73, 0x69,
	0x74, 0x12, 0x27, 0x0a, 0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x6f,
	0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x54, 0x42,
	0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4f, 0x0a,
	0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x22, 0x61,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x61, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x22, 0x61, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22,
	0x5d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb3,
	0x0a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x44, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x52, 0x09, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41,
	0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74,
	0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x57, 0x0a, 0x03, 0x64, 0x69, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79,
	0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
	0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20,
	0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a,
	0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a,
	0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44,
	0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27,
	0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31,
	0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x53, 0x43, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x42,
	0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x44, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85,
	0x01, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x73, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x20, 0x27, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x27, 0x2c, 0x20, 0x27, 0x72,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x27,
	0x2c, 0x20, 0x27, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x27, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x90,
	0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xd3, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x54, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x63, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x53, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x53, 0x74, 0x65, 0x70, 0x22, 0x9a, 0x03, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65,
	0x70, 0x22, 0xa6, 0x02, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x40,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x22, 0x3e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xce, 0x02, 0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xc3, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x45, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x3a, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_liquidity_payload_proto_rawDescOnce sync.Once
	file_liquidity_payload_proto_rawDescData = file_liquidity_payload_proto_rawDesc
)

func file_liquidity_payload_proto_rawDescGZIP() []byte {
	file_liquidity_payload_proto_rawDescOnce.Do(func() {
		file_liquidity_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_liquidity_payload_proto_rawDescData)
	})
	return file_liquidity_payload_proto_rawDescData
}

var file_liquidity_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_liquidity_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_liquidity_payload_proto_goTypes = []interface{}{
	(ListTaskLiquidityRequestStatuses)(0),          // 0: liquidity.service.v1.ListTaskLiquidityRequest.statuses
	(ListTaskLiquidityRequestSteps)(0),             // 1: liquidity.service.v1.ListTaskLiquidityRequest.steps
	(ListTaskLiquidityRequestDirection)(0),         // 2: liquidity.service.v1.ListTaskLiquidityRequest.direction
	(DownloadListTaskLiquidityRequestStatuses)(0),  // 3: liquidity.service.v1.DownloadListTaskLiquidityRequest.statuses
	(DownloadListTaskLiquidityRequestSteps)(0),     // 4: liquidity.service.v1.DownloadListTaskLiquidityRequest.steps
	(DownloadListTaskLiquidityRequestDirection)(0), // 5: liquidity.service.v1.DownloadListTaskLiquidityRequest.direction
	(DownloadListTaskLiquidityRequest_Formats)(0),  // 6: liquidity.service.v1.DownloadListTaskLiquidityRequest.Formats
	(ListDataRequestDirection)(0),                  // 7: liquidity.service.v1.ListDataRequest.direction
	(*LoginRequest)(nil),                           // 8: liquidity.service.v1.LoginRequest
	(*LoginResponse)(nil),                          // 9: liquidity.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                    // 10: liquidity.service.v1.HealthCheckResponse
	(*ArrayString)(nil),                            // 11: liquidity.service.v1.ArrayString
	(*Empty)(nil),                                  // 12: liquidity.service.v1.Empty
	(*PaginationResponse)(nil),                     // 13: liquidity.service.v1.PaginationResponse
	(*Sort)(nil),                                   // 14: liquidity.service.v1.Sort
	(*ErrorBodyResponse)(nil),                      // 15: liquidity.service.v1.errorBodyResponse
	(*ListLiquidityFilter)(nil),                    // 16: liquidity.service.v1.ListLiquidityFilter
	(*ListTaskLiquidityRequest)(nil),               // 17: liquidity.service.v1.ListTaskLiquidityRequest
	(*DownloadListTaskLiquidityRequest)(nil),       // 18: liquidity.service.v1.DownloadListTaskLiquidityRequest
	(*ListLiquidityTaskResponse)(nil),              // 19: liquidity.service.v1.ListLiquidityTaskResponse
	(*ListTaskLiquidityRes)(nil),                   // 20: liquidity.service.v1.ListTaskLiquidityRes
	(*CompanyGroupListTask)(nil),                   // 21: liquidity.service.v1.CompanyGroupListTask
	(*CompanyListTask)(nil),                        // 22: liquidity.service.v1.CompanyListTask
	(*CurrencyListTask)(nil),                       // 23: liquidity.service.v1.CurrencyListTask
	(*CashflowsListTask)(nil),                      // 24: liquidity.service.v1.CashflowsListTask
	(*TaskListTask)(nil),                           // 25: liquidity.service.v1.TaskListTask
	(*DetailLiquidityTaskRequest)(nil),             // 26: liquidity.service.v1.DetailLiquidityTaskRequest
	(*DetailLiquidityTaskResponse)(nil),            // 27: liquidity.service.v1.DetailLiquidityTaskResponse
	(*DetailTaskLiquidityRes)(nil),                 // 28: liquidity.service.v1.DetailTaskLiquidityRes
	(*CompanyGroupDetailTask)(nil),                 // 29: liquidity.service.v1.CompanyGroupDetailTask
	(*CompanyDetailTask)(nil),                      // 30: liquidity.service.v1.CompanyDetailTask
	(*CurrencyDetailTask)(nil),                     // 31: liquidity.service.v1.CurrencyDetailTask
	(*CashflowsDetailTask)(nil),                    // 32: liquidity.service.v1.CashflowsDetailTask
	(*CreateLiquidityRequest)(nil),                 // 33: liquidity.service.v1.CreateLiquidityRequest
	(*CreateTaskLiquidityRequest)(nil),             // 34: liquidity.service.v1.CreateTaskLiquidityRequest
	(*LiquiditySourceReq)(nil),                     // 35: liquidity.service.v1.LiquiditySourceReq
	(*LiquidityBeneficiaryReq)(nil),                // 36: liquidity.service.v1.LiquidityBeneficiaryReq
	(*LiquiditySourceRes)(nil),                     // 37: liquidity.service.v1.LiquiditySourceRes
	(*LiquidityBeneficiaryRes)(nil),                // 38: liquidity.service.v1.LiquidityBeneficiaryRes
	(*CompanyCreateTask)(nil),                      // 39: liquidity.service.v1.CompanyCreateTask
	(*CompanyGroupCreateTask)(nil),                 // 40: liquidity.service.v1.CompanyGroupCreateTask
	(*CurrencyCreateTask)(nil),                     // 41: liquidity.service.v1.CurrencyCreateTask
	(*PriorityUpdatesCreateTask)(nil),              // 42: liquidity.service.v1.PriorityUpdatesCreateTask
	(*CashflowsCreateTask)(nil),                    // 43: liquidity.service.v1.CashflowsCreateTask
	(*CreateTaskLiquidityResponse)(nil),            // 44: liquidity.service.v1.CreateTaskLiquidityResponse
	(*DeleteTaskLiquidityResponse)(nil),            // 45: liquidity.service.v1.DeleteTaskLiquidityResponse
	(*DeleteLiquidityTaskRequest)(nil),             // 46: liquidity.service.v1.DeleteLiquidityTaskRequest
	(*DeleteLiquidityTaskResponse)(nil),            // 47: liquidity.service.v1.DeleteLiquidityTaskResponse
	(*DeleteLiquidityRequest)(nil),                 // 48: liquidity.service.v1.DeleteLiquidityRequest
	(*DeleteLiquidityResponse)(nil),                // 49: liquidity.service.v1.DeleteLiquidityResponse
	(*ListDataRequest)(nil),                        // 50: liquidity.service.v1.ListDataRequest
	(*Pagination)(nil),                             // 51: liquidity.service.v1.Pagination
	(*Search)(nil),                                 // 52: liquidity.service.v1.Search
	(*ListDataResponse)(nil),                       // 53: liquidity.service.v1.ListDataResponse
	(*ListTBAValueResponse)(nil),                   // 54: liquidity.service.v1.ListTBAValueResponse
	(*RunLiquidityTaskRequest)(nil),                // 55: liquidity.service.v1.RunLiquidityTaskRequest
	(*RunLiquidityTaskResponse)(nil),               // 56: liquidity.service.v1.RunLiquidityTaskResponse
	(*ValidateDateRequest)(nil),                    // 57: liquidity.service.v1.ValidateDateRequest
	(*ValidateDateResponse)(nil),                   // 58: liquidity.service.v1.ValidateDateResponse
	(*AvailableTime)(nil),                          // 59: liquidity.service.v1.AvailableTime
	(*CreateLiquiditySchedulesRequest)(nil),        // 60: liquidity.service.v1.CreateLiquiditySchedulesRequest
	(*CreateLiquiditySchedulesResponse)(nil),       // 61: liquidity.service.v1.CreateLiquiditySchedulesResponse
	(*CreateLiquiditySchedulesRes)(nil),            // 62: liquidity.service.v1.CreateLiquiditySchedulesRes
	(*RunDailyScheduleResponse)(nil),               // 63: liquidity.service.v1.RunDailyScheduleResponse
	(*TaskActionRequest)(nil),                      // 64: liquidity.service.v1.TaskActionRequest
	(*TaskActionResponse)(nil),                     // 65: liquidity.service.v1.TaskActionResponse
	(*CreateLiquidityTransactionReq)(nil),          // 66: liquidity.service.v1.CreateLiquidityTransactionReq
	(*CreateLiquidityTransactionRes)(nil),          // 67: liquidity.service.v1.CreateLiquidityTransactionRes
	(*ValidateWorkflowData)(nil),                   // 68: liquidity.service.v1.ValidateWorkflowData
	(*WorkflowPayload)(nil),                        // 69: liquidity.service.v1.WorkflowPayload
	(*WorkflowHeader)(nil),                         // 70: liquidity.service.v1.WorkflowHeader
	(*WorkflowRecords)(nil),                        // 71: liquidity.service.v1.WorkflowRecords
	(*UserData)(nil),                               // 72: liquidity.service.v1.UserData
	(*Flow)(nil),                                   // 73: liquidity.service.v1.Flow
	(*Participants)(nil),                           // 74: liquidity.service.v1.Participants
	(*Participant)(nil),                            // 75: liquidity.service.v1.Participant
	(*timestamppb.Timestamp)(nil),                  // 76: google.protobuf.Timestamp
	(*LiquiditySchemes)(nil),                       // 77: liquidity.service.v1.LiquiditySchemes
	(*TBAValue)(nil),                               // 78: liquidity.service.v1.TBAValue
}
var file_liquidity_payload_proto_depIdxs = []int32{
	0,  // 0: liquidity.service.v1.ListTaskLiquidityRequest.status:type_name -> liquidity.service.v1.ListTaskLiquidityRequest.statuses
	1,  // 1: liquidity.service.v1.ListTaskLiquidityRequest.step:type_name -> liquidity.service.v1.ListTaskLiquidityRequest.steps
	2,  // 2: liquidity.service.v1.ListTaskLiquidityRequest.dir:type_name -> liquidity.service.v1.ListTaskLiquidityRequest.direction
	16, // 3: liquidity.service.v1.ListTaskLiquidityRequest.filter:type_name -> liquidity.service.v1.ListLiquidityFilter
	3,  // 4: liquidity.service.v1.DownloadListTaskLiquidityRequest.status:type_name -> liquidity.service.v1.DownloadListTaskLiquidityRequest.statuses
	4,  // 5: liquidity.service.v1.DownloadListTaskLiquidityRequest.step:type_name -> liquidity.service.v1.DownloadListTaskLiquidityRequest.steps
	5,  // 6: liquidity.service.v1.DownloadListTaskLiquidityRequest.dir:type_name -> liquidity.service.v1.DownloadListTaskLiquidityRequest.direction
	16, // 7: liquidity.service.v1.DownloadListTaskLiquidityRequest.filter:type_name -> liquidity.service.v1.ListLiquidityFilter
	6,  // 8: liquidity.service.v1.DownloadListTaskLiquidityRequest.fileFormat:type_name -> liquidity.service.v1.DownloadListTaskLiquidityRequest.Formats
	20, // 9: liquidity.service.v1.ListLiquidityTaskResponse.data:type_name -> liquidity.service.v1.ListTaskLiquidityRes
	13, // 10: liquidity.service.v1.ListLiquidityTaskResponse.pagination:type_name -> liquidity.service.v1.PaginationResponse
	21, // 11: liquidity.service.v1.ListTaskLiquidityRes.companyGroup:type_name -> liquidity.service.v1.CompanyGroupListTask
	22, // 12: liquidity.service.v1.ListTaskLiquidityRes.company:type_name -> liquidity.service.v1.CompanyListTask
	23, // 13: liquidity.service.v1.ListTaskLiquidityRes.currency:type_name -> liquidity.service.v1.CurrencyListTask
	24, // 14: liquidity.service.v1.ListTaskLiquidityRes.cashflow:type_name -> liquidity.service.v1.CashflowsListTask
	25, // 15: liquidity.service.v1.ListTaskLiquidityRes.task:type_name -> liquidity.service.v1.TaskListTask
	37, // 16: liquidity.service.v1.CashflowsListTask.source:type_name -> liquidity.service.v1.LiquiditySourceRes
	38, // 17: liquidity.service.v1.CashflowsListTask.beneficiary:type_name -> liquidity.service.v1.LiquidityBeneficiaryRes
	76, // 18: liquidity.service.v1.TaskListTask.createdAt:type_name -> google.protobuf.Timestamp
	76, // 19: liquidity.service.v1.TaskListTask.updatedAt:type_name -> google.protobuf.Timestamp
	28, // 20: liquidity.service.v1.DetailLiquidityTaskResponse.data:type_name -> liquidity.service.v1.DetailTaskLiquidityRes
	29, // 21: liquidity.service.v1.DetailTaskLiquidityRes.companyGroup:type_name -> liquidity.service.v1.CompanyGroupDetailTask
	30, // 22: liquidity.service.v1.DetailTaskLiquidityRes.company:type_name -> liquidity.service.v1.CompanyDetailTask
	31, // 23: liquidity.service.v1.DetailTaskLiquidityRes.currency:type_name -> liquidity.service.v1.CurrencyDetailTask
	32, // 24: liquidity.service.v1.DetailTaskLiquidityRes.cashflow:type_name -> liquidity.service.v1.CashflowsDetailTask
	25, // 25: liquidity.service.v1.DetailTaskLiquidityRes.task:type_name -> liquidity.service.v1.TaskListTask
	37, // 26: liquidity.service.v1.CashflowsDetailTask.source:type_name -> liquidity.service.v1.LiquiditySourceRes
	38, // 27: liquidity.service.v1.CashflowsDetailTask.beneficiary:type_name -> liquidity.service.v1.LiquidityBeneficiaryRes
	34, // 28: liquidity.service.v1.CreateLiquidityRequest.data:type_name -> liquidity.service.v1.CreateTaskLiquidityRequest
	39, // 29: liquidity.service.v1.CreateTaskLiquidityRequest.company:type_name -> liquidity.service.v1.CompanyCreateTask
	40, // 30: liquidity.service.v1.CreateTaskLiquidityRequest.companyGroup:type_name -> liquidity.service.v1.CompanyGroupCreateTask
	41, // 31: liquidity.service.v1.CreateTaskLiquidityRequest.currency:type_name -> liquidity.service.v1.CurrencyCreateTask
	43, // 32: liquidity.service.v1.CreateTaskLiquidityRequest.cashflow:type_name -> liquidity.service.v1.CashflowsCreateTask
	42, // 33: liquidity.service.v1.CreateTaskLiquidityRequest.priorityUpdates:type_name -> liquidity.service.v1.PriorityUpdatesCreateTask
	35, // 34: liquidity.service.v1.CashflowsCreateTask.source:type_name -> liquidity.service.v1.LiquiditySourceReq
	36, // 35: liquidity.service.v1.CashflowsCreateTask.beneficiary:type_name -> liquidity.service.v1.LiquidityBeneficiaryReq
	46, // 36: liquidity.service.v1.DeleteLiquidityRequest.data:type_name -> liquidity.service.v1.DeleteLiquidityTaskRequest
	77, // 37: liquidity.service.v1.ListDataRequest.liquidity:type_name -> liquidity.service.v1.LiquiditySchemes
	7,  // 38: liquidity.service.v1.ListDataRequest.dir:type_name -> liquidity.service.v1.ListDataRequest.direction
	77, // 39: liquidity.service.v1.ListDataResponse.data:type_name -> liquidity.service.v1.LiquiditySchemes
	13, // 40: liquidity.service.v1.ListDataResponse.pagination:type_name -> liquidity.service.v1.PaginationResponse
	78, // 41: liquidity.service.v1.ListTBAValueResponse.data:type_name -> liquidity.service.v1.TBAValue
	28, // 42: liquidity.service.v1.RunLiquidityTaskResponse.data:type_name -> liquidity.service.v1.DetailTaskLiquidityRes
	59, // 43: liquidity.service.v1.ValidateDateResponse.data:type_name -> liquidity.service.v1.AvailableTime
	62, // 44: liquidity.service.v1.CreateLiquiditySchedulesResponse.schedules:type_name -> liquidity.service.v1.CreateLiquiditySchedulesRes
	76, // 45: liquidity.service.v1.CreateLiquiditySchedulesRes.scheduleTime:type_name -> google.protobuf.Timestamp
	25, // 46: liquidity.service.v1.TaskActionResponse.data:type_name -> liquidity.service.v1.TaskListTask
	34, // 47: liquidity.service.v1.CreateLiquidityTransactionReq.data:type_name -> liquidity.service.v1.CreateTaskLiquidityRequest
	68, // 48: liquidity.service.v1.CreateLiquidityTransactionReq.currentWorkflow:type_name -> liquidity.service.v1.ValidateWorkflowData
	69, // 49: liquidity.service.v1.ValidateWorkflowData.workflow:type_name -> liquidity.service.v1.WorkflowPayload
	70, // 50: liquidity.service.v1.WorkflowPayload.header:type_name -> liquidity.service.v1.WorkflowHeader
	71, // 51: liquidity.service.v1.WorkflowPayload.records:type_name -> liquidity.service.v1.WorkflowRecords
	72, // 52: liquidity.service.v1.WorkflowPayload.createdBy:type_name -> liquidity.service.v1.UserData
	76, // 53: liquidity.service.v1.WorkflowPayload.createdAt:type_name -> google.protobuf.Timestamp
	76, // 54: liquidity.service.v1.WorkflowRecords.lastUpdatedAt:type_name -> google.protobuf.Timestamp
	73, // 55: liquidity.service.v1.WorkflowRecords.flows:type_name -> liquidity.service.v1.Flow
	74, // 56: liquidity.service.v1.Flow.verifier:type_name -> liquidity.service.v1.Participants
	74, // 57: liquidity.service.v1.Flow.approver:type_name -> liquidity.service.v1.Participants
	74, // 58: liquidity.service.v1.Flow.releaser:type_name -> liquidity.service.v1.Participants
	76, // 59: liquidity.service.v1.Flow.completedAt:type_name -> google.protobuf.Timestamp
	75, // 60: liquidity.service.v1.Participants.participants:type_name -> liquidity.service.v1.Participant
	76, // 61: liquidity.service.v1.Participant.approvedAt:type_name -> google.protobuf.Timestamp
	62, // [62:62] is the sub-list for method output_type
	62, // [62:62] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_liquidity_payload_proto_init() }
func file_liquidity_payload_proto_init() {
	if File_liquidity_payload_proto != nil {
		return
	}
	file_liquidity_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_liquidity_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLiquidityFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadListTaskLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLiquidityTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskLiquidityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGroupListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowsListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailLiquidityTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailLiquidityTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTaskLiquidityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGroupDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowsDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquiditySourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidityBeneficiaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquiditySourceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidityBeneficiaryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGroupCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriorityUpdatesCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowsCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiquidityTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiquidityTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Search); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTBAValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLiquidityTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunLiquidityTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquiditySchedulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquiditySchedulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquiditySchedulesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunDailyScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquidityTransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquidityTransactionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateWorkflowData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_liquidity_payload_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_liquidity_payload_proto_goTypes,
		DependencyIndexes: file_liquidity_payload_proto_depIdxs,
		EnumInfos:         file_liquidity_payload_proto_enumTypes,
		MessageInfos:      file_liquidity_payload_proto_msgTypes,
	}.Build()
	File_liquidity_payload_proto = out.File
	file_liquidity_payload_proto_rawDesc = nil
	file_liquidity_payload_proto_goTypes = nil
	file_liquidity_payload_proto_depIdxs = nil
}
