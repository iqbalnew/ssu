// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.16.0
// source: liquidity_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListTaskLiquidityRequestStatuses int32

const (
	ListTaskLiquidityRequest_AllStatus ListTaskLiquidityRequestStatuses = 0
	ListTaskLiquidityRequest_Pending   ListTaskLiquidityRequestStatuses = 1
	ListTaskLiquidityRequest_Draft     ListTaskLiquidityRequestStatuses = 2
	ListTaskLiquidityRequest_Returned  ListTaskLiquidityRequestStatuses = 3
	ListTaskLiquidityRequest_Approved  ListTaskLiquidityRequestStatuses = 4
	ListTaskLiquidityRequest_Rejected  ListTaskLiquidityRequestStatuses = 5
)

// Enum value maps for ListTaskLiquidityRequestStatuses.
var (
	ListTaskLiquidityRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	ListTaskLiquidityRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x ListTaskLiquidityRequestStatuses) Enum() *ListTaskLiquidityRequestStatuses {
	p := new(ListTaskLiquidityRequestStatuses)
	*p = x
	return p
}

func (x ListTaskLiquidityRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTaskLiquidityRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[0].Descriptor()
}

func (ListTaskLiquidityRequestStatuses) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[0]
}

func (x ListTaskLiquidityRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTaskLiquidityRequestStatuses.Descriptor instead.
func (ListTaskLiquidityRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{7, 0}
}

type ListTaskLiquidityRequestSteps int32

const (
	ListTaskLiquidityRequest_AllStep  ListTaskLiquidityRequestSteps = 0
	ListTaskLiquidityRequest_Maker    ListTaskLiquidityRequestSteps = 1
	ListTaskLiquidityRequest_Checker  ListTaskLiquidityRequestSteps = 2
	ListTaskLiquidityRequest_Signer   ListTaskLiquidityRequestSteps = 3
	ListTaskLiquidityRequest_Releaser ListTaskLiquidityRequestSteps = 4
)

// Enum value maps for ListTaskLiquidityRequestSteps.
var (
	ListTaskLiquidityRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListTaskLiquidityRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListTaskLiquidityRequestSteps) Enum() *ListTaskLiquidityRequestSteps {
	p := new(ListTaskLiquidityRequestSteps)
	*p = x
	return p
}

func (x ListTaskLiquidityRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTaskLiquidityRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[1].Descriptor()
}

func (ListTaskLiquidityRequestSteps) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[1]
}

func (x ListTaskLiquidityRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTaskLiquidityRequestSteps.Descriptor instead.
func (ListTaskLiquidityRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{7, 1}
}

type ListTaskLiquidityRequestDirection int32

const (
	ListTaskLiquidityRequest_DESC ListTaskLiquidityRequestDirection = 0
	ListTaskLiquidityRequest_ASC  ListTaskLiquidityRequestDirection = 1
)

// Enum value maps for ListTaskLiquidityRequestDirection.
var (
	ListTaskLiquidityRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListTaskLiquidityRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListTaskLiquidityRequestDirection) Enum() *ListTaskLiquidityRequestDirection {
	p := new(ListTaskLiquidityRequestDirection)
	*p = x
	return p
}

func (x ListTaskLiquidityRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTaskLiquidityRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_liquidity_payload_proto_enumTypes[2].Descriptor()
}

func (ListTaskLiquidityRequestDirection) Type() protoreflect.EnumType {
	return &file_liquidity_payload_proto_enumTypes[2]
}

func (x ListTaskLiquidityRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTaskLiquidityRequestDirection.Descriptor instead.
func (ListTaskLiquidityRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{7, 2}
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{3}
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{4}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{5}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTaskLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListTaskLiquidityRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=liquidity.service.v1.ListTaskLiquidityRequestStatuses" json:"status,omitempty"`
	Step   ListTaskLiquidityRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=liquidity.service.v1.ListTaskLiquidityRequestSteps" json:"step,omitempty"`
	Limit  int32                             `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                            `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListTaskLiquidityRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=liquidity.service.v1.ListTaskLiquidityRequestDirection" json:"dir,omitempty"`
	Filter string                            `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query  string                            `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListTaskLiquidityRequest) Reset() {
	*x = ListTaskLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLiquidityRequest) ProtoMessage() {}

func (x *ListTaskLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLiquidityRequest.ProtoReflect.Descriptor instead.
func (*ListTaskLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{7}
}

func (x *ListTaskLiquidityRequest) GetStatus() ListTaskLiquidityRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListTaskLiquidityRequest_AllStatus
}

func (x *ListTaskLiquidityRequest) GetStep() ListTaskLiquidityRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListTaskLiquidityRequest_AllStep
}

func (x *ListTaskLiquidityRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTaskLiquidityRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTaskLiquidityRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListTaskLiquidityRequest) GetDir() ListTaskLiquidityRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListTaskLiquidityRequest_DESC
}

func (x *ListTaskLiquidityRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTaskLiquidityRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListLiquidityTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*ListTaskLiquidityRes `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse     `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListLiquidityTaskResponse) Reset() {
	*x = ListLiquidityTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLiquidityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiquidityTaskResponse) ProtoMessage() {}

func (x *ListLiquidityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiquidityTaskResponse.ProtoReflect.Descriptor instead.
func (*ListLiquidityTaskResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{8}
}

func (x *ListLiquidityTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListLiquidityTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListLiquidityTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListLiquidityTaskResponse) GetData() []*ListTaskLiquidityRes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListLiquidityTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListTaskLiquidityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityID  uint64                `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	CompanyGroup *CompanyGroupListTask `protobuf:"bytes,2,opt,name=companyGroup,proto3" json:"companyGroup,omitempty"`
	Company      *CompanyListTask      `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	CurrencyTask *CurrencyListTask     `protobuf:"bytes,4,opt,name=CurrencyTask,proto3" json:"CurrencyTask,omitempty"`
	SchemeType   string                `protobuf:"bytes,5,opt,name=schemeType,proto3" json:"schemeType,omitempty"`
	Description  string                `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Cashflow     []*CashflowsListTask  `protobuf:"bytes,7,rep,name=cashflow,proto3" json:"cashflow,omitempty"`
	StartDate    string                `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      string                `protobuf:"bytes,9,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Disabled     bool                  `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Priority     int32                 `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	Task         *TaskListTask         `protobuf:"bytes,12,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *ListTaskLiquidityRes) Reset() {
	*x = ListTaskLiquidityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLiquidityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLiquidityRes) ProtoMessage() {}

func (x *ListTaskLiquidityRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLiquidityRes.ProtoReflect.Descriptor instead.
func (*ListTaskLiquidityRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{9}
}

func (x *ListTaskLiquidityRes) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *ListTaskLiquidityRes) GetCompanyGroup() *CompanyGroupListTask {
	if x != nil {
		return x.CompanyGroup
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetCompany() *CompanyListTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetCurrencyTask() *CurrencyListTask {
	if x != nil {
		return x.CurrencyTask
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetCashflow() []*CashflowsListTask {
	if x != nil {
		return x.Cashflow
	}
	return nil
}

func (x *ListTaskLiquidityRes) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListTaskLiquidityRes) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *ListTaskLiquidityRes) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ListTaskLiquidityRes) GetTask() *TaskListTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type CompanyGroupListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyGroupID uint64 `protobuf:"varint,1,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyGroupListTask) Reset() {
	*x = CompanyGroupListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGroupListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGroupListTask) ProtoMessage() {}

func (x *CompanyGroupListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGroupListTask.ProtoReflect.Descriptor instead.
func (*CompanyGroupListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{10}
}

func (x *CompanyGroupListTask) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CompanyGroupListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyListTask) Reset() {
	*x = CompanyListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyListTask) ProtoMessage() {}

func (x *CompanyListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyListTask.ProtoReflect.Descriptor instead.
func (*CompanyListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{11}
}

func (x *CompanyListTask) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *CompanyListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CurrencyListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyID uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CurrencyListTask) Reset() {
	*x = CurrencyListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyListTask) ProtoMessage() {}

func (x *CurrencyListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyListTask.ProtoReflect.Descriptor instead.
func (*CurrencyListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{12}
}

func (x *CurrencyListTask) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CurrencyListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CashflowsListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashflowID   string `protobuf:"bytes,1,opt,name=cashflowID,proto3" json:"cashflowID,omitempty"`
	CashflowType string `protobuf:"bytes,2,opt,name=cashflowType,proto3" json:"cashflowType,omitempty"`
}

func (x *CashflowsListTask) Reset() {
	*x = CashflowsListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowsListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowsListTask) ProtoMessage() {}

func (x *CashflowsListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowsListTask.ProtoReflect.Descriptor instead.
func (*CashflowsListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{13}
}

func (x *CashflowsListTask) GetCashflowID() string {
	if x != nil {
		return x.CashflowID
	}
	return ""
}

func (x *CashflowsListTask) GetCashflowType() string {
	if x != nil {
		return x.CashflowType
	}
	return ""
}

type TaskListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID    uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type      string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status    string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step      string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TaskListTask) Reset() {
	*x = TaskListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListTask) ProtoMessage() {}

func (x *TaskListTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListTask.ProtoReflect.Descriptor instead.
func (*TaskListTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{14}
}

func (x *TaskListTask) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskListTask) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskListTask) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskListTask) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *TaskListTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskListTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DetailLiquidityTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DetailLiquidityTaskRequest) Reset() {
	*x = DetailLiquidityTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailLiquidityTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailLiquidityTaskRequest) ProtoMessage() {}

func (x *DetailLiquidityTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailLiquidityTaskRequest.ProtoReflect.Descriptor instead.
func (*DetailLiquidityTaskRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{15}
}

func (x *DetailLiquidityTaskRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DetailLiquidityTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DetailTaskLiquidityRes `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DetailLiquidityTaskResponse) Reset() {
	*x = DetailLiquidityTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailLiquidityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailLiquidityTaskResponse) ProtoMessage() {}

func (x *DetailLiquidityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailLiquidityTaskResponse.ProtoReflect.Descriptor instead.
func (*DetailLiquidityTaskResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{16}
}

func (x *DetailLiquidityTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DetailLiquidityTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DetailLiquidityTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DetailLiquidityTaskResponse) GetData() *DetailTaskLiquidityRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type DetailTaskLiquidityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityID  uint64                  `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	CompanyGroup *CompanyGroupDetailTask `protobuf:"bytes,2,opt,name=companyGroup,proto3" json:"companyGroup,omitempty"`
	Company      *CompanyDetailTask      `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	CurrencyTask *CurrencyDetailTask     `protobuf:"bytes,4,opt,name=CurrencyTask,proto3" json:"CurrencyTask,omitempty"`
	SchemeType   string                  `protobuf:"bytes,5,opt,name=schemeType,proto3" json:"schemeType,omitempty"`
	Description  string                  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Cashflows    []*CashflowsDetailTask  `protobuf:"bytes,7,rep,name=cashflows,proto3" json:"cashflows,omitempty"`
	StartDate    string                  `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      string                  `protobuf:"bytes,9,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Disabled     bool                    `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Priority     int32                   `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	Task         *TaskListTask           `protobuf:"bytes,12,opt,name=task,proto3" json:"task,omitempty"`
	CreatedAt    *timestamppb.Timestamp  `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp  `protobuf:"bytes,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DetailTaskLiquidityRes) Reset() {
	*x = DetailTaskLiquidityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTaskLiquidityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTaskLiquidityRes) ProtoMessage() {}

func (x *DetailTaskLiquidityRes) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTaskLiquidityRes.ProtoReflect.Descriptor instead.
func (*DetailTaskLiquidityRes) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{17}
}

func (x *DetailTaskLiquidityRes) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *DetailTaskLiquidityRes) GetCompanyGroup() *CompanyGroupDetailTask {
	if x != nil {
		return x.CompanyGroup
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetCompany() *CompanyDetailTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetCurrencyTask() *CurrencyDetailTask {
	if x != nil {
		return x.CurrencyTask
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetCashflows() []*CashflowsDetailTask {
	if x != nil {
		return x.Cashflows
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *DetailTaskLiquidityRes) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *DetailTaskLiquidityRes) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DetailTaskLiquidityRes) GetTask() *TaskListTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DetailTaskLiquidityRes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CompanyGroupDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyGroupID uint64 `protobuf:"varint,1,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyGroupDetailTask) Reset() {
	*x = CompanyGroupDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGroupDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGroupDetailTask) ProtoMessage() {}

func (x *CompanyGroupDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGroupDetailTask.ProtoReflect.Descriptor instead.
func (*CompanyGroupDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{18}
}

func (x *CompanyGroupDetailTask) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CompanyGroupDetailTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyDetailTask) Reset() {
	*x = CompanyDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDetailTask) ProtoMessage() {}

func (x *CompanyDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDetailTask.ProtoReflect.Descriptor instead.
func (*CompanyDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{19}
}

func (x *CompanyDetailTask) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *CompanyDetailTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CurrencyDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyID uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CurrencyDetailTask) Reset() {
	*x = CurrencyDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyDetailTask) ProtoMessage() {}

func (x *CurrencyDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyDetailTask.ProtoReflect.Descriptor instead.
func (*CurrencyDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{20}
}

func (x *CurrencyDetailTask) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CurrencyDetailTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CashflowsDetailTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashflowID     string `protobuf:"bytes,1,opt,name=cashflowID,proto3" json:"cashflowID,omitempty"`
	CashflowType   string `protobuf:"bytes,2,opt,name=cashflowType,proto3" json:"cashflowType,omitempty"`
	Period         string `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	PeriodTime     string `protobuf:"bytes,4,opt,name=periodTime,proto3" json:"periodTime,omitempty"`
	TBAType        string `protobuf:"bytes,5,opt,name=TBAType,proto3" json:"TBAType,omitempty"`
	TBAValue       int64  `protobuf:"varint,6,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	TBARoundedBase bool   `protobuf:"varint,7,opt,name=TBARoundedBase,proto3" json:"TBARoundedBase,omitempty"`
	TBATopValue    int64  `protobuf:"varint,8,opt,name=TBATopValue,proto3" json:"TBATopValue,omitempty"`
	TBABottomValue int64  `protobuf:"varint,9,opt,name=TBABottomValue,proto3" json:"TBABottomValue,omitempty"`
	TBAFillDefisit bool   `protobuf:"varint,10,opt,name=TBAFillDefisit,proto3" json:"TBAFillDefisit,omitempty"`
	TBAFillToTop   bool   `protobuf:"varint,11,opt,name=TBAFillToTop,proto3" json:"TBAFillToTop,omitempty"`
	Reccurring     bool   `protobuf:"varint,12,opt,name=Reccurring,proto3" json:"Reccurring,omitempty"`
	ReccurringDays int64  `protobuf:"varint,13,opt,name=ReccurringDays,proto3" json:"ReccurringDays,omitempty"`
}

func (x *CashflowsDetailTask) Reset() {
	*x = CashflowsDetailTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowsDetailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowsDetailTask) ProtoMessage() {}

func (x *CashflowsDetailTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowsDetailTask.ProtoReflect.Descriptor instead.
func (*CashflowsDetailTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{21}
}

func (x *CashflowsDetailTask) GetCashflowID() string {
	if x != nil {
		return x.CashflowID
	}
	return ""
}

func (x *CashflowsDetailTask) GetCashflowType() string {
	if x != nil {
		return x.CashflowType
	}
	return ""
}

func (x *CashflowsDetailTask) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CashflowsDetailTask) GetPeriodTime() string {
	if x != nil {
		return x.PeriodTime
	}
	return ""
}

func (x *CashflowsDetailTask) GetTBAType() string {
	if x != nil {
		return x.TBAType
	}
	return ""
}

func (x *CashflowsDetailTask) GetTBAValue() int64 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *CashflowsDetailTask) GetTBARoundedBase() bool {
	if x != nil {
		return x.TBARoundedBase
	}
	return false
}

func (x *CashflowsDetailTask) GetTBATopValue() int64 {
	if x != nil {
		return x.TBATopValue
	}
	return 0
}

func (x *CashflowsDetailTask) GetTBABottomValue() int64 {
	if x != nil {
		return x.TBABottomValue
	}
	return 0
}

func (x *CashflowsDetailTask) GetTBAFillDefisit() bool {
	if x != nil {
		return x.TBAFillDefisit
	}
	return false
}

func (x *CashflowsDetailTask) GetTBAFillToTop() bool {
	if x != nil {
		return x.TBAFillToTop
	}
	return false
}

func (x *CashflowsDetailTask) GetReccurring() bool {
	if x != nil {
		return x.Reccurring
	}
	return false
}

func (x *CashflowsDetailTask) GetReccurringDays() int64 {
	if x != nil {
		return x.ReccurringDays
	}
	return 0
}

type CreateLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateTaskLiquidityRequest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64                      `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateLiquidityRequest) Reset() {
	*x = CreateLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLiquidityRequest) ProtoMessage() {}

func (x *CreateLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLiquidityRequest.ProtoReflect.Descriptor instead.
func (*CreateLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{22}
}

func (x *CreateLiquidityRequest) GetData() *CreateTaskLiquidityRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateLiquidityRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateTaskLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Company         *CompanyCreateTask           `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	CompanyGroup    *CompanyGroupCreateTask      `protobuf:"bytes,3,opt,name=companyGroup,proto3" json:"companyGroup,omitempty"`
	Currency        *CurrencyCreateTask          `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	CompanyGroupID  uint64                       `protobuf:"varint,5,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	CompanyID       string                       `protobuf:"bytes,6,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CurrencyID      uint64                       `protobuf:"varint,7,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	SchemeType      string                       `protobuf:"bytes,8,opt,name=schemeType,proto3" json:"schemeType,omitempty"`
	Description     string                       `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Cashflow        []*CashflowsCreateTask       `protobuf:"bytes,10,rep,name=cashflow,proto3" json:"cashflow,omitempty"`
	StartDate       string                       `protobuf:"bytes,11,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate         string                       `protobuf:"bytes,12,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Priority        int32                        `protobuf:"varint,13,opt,name=priority,proto3" json:"priority,omitempty"`
	PriorityUpdates []*PriorityUpdatesCreateTask `protobuf:"bytes,14,rep,name=PriorityUpdates,proto3" json:"PriorityUpdates,omitempty"`
	IsDraft         bool                         `protobuf:"varint,15,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	Disabled        bool                         `protobuf:"varint,16,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *CreateTaskLiquidityRequest) Reset() {
	*x = CreateTaskLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskLiquidityRequest) ProtoMessage() {}

func (x *CreateTaskLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskLiquidityRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{23}
}

func (x *CreateTaskLiquidityRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetCompany() *CompanyCreateTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetCompanyGroup() *CompanyGroupCreateTask {
	if x != nil {
		return x.CompanyGroup
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetCurrency() *CurrencyCreateTask {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetSchemeType() string {
	if x != nil {
		return x.SchemeType
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetCashflow() []*CashflowsCreateTask {
	if x != nil {
		return x.Cashflow
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateTaskLiquidityRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateTaskLiquidityRequest) GetPriorityUpdates() []*PriorityUpdatesCreateTask {
	if x != nil {
		return x.PriorityUpdates
	}
	return nil
}

func (x *CreateTaskLiquidityRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *CreateTaskLiquidityRequest) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type CompanyCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyCreateTask) Reset() {
	*x = CompanyCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyCreateTask) ProtoMessage() {}

func (x *CompanyCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyCreateTask.ProtoReflect.Descriptor instead.
func (*CompanyCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{24}
}

func (x *CompanyCreateTask) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *CompanyCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyGroupCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyGroupID uint64 `protobuf:"varint,1,opt,name=companyGroupID,proto3" json:"companyGroupID,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyGroupCreateTask) Reset() {
	*x = CompanyGroupCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyGroupCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyGroupCreateTask) ProtoMessage() {}

func (x *CompanyGroupCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyGroupCreateTask.ProtoReflect.Descriptor instead.
func (*CompanyGroupCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{25}
}

func (x *CompanyGroupCreateTask) GetCompanyGroupID() uint64 {
	if x != nil {
		return x.CompanyGroupID
	}
	return 0
}

func (x *CompanyGroupCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CurrencyCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyID uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CurrencyCreateTask) Reset() {
	*x = CurrencyCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyCreateTask) ProtoMessage() {}

func (x *CurrencyCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyCreateTask.ProtoReflect.Descriptor instead.
func (*CurrencyCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{26}
}

func (x *CurrencyCreateTask) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *CurrencyCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PriorityUpdatesCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityID uint64 `protobuf:"varint,1,opt,name=liquidityID,proto3" json:"liquidityID,omitempty"`
	Priority    int32  `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *PriorityUpdatesCreateTask) Reset() {
	*x = PriorityUpdatesCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriorityUpdatesCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriorityUpdatesCreateTask) ProtoMessage() {}

func (x *PriorityUpdatesCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriorityUpdatesCreateTask.ProtoReflect.Descriptor instead.
func (*PriorityUpdatesCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{27}
}

func (x *PriorityUpdatesCreateTask) GetLiquidityID() uint64 {
	if x != nil {
		return x.LiquidityID
	}
	return 0
}

func (x *PriorityUpdatesCreateTask) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type CashflowsCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CashflowType   string `protobuf:"bytes,2,opt,name=cashflowType,proto3" json:"cashflowType,omitempty"`
	Period         string `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	PeriodTime     string `protobuf:"bytes,4,opt,name=periodTime,proto3" json:"periodTime,omitempty"`
	TBAType        string `protobuf:"bytes,5,opt,name=TBAType,proto3" json:"TBAType,omitempty"`
	TBAValue       int64  `protobuf:"varint,6,opt,name=TBAValue,proto3" json:"TBAValue,omitempty"`
	TBARoundedBase bool   `protobuf:"varint,7,opt,name=TBARoundedBase,proto3" json:"TBARoundedBase,omitempty"`
	TBATopValue    int64  `protobuf:"varint,8,opt,name=TBATopValue,proto3" json:"TBATopValue,omitempty"`
	TBABottomValue int64  `protobuf:"varint,9,opt,name=TBABottomValue,proto3" json:"TBABottomValue,omitempty"`
	TBAFillDefisit bool   `protobuf:"varint,10,opt,name=TBAFillDefisit,proto3" json:"TBAFillDefisit,omitempty"`
	TBAFillToTop   bool   `protobuf:"varint,11,opt,name=TBAFillToTop,proto3" json:"TBAFillToTop,omitempty"`
	Reccurring     bool   `protobuf:"varint,12,opt,name=Reccurring,proto3" json:"Reccurring,omitempty"`
	ReccurringDays int64  `protobuf:"varint,13,opt,name=ReccurringDays,proto3" json:"ReccurringDays,omitempty"`
}

func (x *CashflowsCreateTask) Reset() {
	*x = CashflowsCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashflowsCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashflowsCreateTask) ProtoMessage() {}

func (x *CashflowsCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashflowsCreateTask.ProtoReflect.Descriptor instead.
func (*CashflowsCreateTask) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{28}
}

func (x *CashflowsCreateTask) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashflowsCreateTask) GetCashflowType() string {
	if x != nil {
		return x.CashflowType
	}
	return ""
}

func (x *CashflowsCreateTask) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CashflowsCreateTask) GetPeriodTime() string {
	if x != nil {
		return x.PeriodTime
	}
	return ""
}

func (x *CashflowsCreateTask) GetTBAType() string {
	if x != nil {
		return x.TBAType
	}
	return ""
}

func (x *CashflowsCreateTask) GetTBAValue() int64 {
	if x != nil {
		return x.TBAValue
	}
	return 0
}

func (x *CashflowsCreateTask) GetTBARoundedBase() bool {
	if x != nil {
		return x.TBARoundedBase
	}
	return false
}

func (x *CashflowsCreateTask) GetTBATopValue() int64 {
	if x != nil {
		return x.TBATopValue
	}
	return 0
}

func (x *CashflowsCreateTask) GetTBABottomValue() int64 {
	if x != nil {
		return x.TBABottomValue
	}
	return 0
}

func (x *CashflowsCreateTask) GetTBAFillDefisit() bool {
	if x != nil {
		return x.TBAFillDefisit
	}
	return false
}

func (x *CashflowsCreateTask) GetTBAFillToTop() bool {
	if x != nil {
		return x.TBAFillToTop
	}
	return false
}

func (x *CashflowsCreateTask) GetReccurring() bool {
	if x != nil {
		return x.Reccurring
	}
	return false
}

func (x *CashflowsCreateTask) GetReccurringDays() int64 {
	if x != nil {
		return x.ReccurringDays
	}
	return 0
}

type CreateTaskLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTaskLiquidityResponse) Reset() {
	*x = CreateTaskLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskLiquidityResponse) ProtoMessage() {}

func (x *CreateTaskLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskLiquidityResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{29}
}

func (x *CreateTaskLiquidityResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateTaskLiquidityResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateTaskLiquidityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteLiquidityTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLiquidityTaskRequest) Reset() {
	*x = DeleteLiquidityTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLiquidityTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLiquidityTaskRequest) ProtoMessage() {}

func (x *DeleteLiquidityTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLiquidityTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteLiquidityTaskRequest) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteLiquidityTaskRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTaskLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTaskLiquidityResponse) Reset() {
	*x = DeleteTaskLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_liquidity_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskLiquidityResponse) ProtoMessage() {}

func (x *DeleteTaskLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_liquidity_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskLiquidityResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_liquidity_payload_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteTaskLiquidityResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteTaskLiquidityResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteTaskLiquidityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_liquidity_payload_proto protoreflect.FileDescriptor

var file_liquidity_payload_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56,
	0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x3c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x57, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x86, 0x0b, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x4a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92,
	0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e,
	0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e,
	0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45,
	0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e,
	0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92,
	0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52,
	0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b,
	0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65,
	0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49,
	0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5b, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72,
	0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43,
	0x10, 0x01, 0x22, 0xe9, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4,
	0x04, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x4a, 0x0a, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x52, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46,
	0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xda, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2c, 0x0a, 0x1a,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x1b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xc4, 0x05, 0x0a, 0x16, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x50, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x41, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x09, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73,
	0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcd,
	0x03, 0x0a, 0x13, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c,
	0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x42,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42,
	0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73,
	0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54,
	0x6f, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c,
	0x6c, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x52, 0x65, 0x63, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x22, 0x76,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xee, 0x09, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x55, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x08,
	0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x73, 0x68, 0x66,
	0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x0f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3a, 0xfc, 0x03, 0x92, 0x41, 0xf8, 0x03, 0x32,
	0xf5, 0x03, 0x7b, 0x22, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x2c, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x22, 0x3a, 0x22,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x3a,
	0x5b, 0x7b, 0x22, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x2c, 0x22, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x54, 0x42, 0x41, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a,
	0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22,
	0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c,
	0x22, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x22,
	0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x6f,
	0x54, 0x6f, 0x70, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x52, 0x65, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x52, 0x65, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x22, 0x3a, 0x22, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x5d, 0x2c, 0x22, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c,
	0x22, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x3a, 0x5b,
	0x7b, 0x22, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x22, 0x3a, 0x22,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x7d, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59,
	0x0a, 0x19, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0xbd, 0x03, 0x0a, 0x13, 0x43, 0x61,
	0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x54, 0x42, 0x41, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x42, 0x41, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x54, 0x42, 0x41,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54,
	0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x54, 0x42, 0x41, 0x54, 0x6f, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x42, 0x41, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c,
	0x44, 0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x54,
	0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x73, 0x69, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x6f, 0x70, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x54, 0x42, 0x41, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x6f,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x22, 0x61, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x1b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_liquidity_payload_proto_rawDescOnce sync.Once
	file_liquidity_payload_proto_rawDescData = file_liquidity_payload_proto_rawDesc
)

func file_liquidity_payload_proto_rawDescGZIP() []byte {
	file_liquidity_payload_proto_rawDescOnce.Do(func() {
		file_liquidity_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_liquidity_payload_proto_rawDescData)
	})
	return file_liquidity_payload_proto_rawDescData
}

var file_liquidity_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_liquidity_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_liquidity_payload_proto_goTypes = []interface{}{
	(ListTaskLiquidityRequestStatuses)(0),  // 0: liquidity.service.v1.ListTaskLiquidityRequest.statuses
	(ListTaskLiquidityRequestSteps)(0),     // 1: liquidity.service.v1.ListTaskLiquidityRequest.steps
	(ListTaskLiquidityRequestDirection)(0), // 2: liquidity.service.v1.ListTaskLiquidityRequest.direction
	(*LoginRequest)(nil),                   // 3: liquidity.service.v1.LoginRequest
	(*LoginResponse)(nil),                  // 4: liquidity.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),            // 5: liquidity.service.v1.HealthCheckResponse
	(*Empty)(nil),                          // 6: liquidity.service.v1.Empty
	(*PaginationResponse)(nil),             // 7: liquidity.service.v1.PaginationResponse
	(*Sort)(nil),                           // 8: liquidity.service.v1.Sort
	(*ErrorBodyResponse)(nil),              // 9: liquidity.service.v1.errorBodyResponse
	(*ListTaskLiquidityRequest)(nil),       // 10: liquidity.service.v1.ListTaskLiquidityRequest
	(*ListLiquidityTaskResponse)(nil),      // 11: liquidity.service.v1.ListLiquidityTaskResponse
	(*ListTaskLiquidityRes)(nil),           // 12: liquidity.service.v1.ListTaskLiquidityRes
	(*CompanyGroupListTask)(nil),           // 13: liquidity.service.v1.CompanyGroupListTask
	(*CompanyListTask)(nil),                // 14: liquidity.service.v1.CompanyListTask
	(*CurrencyListTask)(nil),               // 15: liquidity.service.v1.CurrencyListTask
	(*CashflowsListTask)(nil),              // 16: liquidity.service.v1.CashflowsListTask
	(*TaskListTask)(nil),                   // 17: liquidity.service.v1.TaskListTask
	(*DetailLiquidityTaskRequest)(nil),     // 18: liquidity.service.v1.DetailLiquidityTaskRequest
	(*DetailLiquidityTaskResponse)(nil),    // 19: liquidity.service.v1.DetailLiquidityTaskResponse
	(*DetailTaskLiquidityRes)(nil),         // 20: liquidity.service.v1.DetailTaskLiquidityRes
	(*CompanyGroupDetailTask)(nil),         // 21: liquidity.service.v1.CompanyGroupDetailTask
	(*CompanyDetailTask)(nil),              // 22: liquidity.service.v1.CompanyDetailTask
	(*CurrencyDetailTask)(nil),             // 23: liquidity.service.v1.CurrencyDetailTask
	(*CashflowsDetailTask)(nil),            // 24: liquidity.service.v1.CashflowsDetailTask
	(*CreateLiquidityRequest)(nil),         // 25: liquidity.service.v1.CreateLiquidityRequest
	(*CreateTaskLiquidityRequest)(nil),     // 26: liquidity.service.v1.CreateTaskLiquidityRequest
	(*CompanyCreateTask)(nil),              // 27: liquidity.service.v1.CompanyCreateTask
	(*CompanyGroupCreateTask)(nil),         // 28: liquidity.service.v1.CompanyGroupCreateTask
	(*CurrencyCreateTask)(nil),             // 29: liquidity.service.v1.CurrencyCreateTask
	(*PriorityUpdatesCreateTask)(nil),      // 30: liquidity.service.v1.PriorityUpdatesCreateTask
	(*CashflowsCreateTask)(nil),            // 31: liquidity.service.v1.CashflowsCreateTask
	(*CreateTaskLiquidityResponse)(nil),    // 32: liquidity.service.v1.CreateTaskLiquidityResponse
	(*DeleteLiquidityTaskRequest)(nil),     // 33: liquidity.service.v1.DeleteLiquidityTaskRequest
	(*DeleteTaskLiquidityResponse)(nil),    // 34: liquidity.service.v1.DeleteTaskLiquidityResponse
	(*timestamppb.Timestamp)(nil),          // 35: google.protobuf.Timestamp
}
var file_liquidity_payload_proto_depIdxs = []int32{
	0,  // 0: liquidity.service.v1.ListTaskLiquidityRequest.status:type_name -> liquidity.service.v1.ListTaskLiquidityRequest.statuses
	1,  // 1: liquidity.service.v1.ListTaskLiquidityRequest.step:type_name -> liquidity.service.v1.ListTaskLiquidityRequest.steps
	2,  // 2: liquidity.service.v1.ListTaskLiquidityRequest.dir:type_name -> liquidity.service.v1.ListTaskLiquidityRequest.direction
	12, // 3: liquidity.service.v1.ListLiquidityTaskResponse.data:type_name -> liquidity.service.v1.ListTaskLiquidityRes
	7,  // 4: liquidity.service.v1.ListLiquidityTaskResponse.pagination:type_name -> liquidity.service.v1.PaginationResponse
	13, // 5: liquidity.service.v1.ListTaskLiquidityRes.companyGroup:type_name -> liquidity.service.v1.CompanyGroupListTask
	14, // 6: liquidity.service.v1.ListTaskLiquidityRes.company:type_name -> liquidity.service.v1.CompanyListTask
	15, // 7: liquidity.service.v1.ListTaskLiquidityRes.CurrencyTask:type_name -> liquidity.service.v1.CurrencyListTask
	16, // 8: liquidity.service.v1.ListTaskLiquidityRes.cashflow:type_name -> liquidity.service.v1.CashflowsListTask
	17, // 9: liquidity.service.v1.ListTaskLiquidityRes.task:type_name -> liquidity.service.v1.TaskListTask
	35, // 10: liquidity.service.v1.TaskListTask.createdAt:type_name -> google.protobuf.Timestamp
	35, // 11: liquidity.service.v1.TaskListTask.updatedAt:type_name -> google.protobuf.Timestamp
	20, // 12: liquidity.service.v1.DetailLiquidityTaskResponse.data:type_name -> liquidity.service.v1.DetailTaskLiquidityRes
	21, // 13: liquidity.service.v1.DetailTaskLiquidityRes.companyGroup:type_name -> liquidity.service.v1.CompanyGroupDetailTask
	22, // 14: liquidity.service.v1.DetailTaskLiquidityRes.company:type_name -> liquidity.service.v1.CompanyDetailTask
	23, // 15: liquidity.service.v1.DetailTaskLiquidityRes.CurrencyTask:type_name -> liquidity.service.v1.CurrencyDetailTask
	24, // 16: liquidity.service.v1.DetailTaskLiquidityRes.cashflows:type_name -> liquidity.service.v1.CashflowsDetailTask
	17, // 17: liquidity.service.v1.DetailTaskLiquidityRes.task:type_name -> liquidity.service.v1.TaskListTask
	35, // 18: liquidity.service.v1.DetailTaskLiquidityRes.createdAt:type_name -> google.protobuf.Timestamp
	35, // 19: liquidity.service.v1.DetailTaskLiquidityRes.updatedAt:type_name -> google.protobuf.Timestamp
	26, // 20: liquidity.service.v1.CreateLiquidityRequest.data:type_name -> liquidity.service.v1.CreateTaskLiquidityRequest
	27, // 21: liquidity.service.v1.CreateTaskLiquidityRequest.company:type_name -> liquidity.service.v1.CompanyCreateTask
	28, // 22: liquidity.service.v1.CreateTaskLiquidityRequest.companyGroup:type_name -> liquidity.service.v1.CompanyGroupCreateTask
	29, // 23: liquidity.service.v1.CreateTaskLiquidityRequest.currency:type_name -> liquidity.service.v1.CurrencyCreateTask
	31, // 24: liquidity.service.v1.CreateTaskLiquidityRequest.cashflow:type_name -> liquidity.service.v1.CashflowsCreateTask
	30, // 25: liquidity.service.v1.CreateTaskLiquidityRequest.PriorityUpdates:type_name -> liquidity.service.v1.PriorityUpdatesCreateTask
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_liquidity_payload_proto_init() }
func file_liquidity_payload_proto_init() {
	if File_liquidity_payload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_liquidity_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLiquidityTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskLiquidityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGroupListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowsListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailLiquidityTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailLiquidityTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTaskLiquidityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGroupDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowsDetailTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyGroupCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriorityUpdatesCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashflowsCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLiquidityTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_liquidity_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_liquidity_payload_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_liquidity_payload_proto_goTypes,
		DependencyIndexes: file_liquidity_payload_proto_depIdxs,
		EnumInfos:         file_liquidity_payload_proto_enumTypes,
		MessageInfos:      file_liquidity_payload_proto_msgTypes,
	}.Build()
	File_liquidity_payload_proto = out.File
	file_liquidity_payload_proto_rawDesc = nil
	file_liquidity_payload_proto_goTypes = nil
	file_liquidity_payload_proto_depIdxs = nil
}
