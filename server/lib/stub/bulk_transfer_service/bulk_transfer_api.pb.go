// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: bulk_transfer_api.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_bulk_transfer_api_proto protoreflect.FileDescriptor

var file_bulk_transfer_api_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x62, 0x75, 0x6c, 0x6b, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74,
	0x74, 0x70, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x62, 0x75,
	0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x8c, 0x17, 0x0a, 0x0a,
	0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc2, 0x01, 0x0a, 0x0b, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2c, 0x2e, 0x62, 0x75, 0x6c,
	0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x92, 0x41, 0x32, 0x12, 0x0c, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x20, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x20, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x20,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x00, 0x12,
	0xec, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x38, 0x2e, 0x62, 0x75,
	0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75,
	0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x80, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x7d, 0x92, 0x41, 0x48, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x14, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x20, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x21, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x8f,
	0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x3e, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x97, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12,
	0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x7b, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x7d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x7d, 0x92, 0x41, 0x56, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b,
	0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1b, 0x42, 0x75, 0x6c, 0x6b, 0x20,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x20, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x28, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0xe0, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x92, 0x41, 0x3a, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x1a, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50,
	0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x82, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42,
	0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x3a, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x7b, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x7d, 0x92, 0x41, 0x41, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0xa2, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62,
	0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22,
	0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x3a, 0x01, 0x2a, 0x5a, 0x25, 0x22, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x7b, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x7d, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x48, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x42, 0x75, 0x6c,
	0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x21, 0x54, 0x68, 0x69, 0x73,
	0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x99, 0x02,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x62, 0x75,
	0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x75,
	0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x94, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f,
	0x74, 0x61, 0x73, 0x6b, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x7b, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x62, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x20, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0f, 0x53, 0x65, 0x74, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x40, 0x73, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73,
	0x6b, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x20, 0x27, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x27, 0x2c, 0x20, 0x27, 0x72, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x27, 0x2c,
	0x20, 0x27, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x27, 0x12, 0xa2, 0x01, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x2e, 0x62, 0x75,
	0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c,
	0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x62, 0x75,
	0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c,
	0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2,
	0x01, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3f, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x42, 0x75, 0x6c, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x75, 0x6c,
	0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8d, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42,
	0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x62, 0x75,
	0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xa8, 0x01, 0x0a, 0x1f, 0x45, 0x78, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x12, 0x40, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x42, 0x75, 0x6c, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x12,
	0x45, 0x78, 0x65, 0x63, 0x4d, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4a,
	0x6f, 0x62, 0x12, 0x33, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x4d, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x84, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x34, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x61, 0x73,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x33, 0x2e,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x72, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x92, 0x41, 0x69, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a,
	0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_bulk_transfer_api_proto_goTypes = []interface{}{
	(*HealthCheckRequest)(nil),                      // 0: bulk_transfer.service.v1.HealthCheckRequest
	(*GetTaskBulkTransferFileRequest)(nil),          // 1: bulk_transfer.service.v1.GetTaskBulkTransferFileRequest
	(*GetTaskBulkTransferDetailFileRequest)(nil),    // 2: bulk_transfer.service.v1.GetTaskBulkTransferDetailFileRequest
	(*GetTaskBulkTransferRequest)(nil),              // 3: bulk_transfer.service.v1.GetTaskBulkTransferRequest
	(*GetTaskBulkTransferDetailRequest)(nil),        // 4: bulk_transfer.service.v1.GetTaskBulkTransferDetailRequest
	(*CreateTaskBulkTransferRequest)(nil),           // 5: bulk_transfer.service.v1.CreateTaskBulkTransferRequest
	(*SetTaskBulkTransferRequest)(nil),              // 6: bulk_transfer.service.v1.SetTaskBulkTransferRequest
	(*CreateBulkTransferTransactionRequest)(nil),    // 7: bulk_transfer.service.v1.CreateBulkTransferTransactionRequest
	(*CancelBulkTransferTransactionRequest)(nil),    // 8: bulk_transfer.service.v1.CancelBulkTransferTransactionRequest
	(*ExecBulkTransferRequest)(nil),                 // 9: bulk_transfer.service.v1.ExecBulkTransferRequest
	(*ExecFailedBulkTransferRequest)(nil),           // 10: bulk_transfer.service.v1.ExecFailedBulkTransferRequest
	(*ExecFileCheckingBulkTransferJobRequest)(nil),  // 11: bulk_transfer.service.v1.ExecFileCheckingBulkTransferJobRequest
	(*ExecMassInquiryJobRequest)(nil),               // 12: bulk_transfer.service.v1.ExecMassInquiryJobRequest
	(*ExecMassTransferJobRequest)(nil),              // 13: bulk_transfer.service.v1.ExecMassTransferJobRequest
	(*CreateMassTransferRequest)(nil),               // 14: bulk_transfer.service.v1.CreateMassTransferRequest
	(*HealthCheckResponse)(nil),                     // 15: bulk_transfer.service.v1.HealthCheckResponse
	(*httpbody.HttpBody)(nil),                       // 16: google.api.HttpBody
	(*GetTaskBulkTransferResponse)(nil),             // 17: bulk_transfer.service.v1.GetTaskBulkTransferResponse
	(*GetTaskBulkTransferDetailResponse)(nil),       // 18: bulk_transfer.service.v1.GetTaskBulkTransferDetailResponse
	(*CreateTaskBulkTransferResponse)(nil),          // 19: bulk_transfer.service.v1.CreateTaskBulkTransferResponse
	(*SetTaskBulkTransferResponse)(nil),             // 20: bulk_transfer.service.v1.SetTaskBulkTransferResponse
	(*CreateBulkTransferTransactionResponse)(nil),   // 21: bulk_transfer.service.v1.CreateBulkTransferTransactionResponse
	(*CancelBulkTransferTransactionResponse)(nil),   // 22: bulk_transfer.service.v1.CancelBulkTransferTransactionResponse
	(*ExecBulkTransferResponse)(nil),                // 23: bulk_transfer.service.v1.ExecBulkTransferResponse
	(*ExecFailedBulkTransferResponse)(nil),          // 24: bulk_transfer.service.v1.ExecFailedBulkTransferResponse
	(*ExecFileCheckingBulkTransferJobResponse)(nil), // 25: bulk_transfer.service.v1.ExecFileCheckingBulkTransferJobResponse
	(*ExecMassInquiryJobResponse)(nil),              // 26: bulk_transfer.service.v1.ExecMassInquiryJobResponse
	(*ExecMassTransferJobResponse)(nil),             // 27: bulk_transfer.service.v1.ExecMassTransferJobResponse
	(*CreateMassTransferResponse)(nil),              // 28: bulk_transfer.service.v1.CreateMassTransferResponse
}
var file_bulk_transfer_api_proto_depIdxs = []int32{
	0,  // 0: bulk_transfer.service.v1.ApiService.HealthCheck:input_type -> bulk_transfer.service.v1.HealthCheckRequest
	1,  // 1: bulk_transfer.service.v1.ApiService.GetTaskBulkTransferFile:input_type -> bulk_transfer.service.v1.GetTaskBulkTransferFileRequest
	2,  // 2: bulk_transfer.service.v1.ApiService.GetTaskBulkTransferDetailFile:input_type -> bulk_transfer.service.v1.GetTaskBulkTransferDetailFileRequest
	3,  // 3: bulk_transfer.service.v1.ApiService.GetTaskBulkTransfer:input_type -> bulk_transfer.service.v1.GetTaskBulkTransferRequest
	4,  // 4: bulk_transfer.service.v1.ApiService.GetTaskBulkTransferDetail:input_type -> bulk_transfer.service.v1.GetTaskBulkTransferDetailRequest
	5,  // 5: bulk_transfer.service.v1.ApiService.CreateTaskBulkTransfer:input_type -> bulk_transfer.service.v1.CreateTaskBulkTransferRequest
	6,  // 6: bulk_transfer.service.v1.ApiService.SetTaskBulkTransfer:input_type -> bulk_transfer.service.v1.SetTaskBulkTransferRequest
	7,  // 7: bulk_transfer.service.v1.ApiService.CreateBulkTransferTransaction:input_type -> bulk_transfer.service.v1.CreateBulkTransferTransactionRequest
	8,  // 8: bulk_transfer.service.v1.ApiService.CancelBulkTransferTransaction:input_type -> bulk_transfer.service.v1.CancelBulkTransferTransactionRequest
	9,  // 9: bulk_transfer.service.v1.ApiService.ExecBulkTransfer:input_type -> bulk_transfer.service.v1.ExecBulkTransferRequest
	10, // 10: bulk_transfer.service.v1.ApiService.ExecFailedBulkTransfer:input_type -> bulk_transfer.service.v1.ExecFailedBulkTransferRequest
	11, // 11: bulk_transfer.service.v1.ApiService.ExecFileCheckingBulkTransferJob:input_type -> bulk_transfer.service.v1.ExecFileCheckingBulkTransferJobRequest
	12, // 12: bulk_transfer.service.v1.ApiService.ExecMassInquiryJob:input_type -> bulk_transfer.service.v1.ExecMassInquiryJobRequest
	13, // 13: bulk_transfer.service.v1.ApiService.ExecMassTransferJob:input_type -> bulk_transfer.service.v1.ExecMassTransferJobRequest
	14, // 14: bulk_transfer.service.v1.ApiService.CreateMassTransfer:input_type -> bulk_transfer.service.v1.CreateMassTransferRequest
	15, // 15: bulk_transfer.service.v1.ApiService.HealthCheck:output_type -> bulk_transfer.service.v1.HealthCheckResponse
	16, // 16: bulk_transfer.service.v1.ApiService.GetTaskBulkTransferFile:output_type -> google.api.HttpBody
	16, // 17: bulk_transfer.service.v1.ApiService.GetTaskBulkTransferDetailFile:output_type -> google.api.HttpBody
	17, // 18: bulk_transfer.service.v1.ApiService.GetTaskBulkTransfer:output_type -> bulk_transfer.service.v1.GetTaskBulkTransferResponse
	18, // 19: bulk_transfer.service.v1.ApiService.GetTaskBulkTransferDetail:output_type -> bulk_transfer.service.v1.GetTaskBulkTransferDetailResponse
	19, // 20: bulk_transfer.service.v1.ApiService.CreateTaskBulkTransfer:output_type -> bulk_transfer.service.v1.CreateTaskBulkTransferResponse
	20, // 21: bulk_transfer.service.v1.ApiService.SetTaskBulkTransfer:output_type -> bulk_transfer.service.v1.SetTaskBulkTransferResponse
	21, // 22: bulk_transfer.service.v1.ApiService.CreateBulkTransferTransaction:output_type -> bulk_transfer.service.v1.CreateBulkTransferTransactionResponse
	22, // 23: bulk_transfer.service.v1.ApiService.CancelBulkTransferTransaction:output_type -> bulk_transfer.service.v1.CancelBulkTransferTransactionResponse
	23, // 24: bulk_transfer.service.v1.ApiService.ExecBulkTransfer:output_type -> bulk_transfer.service.v1.ExecBulkTransferResponse
	24, // 25: bulk_transfer.service.v1.ApiService.ExecFailedBulkTransfer:output_type -> bulk_transfer.service.v1.ExecFailedBulkTransferResponse
	25, // 26: bulk_transfer.service.v1.ApiService.ExecFileCheckingBulkTransferJob:output_type -> bulk_transfer.service.v1.ExecFileCheckingBulkTransferJobResponse
	26, // 27: bulk_transfer.service.v1.ApiService.ExecMassInquiryJob:output_type -> bulk_transfer.service.v1.ExecMassInquiryJobResponse
	27, // 28: bulk_transfer.service.v1.ApiService.ExecMassTransferJob:output_type -> bulk_transfer.service.v1.ExecMassTransferJobResponse
	28, // 29: bulk_transfer.service.v1.ApiService.CreateMassTransfer:output_type -> bulk_transfer.service.v1.CreateMassTransferResponse
	15, // [15:30] is the sub-list for method output_type
	0,  // [0:15] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_bulk_transfer_api_proto_init() }
func file_bulk_transfer_api_proto_init() {
	if File_bulk_transfer_api_proto != nil {
		return
	}
	file_bulk_transfer_core_payload_proto_init()
	file_bulk_transfer_payload_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bulk_transfer_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bulk_transfer_api_proto_goTypes,
		DependencyIndexes: file_bulk_transfer_api_proto_depIdxs,
	}.Build()
	File_bulk_transfer_api_proto = out.File
	file_bulk_transfer_api_proto_rawDesc = nil
	file_bulk_transfer_api_proto_goTypes = nil
	file_bulk_transfer_api_proto_depIdxs = nil
}
