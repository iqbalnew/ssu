// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: bulk_transfer_api.proto

package pb

import (
	context "context"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiServiceClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	GetTaskBulkTransferFile(ctx context.Context, in *GetTaskBulkTransferFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	GetTaskBulkTransferDetailFile(ctx context.Context, in *GetTaskBulkTransferDetailFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	GetTaskBulkTransfer(ctx context.Context, in *GetTaskBulkTransferRequest, opts ...grpc.CallOption) (*GetTaskBulkTransferResponse, error)
	GetTaskBulkTransferDetail(ctx context.Context, in *GetTaskBulkTransferDetailRequest, opts ...grpc.CallOption) (*GetTaskBulkTransferDetailResponse, error)
	CreateTaskBulkTransfer(ctx context.Context, in *CreateTaskBulkTransferRequest, opts ...grpc.CallOption) (*CreateTaskBulkTransferResponse, error)
	SetTaskBulkTransfer(ctx context.Context, in *SetTaskBulkTransferRequest, opts ...grpc.CallOption) (*SetTaskBulkTransferResponse, error)
	CreateBulkTransferTransaction(ctx context.Context, in *CreateBulkTransferTransactionRequest, opts ...grpc.CallOption) (*CreateBulkTransferTransactionResponse, error)
	CancelBulkTransferTransaction(ctx context.Context, in *CancelBulkTransferTransactionRequest, opts ...grpc.CallOption) (*CancelBulkTransferTransactionResponse, error)
	ExecBulkTransfer(ctx context.Context, in *ExecBulkTransferRequest, opts ...grpc.CallOption) (*ExecBulkTransferResponse, error)
	ExecFailedBulkTransfer(ctx context.Context, in *ExecFailedBulkTransferRequest, opts ...grpc.CallOption) (*ExecFailedBulkTransferResponse, error)
	ExecFileCheckingBulkTransferJob(ctx context.Context, in *ExecFileCheckingBulkTransferJobRequest, opts ...grpc.CallOption) (*ExecFileCheckingBulkTransferJobResponse, error)
	ExecMassInquiryJob(ctx context.Context, in *ExecMassInquiryJobRequest, opts ...grpc.CallOption) (*ExecMassInquiryJobResponse, error)
	ExecMassTransferJob(ctx context.Context, in *ExecMassTransferJobRequest, opts ...grpc.CallOption) (*ExecMassTransferJobResponse, error)
	CreateMassTransfer(ctx context.Context, in *CreateMassTransferRequest, opts ...grpc.CallOption) (*CreateMassTransferResponse, error)
}

type apiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiServiceClient(cc grpc.ClientConnInterface) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskBulkTransferFile(ctx context.Context, in *GetTaskBulkTransferFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransferFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskBulkTransferDetailFile(ctx context.Context, in *GetTaskBulkTransferDetailFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransferDetailFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskBulkTransfer(ctx context.Context, in *GetTaskBulkTransferRequest, opts ...grpc.CallOption) (*GetTaskBulkTransferResponse, error) {
	out := new(GetTaskBulkTransferResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskBulkTransferDetail(ctx context.Context, in *GetTaskBulkTransferDetailRequest, opts ...grpc.CallOption) (*GetTaskBulkTransferDetailResponse, error) {
	out := new(GetTaskBulkTransferDetailResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransferDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskBulkTransfer(ctx context.Context, in *CreateTaskBulkTransferRequest, opts ...grpc.CallOption) (*CreateTaskBulkTransferResponse, error) {
	out := new(CreateTaskBulkTransferResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/CreateTaskBulkTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SetTaskBulkTransfer(ctx context.Context, in *SetTaskBulkTransferRequest, opts ...grpc.CallOption) (*SetTaskBulkTransferResponse, error) {
	out := new(SetTaskBulkTransferResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/SetTaskBulkTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateBulkTransferTransaction(ctx context.Context, in *CreateBulkTransferTransactionRequest, opts ...grpc.CallOption) (*CreateBulkTransferTransactionResponse, error) {
	out := new(CreateBulkTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/CreateBulkTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CancelBulkTransferTransaction(ctx context.Context, in *CancelBulkTransferTransactionRequest, opts ...grpc.CallOption) (*CancelBulkTransferTransactionResponse, error) {
	out := new(CancelBulkTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/CancelBulkTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecBulkTransfer(ctx context.Context, in *ExecBulkTransferRequest, opts ...grpc.CallOption) (*ExecBulkTransferResponse, error) {
	out := new(ExecBulkTransferResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/ExecBulkTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecFailedBulkTransfer(ctx context.Context, in *ExecFailedBulkTransferRequest, opts ...grpc.CallOption) (*ExecFailedBulkTransferResponse, error) {
	out := new(ExecFailedBulkTransferResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/ExecFailedBulkTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecFileCheckingBulkTransferJob(ctx context.Context, in *ExecFileCheckingBulkTransferJobRequest, opts ...grpc.CallOption) (*ExecFileCheckingBulkTransferJobResponse, error) {
	out := new(ExecFileCheckingBulkTransferJobResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/ExecFileCheckingBulkTransferJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecMassInquiryJob(ctx context.Context, in *ExecMassInquiryJobRequest, opts ...grpc.CallOption) (*ExecMassInquiryJobResponse, error) {
	out := new(ExecMassInquiryJobResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/ExecMassInquiryJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecMassTransferJob(ctx context.Context, in *ExecMassTransferJobRequest, opts ...grpc.CallOption) (*ExecMassTransferJobResponse, error) {
	out := new(ExecMassTransferJobResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/ExecMassTransferJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateMassTransfer(ctx context.Context, in *CreateMassTransferRequest, opts ...grpc.CallOption) (*CreateMassTransferResponse, error) {
	out := new(CreateMassTransferResponse)
	err := c.cc.Invoke(ctx, "/bulk_transfer.service.v1.ApiService/CreateMassTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
// All implementations must embed UnimplementedApiServiceServer
// for forward compatibility
type ApiServiceServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	GetTaskBulkTransferFile(context.Context, *GetTaskBulkTransferFileRequest) (*httpbody.HttpBody, error)
	GetTaskBulkTransferDetailFile(context.Context, *GetTaskBulkTransferDetailFileRequest) (*httpbody.HttpBody, error)
	GetTaskBulkTransfer(context.Context, *GetTaskBulkTransferRequest) (*GetTaskBulkTransferResponse, error)
	GetTaskBulkTransferDetail(context.Context, *GetTaskBulkTransferDetailRequest) (*GetTaskBulkTransferDetailResponse, error)
	CreateTaskBulkTransfer(context.Context, *CreateTaskBulkTransferRequest) (*CreateTaskBulkTransferResponse, error)
	SetTaskBulkTransfer(context.Context, *SetTaskBulkTransferRequest) (*SetTaskBulkTransferResponse, error)
	CreateBulkTransferTransaction(context.Context, *CreateBulkTransferTransactionRequest) (*CreateBulkTransferTransactionResponse, error)
	CancelBulkTransferTransaction(context.Context, *CancelBulkTransferTransactionRequest) (*CancelBulkTransferTransactionResponse, error)
	ExecBulkTransfer(context.Context, *ExecBulkTransferRequest) (*ExecBulkTransferResponse, error)
	ExecFailedBulkTransfer(context.Context, *ExecFailedBulkTransferRequest) (*ExecFailedBulkTransferResponse, error)
	ExecFileCheckingBulkTransferJob(context.Context, *ExecFileCheckingBulkTransferJobRequest) (*ExecFileCheckingBulkTransferJobResponse, error)
	ExecMassInquiryJob(context.Context, *ExecMassInquiryJobRequest) (*ExecMassInquiryJobResponse, error)
	ExecMassTransferJob(context.Context, *ExecMassTransferJobRequest) (*ExecMassTransferJobResponse, error)
	CreateMassTransfer(context.Context, *CreateMassTransferRequest) (*CreateMassTransferResponse, error)
	mustEmbedUnimplementedApiServiceServer()
}

// UnimplementedApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (UnimplementedApiServiceServer) HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedApiServiceServer) GetTaskBulkTransferFile(context.Context, *GetTaskBulkTransferFileRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskBulkTransferFile not implemented")
}
func (UnimplementedApiServiceServer) GetTaskBulkTransferDetailFile(context.Context, *GetTaskBulkTransferDetailFileRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskBulkTransferDetailFile not implemented")
}
func (UnimplementedApiServiceServer) GetTaskBulkTransfer(context.Context, *GetTaskBulkTransferRequest) (*GetTaskBulkTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskBulkTransfer not implemented")
}
func (UnimplementedApiServiceServer) GetTaskBulkTransferDetail(context.Context, *GetTaskBulkTransferDetailRequest) (*GetTaskBulkTransferDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskBulkTransferDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskBulkTransfer(context.Context, *CreateTaskBulkTransferRequest) (*CreateTaskBulkTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskBulkTransfer not implemented")
}
func (UnimplementedApiServiceServer) SetTaskBulkTransfer(context.Context, *SetTaskBulkTransferRequest) (*SetTaskBulkTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTaskBulkTransfer not implemented")
}
func (UnimplementedApiServiceServer) CreateBulkTransferTransaction(context.Context, *CreateBulkTransferTransactionRequest) (*CreateBulkTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBulkTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) CancelBulkTransferTransaction(context.Context, *CancelBulkTransferTransactionRequest) (*CancelBulkTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelBulkTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) ExecBulkTransfer(context.Context, *ExecBulkTransferRequest) (*ExecBulkTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecBulkTransfer not implemented")
}
func (UnimplementedApiServiceServer) ExecFailedBulkTransfer(context.Context, *ExecFailedBulkTransferRequest) (*ExecFailedBulkTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecFailedBulkTransfer not implemented")
}
func (UnimplementedApiServiceServer) ExecFileCheckingBulkTransferJob(context.Context, *ExecFileCheckingBulkTransferJobRequest) (*ExecFileCheckingBulkTransferJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecFileCheckingBulkTransferJob not implemented")
}
func (UnimplementedApiServiceServer) ExecMassInquiryJob(context.Context, *ExecMassInquiryJobRequest) (*ExecMassInquiryJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecMassInquiryJob not implemented")
}
func (UnimplementedApiServiceServer) ExecMassTransferJob(context.Context, *ExecMassTransferJobRequest) (*ExecMassTransferJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecMassTransferJob not implemented")
}
func (UnimplementedApiServiceServer) CreateMassTransfer(context.Context, *CreateMassTransferRequest) (*CreateMassTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMassTransfer not implemented")
}
func (UnimplementedApiServiceServer) mustEmbedUnimplementedApiServiceServer() {}

// UnsafeApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiServiceServer will
// result in compilation errors.
type UnsafeApiServiceServer interface {
	mustEmbedUnimplementedApiServiceServer()
}

func RegisterApiServiceServer(s grpc.ServiceRegistrar, srv ApiServiceServer) {
	s.RegisterService(&ApiService_ServiceDesc, srv)
}

func _ApiService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskBulkTransferFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskBulkTransferFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskBulkTransferFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransferFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskBulkTransferFile(ctx, req.(*GetTaskBulkTransferFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskBulkTransferDetailFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskBulkTransferDetailFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskBulkTransferDetailFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransferDetailFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskBulkTransferDetailFile(ctx, req.(*GetTaskBulkTransferDetailFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskBulkTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskBulkTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskBulkTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskBulkTransfer(ctx, req.(*GetTaskBulkTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskBulkTransferDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskBulkTransferDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskBulkTransferDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/GetTaskBulkTransferDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskBulkTransferDetail(ctx, req.(*GetTaskBulkTransferDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskBulkTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskBulkTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskBulkTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/CreateTaskBulkTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskBulkTransfer(ctx, req.(*CreateTaskBulkTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SetTaskBulkTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTaskBulkTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SetTaskBulkTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/SetTaskBulkTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SetTaskBulkTransfer(ctx, req.(*SetTaskBulkTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateBulkTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBulkTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateBulkTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/CreateBulkTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateBulkTransferTransaction(ctx, req.(*CreateBulkTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CancelBulkTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelBulkTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CancelBulkTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/CancelBulkTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CancelBulkTransferTransaction(ctx, req.(*CancelBulkTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecBulkTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecBulkTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecBulkTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/ExecBulkTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecBulkTransfer(ctx, req.(*ExecBulkTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecFailedBulkTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecFailedBulkTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecFailedBulkTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/ExecFailedBulkTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecFailedBulkTransfer(ctx, req.(*ExecFailedBulkTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecFileCheckingBulkTransferJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecFileCheckingBulkTransferJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecFileCheckingBulkTransferJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/ExecFileCheckingBulkTransferJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecFileCheckingBulkTransferJob(ctx, req.(*ExecFileCheckingBulkTransferJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecMassInquiryJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecMassInquiryJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecMassInquiryJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/ExecMassInquiryJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecMassInquiryJob(ctx, req.(*ExecMassInquiryJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecMassTransferJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecMassTransferJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecMassTransferJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/ExecMassTransferJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecMassTransferJob(ctx, req.(*ExecMassTransferJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateMassTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMassTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateMassTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bulk_transfer.service.v1.ApiService/CreateMassTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateMassTransfer(ctx, req.(*CreateMassTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiService_ServiceDesc is the grpc.ServiceDesc for ApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bulk_transfer.service.v1.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _ApiService_HealthCheck_Handler,
		},
		{
			MethodName: "GetTaskBulkTransferFile",
			Handler:    _ApiService_GetTaskBulkTransferFile_Handler,
		},
		{
			MethodName: "GetTaskBulkTransferDetailFile",
			Handler:    _ApiService_GetTaskBulkTransferDetailFile_Handler,
		},
		{
			MethodName: "GetTaskBulkTransfer",
			Handler:    _ApiService_GetTaskBulkTransfer_Handler,
		},
		{
			MethodName: "GetTaskBulkTransferDetail",
			Handler:    _ApiService_GetTaskBulkTransferDetail_Handler,
		},
		{
			MethodName: "CreateTaskBulkTransfer",
			Handler:    _ApiService_CreateTaskBulkTransfer_Handler,
		},
		{
			MethodName: "SetTaskBulkTransfer",
			Handler:    _ApiService_SetTaskBulkTransfer_Handler,
		},
		{
			MethodName: "CreateBulkTransferTransaction",
			Handler:    _ApiService_CreateBulkTransferTransaction_Handler,
		},
		{
			MethodName: "CancelBulkTransferTransaction",
			Handler:    _ApiService_CancelBulkTransferTransaction_Handler,
		},
		{
			MethodName: "ExecBulkTransfer",
			Handler:    _ApiService_ExecBulkTransfer_Handler,
		},
		{
			MethodName: "ExecFailedBulkTransfer",
			Handler:    _ApiService_ExecFailedBulkTransfer_Handler,
		},
		{
			MethodName: "ExecFileCheckingBulkTransferJob",
			Handler:    _ApiService_ExecFileCheckingBulkTransferJob_Handler,
		},
		{
			MethodName: "ExecMassInquiryJob",
			Handler:    _ApiService_ExecMassInquiryJob_Handler,
		},
		{
			MethodName: "ExecMassTransferJob",
			Handler:    _ApiService_ExecMassTransferJob_Handler,
		},
		{
			MethodName: "CreateMassTransfer",
			Handler:    _ApiService_CreateMassTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bulk_transfer_api.proto",
}
