// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: kliring_gorm_db.proto

package pb

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrencyType int32

const (
	CurrencyType_NullCurrencyType   CurrencyType = 0
	CurrencyType_DebitCurrencyType  CurrencyType = 1
	CurrencyType_CreditCurrencyType CurrencyType = 2
)

// Enum value maps for CurrencyType.
var (
	CurrencyType_name = map[int32]string{
		0: "NullCurrencyType",
		1: "DebitCurrencyType",
		2: "CreditCurrencyType",
	}
	CurrencyType_value = map[string]int32{
		"NullCurrencyType":   0,
		"DebitCurrencyType":  1,
		"CreditCurrencyType": 2,
	}
)

func (x CurrencyType) Enum() *CurrencyType {
	p := new(CurrencyType)
	*p = x
	return p
}

func (x CurrencyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrencyType) Descriptor() protoreflect.EnumDescriptor {
	return file_kliring_gorm_db_proto_enumTypes[0].Descriptor()
}

func (CurrencyType) Type() protoreflect.EnumType {
	return &file_kliring_gorm_db_proto_enumTypes[0]
}

func (x CurrencyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrencyType.Descriptor instead.
func (CurrencyType) EnumDescriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{0}
}

type Fee int32

const (
	Fee_OUR Fee = 0
	Fee_BEN Fee = 1
)

// Enum value maps for Fee.
var (
	Fee_name = map[int32]string{
		0: "OUR",
		1: "BEN",
	}
	Fee_value = map[string]int32{
		"OUR": 0,
		"BEN": 1,
	}
)

func (x Fee) Enum() *Fee {
	p := new(Fee)
	*p = x
	return p
}

func (x Fee) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fee) Descriptor() protoreflect.EnumDescriptor {
	return file_kliring_gorm_db_proto_enumTypes[1].Descriptor()
}

func (Fee) Type() protoreflect.EnumType {
	return &file_kliring_gorm_db_proto_enumTypes[1]
}

func (x Fee) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fee.Descriptor instead.
func (Fee) EnumDescriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{1}
}

type TransactionSchedule int32

const (
	TransactionSchedule_NullTransactionSchedule TransactionSchedule = 0
	TransactionSchedule_Immediate               TransactionSchedule = 1
	TransactionSchedule_Scheduled               TransactionSchedule = 2
	TransactionSchedule_Recurring               TransactionSchedule = 3
)

// Enum value maps for TransactionSchedule.
var (
	TransactionSchedule_name = map[int32]string{
		0: "NullTransactionSchedule",
		1: "Immediate",
		2: "Scheduled",
		3: "Recurring",
	}
	TransactionSchedule_value = map[string]int32{
		"NullTransactionSchedule": 0,
		"Immediate":               1,
		"Scheduled":               2,
		"Recurring":               3,
	}
)

func (x TransactionSchedule) Enum() *TransactionSchedule {
	p := new(TransactionSchedule)
	*p = x
	return p
}

func (x TransactionSchedule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionSchedule) Descriptor() protoreflect.EnumDescriptor {
	return file_kliring_gorm_db_proto_enumTypes[2].Descriptor()
}

func (TransactionSchedule) Type() protoreflect.EnumType {
	return &file_kliring_gorm_db_proto_enumTypes[2]
}

func (x TransactionSchedule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionSchedule.Descriptor instead.
func (TransactionSchedule) EnumDescriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{2}
}

type RecurringFrequency int32

const (
	RecurringFrequency_NullRecurringFrequency RecurringFrequency = 0
	RecurringFrequency_Daily                  RecurringFrequency = 1
	RecurringFrequency_Weekly                 RecurringFrequency = 2
	RecurringFrequency_Monthly                RecurringFrequency = 3
)

// Enum value maps for RecurringFrequency.
var (
	RecurringFrequency_name = map[int32]string{
		0: "NullRecurringFrequency",
		1: "Daily",
		2: "Weekly",
		3: "Monthly",
	}
	RecurringFrequency_value = map[string]int32{
		"NullRecurringFrequency": 0,
		"Daily":                  1,
		"Weekly":                 2,
		"Monthly":                3,
	}
)

func (x RecurringFrequency) Enum() *RecurringFrequency {
	p := new(RecurringFrequency)
	*p = x
	return p
}

func (x RecurringFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecurringFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_kliring_gorm_db_proto_enumTypes[3].Descriptor()
}

func (RecurringFrequency) Type() protoreflect.EnumType {
	return &file_kliring_gorm_db_proto_enumTypes[3]
}

func (x RecurringFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecurringFrequency.Descriptor instead.
func (RecurringFrequency) EnumDescriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{3}
}

type AccountType int32

const (
	AccountType_NullAccountType          AccountType = 0
	AccountType_AccountNumberAccountType AccountType = 1
	AccountType_EmailAccountType         AccountType = 2
	AccountType_PhoneNumberAccountType   AccountType = 3
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "NullAccountType",
		1: "AccountNumberAccountType",
		2: "EmailAccountType",
		3: "PhoneNumberAccountType",
	}
	AccountType_value = map[string]int32{
		"NullAccountType":          0,
		"AccountNumberAccountType": 1,
		"EmailAccountType":         2,
		"PhoneNumberAccountType":   3,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_kliring_gorm_db_proto_enumTypes[4].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_kliring_gorm_db_proto_enumTypes[4]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{4}
}

type SenderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber  string  `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName    string  `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias   string  `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountBalance float64 `protobuf:"fixed64,4,opt,name=accountBalance,proto3" json:"accountBalance,omitempty"`
	RegistrationID string  `protobuf:"bytes,5,opt,name=registrationID,proto3" json:"registrationID,omitempty"`
}

func (x *SenderData) Reset() {
	*x = SenderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderData) ProtoMessage() {}

func (x *SenderData) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderData.ProtoReflect.Descriptor instead.
func (*SenderData) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{0}
}

func (x *SenderData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *SenderData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *SenderData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *SenderData) GetAccountBalance() float64 {
	if x != nil {
		return x.AccountBalance
	}
	return 0
}

func (x *SenderData) GetRegistrationID() string {
	if x != nil {
		return x.RegistrationID
	}
	return ""
}

type BeneficiaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber  string      `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName    string      `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias   string      `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountBalance float64     `protobuf:"fixed64,4,opt,name=accountBalance,proto3" json:"accountBalance,omitempty"`
	AccountType    AccountType `protobuf:"varint,5,opt,name=accountType,proto3,enum=kliring.service.v1.AccountType" json:"accountType,omitempty"`
	PhoneNumber    string      `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Email          string      `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	BankCode       string      `protobuf:"bytes,8,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	BankName       string      `protobuf:"bytes,9,opt,name=bankName,proto3" json:"bankName,omitempty"`
	BankIDCode     string      `protobuf:"bytes,11,opt,name=bankIDCode,proto3" json:"bankIDCode,omitempty"`
	Country        string      `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *BeneficiaryData) Reset() {
	*x = BeneficiaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryData) ProtoMessage() {}

func (x *BeneficiaryData) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryData.ProtoReflect.Descriptor instead.
func (*BeneficiaryData) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{1}
}

func (x *BeneficiaryData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BeneficiaryData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *BeneficiaryData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *BeneficiaryData) GetAccountBalance() float64 {
	if x != nil {
		return x.AccountBalance
	}
	return 0
}

func (x *BeneficiaryData) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_NullAccountType
}

func (x *BeneficiaryData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BeneficiaryData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BeneficiaryData) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *BeneficiaryData) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *BeneficiaryData) GetBankIDCode() string {
	if x != nil {
		return x.BankIDCode
	}
	return ""
}

func (x *BeneficiaryData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type KliringData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      *SenderData      `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Beneficiary *BeneficiaryData `protobuf:"bytes,2,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	// string dealCode = 3;
	// CurrencyType currency = 4;
	Fee                  Fee                    `protobuf:"varint,5,opt,name=fee,proto3,enum=kliring.service.v1.Fee" json:"fee,omitempty"`
	FeeAmount            float64                `protobuf:"fixed64,6,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`
	Amount               float64                `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionSchedule  TransactionSchedule    `protobuf:"varint,8,opt,name=transactionSchedule,proto3,enum=kliring.service.v1.TransactionSchedule" json:"transactionSchedule,omitempty"`
	ScheduledAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	RecurringFrequency   RecurringFrequency     `protobuf:"varint,10,opt,name=recurringFrequency,proto3,enum=kliring.service.v1.RecurringFrequency" json:"recurringFrequency,omitempty"`
	RecurringPeriodStart *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=recurringPeriodStart,proto3" json:"recurringPeriodStart,omitempty"`
	RecurringPeriodEnd   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=recurringPeriodEnd,proto3" json:"recurringPeriodEnd,omitempty"`
	RecurringDay         int64                  `protobuf:"varint,13,opt,name=recurringDay,proto3" json:"recurringDay,omitempty"`
	RecurringDate        int64                  `protobuf:"varint,14,opt,name=recurringDate,proto3" json:"recurringDate,omitempty"`
	RecurringTime        string                 `protobuf:"bytes,15,opt,name=recurringTime,proto3" json:"recurringTime,omitempty"`
	Remark               string                 `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
	JournalSquence       string                 `protobuf:"bytes,17,opt,name=journalSquence,proto3" json:"journalSquence,omitempty"`
	Status               string                 `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	StatusMessage        string                 `protobuf:"bytes,19,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	NotificationEmails   []string               `protobuf:"bytes,20,rep,name=notificationEmails,proto3" json:"notificationEmails,omitempty"`
	ExecutedAt           *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=executedAt,proto3" json:"executedAt,omitempty"`
	TransactionID        string                 `protobuf:"bytes,102,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	ParentID             string                 `protobuf:"bytes,103,opt,name=parentID,proto3" json:"parentID,omitempty"`
	TransactionServiceID uint64                 `protobuf:"varint,104,opt,name=transactionServiceID,proto3" json:"transactionServiceID,omitempty"`
}

func (x *KliringData) Reset() {
	*x = KliringData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KliringData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KliringData) ProtoMessage() {}

func (x *KliringData) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KliringData.ProtoReflect.Descriptor instead.
func (*KliringData) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{2}
}

func (x *KliringData) GetSender() *SenderData {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *KliringData) GetBeneficiary() *BeneficiaryData {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

func (x *KliringData) GetFee() Fee {
	if x != nil {
		return x.Fee
	}
	return Fee_OUR
}

func (x *KliringData) GetFeeAmount() float64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *KliringData) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *KliringData) GetTransactionSchedule() TransactionSchedule {
	if x != nil {
		return x.TransactionSchedule
	}
	return TransactionSchedule_NullTransactionSchedule
}

func (x *KliringData) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *KliringData) GetRecurringFrequency() RecurringFrequency {
	if x != nil {
		return x.RecurringFrequency
	}
	return RecurringFrequency_NullRecurringFrequency
}

func (x *KliringData) GetRecurringPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.RecurringPeriodStart
	}
	return nil
}

func (x *KliringData) GetRecurringPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.RecurringPeriodEnd
	}
	return nil
}

func (x *KliringData) GetRecurringDay() int64 {
	if x != nil {
		return x.RecurringDay
	}
	return 0
}

func (x *KliringData) GetRecurringDate() int64 {
	if x != nil {
		return x.RecurringDate
	}
	return 0
}

func (x *KliringData) GetRecurringTime() string {
	if x != nil {
		return x.RecurringTime
	}
	return ""
}

func (x *KliringData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *KliringData) GetJournalSquence() string {
	if x != nil {
		return x.JournalSquence
	}
	return ""
}

func (x *KliringData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *KliringData) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *KliringData) GetNotificationEmails() []string {
	if x != nil {
		return x.NotificationEmails
	}
	return nil
}

func (x *KliringData) GetExecutedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutedAt
	}
	return nil
}

func (x *KliringData) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *KliringData) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *KliringData) GetTransactionServiceID() uint64 {
	if x != nil {
		return x.TransactionServiceID
	}
	return 0
}

type KliringTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskID               uint64                 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TransactionID        string                 `protobuf:"bytes,3,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	TransactionServiceID uint64                 `protobuf:"varint,4,opt,name=transactionServiceID,proto3" json:"transactionServiceID,omitempty"`
	Data                 string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *KliringTransaction) Reset() {
	*x = KliringTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KliringTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KliringTransaction) ProtoMessage() {}

func (x *KliringTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KliringTransaction.ProtoReflect.Descriptor instead.
func (*KliringTransaction) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{3}
}

func (x *KliringTransaction) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KliringTransaction) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *KliringTransaction) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *KliringTransaction) GetTransactionServiceID() uint64 {
	if x != nil {
		return x.TransactionServiceID
	}
	return 0
}

func (x *KliringTransaction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *KliringTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *KliringTransaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type KliringSingleTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data         string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	TemplateName string                 `protobuf:"bytes,3,opt,name=templateName,proto3" json:"templateName,omitempty"`
	CreatedByID  uint64                 `protobuf:"varint,4,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *KliringSingleTemplate) Reset() {
	*x = KliringSingleTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KliringSingleTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KliringSingleTemplate) ProtoMessage() {}

func (x *KliringSingleTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KliringSingleTemplate.ProtoReflect.Descriptor instead.
func (*KliringSingleTemplate) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{4}
}

func (x *KliringSingleTemplate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KliringSingleTemplate) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *KliringSingleTemplate) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *KliringSingleTemplate) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *KliringSingleTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *KliringSingleTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type KliringSingleTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *KliringSingleTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Data     *KliringData           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *KliringSingleTemplateData) Reset() {
	*x = KliringSingleTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KliringSingleTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KliringSingleTemplateData) ProtoMessage() {}

func (x *KliringSingleTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KliringSingleTemplateData.ProtoReflect.Descriptor instead.
func (*KliringSingleTemplateData) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{5}
}

func (x *KliringSingleTemplateData) GetTemplate() *KliringSingleTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *KliringSingleTemplateData) GetData() *KliringData {
	if x != nil {
		return x.Data
	}
	return nil
}

type KliringTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task     *Task                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Data     *KliringData          `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Workflow *ValidateWorkflowData `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *KliringTaskData) Reset() {
	*x = KliringTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kliring_gorm_db_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KliringTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KliringTaskData) ProtoMessage() {}

func (x *KliringTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_kliring_gorm_db_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KliringTaskData.ProtoReflect.Descriptor instead.
func (*KliringTaskData) Descriptor() ([]byte, []int) {
	return file_kliring_gorm_db_proto_rawDescGZIP(), []int{6}
}

func (x *KliringTaskData) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *KliringTaskData) GetData() *KliringData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *KliringTaskData) GetWorkflow() *ValidateWorkflowData {
	if x != nil {
		return x.Workflow
	}
	return nil
}

var File_kliring_gorm_db_proto protoreflect.FileDescriptor

var file_kliring_gorm_db_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x6b, 0x6c, 0x69,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d,
	0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0d, 0xe2,
	0xdf, 0x1f, 0x09, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x0e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa6, 0x03, 0x0a, 0x0f, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x41, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x62, 0x61,
	0x6e, 0x6b, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x86, 0x09, 0x0a, 0x0b, 0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0b, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x12, 0x29, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x09,
	0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x59, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x4e, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x4a, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x0e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x29, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x37, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x68, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0xf1, 0x02, 0x0a, 0x12,
	0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a,
	0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xba, 0xb9, 0x19, 0x09, 0x0a, 0x07, 0x12, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x0b, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x40, 0x01, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0xe0, 0x41, 0x03, 0xba, 0xb9,
	0x19, 0x04, 0x0a, 0x02, 0x40, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x3a, 0x1c, 0xba, 0xb9, 0x19, 0x18, 0x08, 0x01, 0x1a, 0x14, 0x6b, 0x6c, 0x69, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xcc, 0x02, 0x0a, 0x15, 0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28, 0x01, 0x40,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0xb9, 0x19, 0x09, 0x0a, 0x07, 0x12, 0x05, 0x6a, 0x73, 0x6f,
	0x6e, 0x62, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x45,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x40, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x40,
	0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x20, 0xba, 0xb9,
	0x19, 0x1c, 0x08, 0x01, 0x1a, 0x18, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x97,
	0x01, 0x0a, 0x19, 0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x4b, 0x6c, 0x69,
	0x72, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6c, 0x69,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x6c,
	0x69, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x44, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2a, 0x53, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x75, 0x6c, 0x6c, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x65, 0x62, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x2a, 0x17, 0x0a, 0x03, 0x46, 0x65,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x55, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x45,
	0x4e, 0x10, 0x01, 0x2a, 0x5f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x75,
	0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6d, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69,
	0x6e, 0x67, 0x10, 0x03, 0x2a, 0x54, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x10, 0x03, 0x2a, 0x72, 0x0a, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x75, 0x6c,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x03, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kliring_gorm_db_proto_rawDescOnce sync.Once
	file_kliring_gorm_db_proto_rawDescData = file_kliring_gorm_db_proto_rawDesc
)

func file_kliring_gorm_db_proto_rawDescGZIP() []byte {
	file_kliring_gorm_db_proto_rawDescOnce.Do(func() {
		file_kliring_gorm_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_kliring_gorm_db_proto_rawDescData)
	})
	return file_kliring_gorm_db_proto_rawDescData
}

var file_kliring_gorm_db_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_kliring_gorm_db_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kliring_gorm_db_proto_goTypes = []interface{}{
	(CurrencyType)(0),                 // 0: kliring.service.v1.CurrencyType
	(Fee)(0),                          // 1: kliring.service.v1.Fee
	(TransactionSchedule)(0),          // 2: kliring.service.v1.TransactionSchedule
	(RecurringFrequency)(0),           // 3: kliring.service.v1.RecurringFrequency
	(AccountType)(0),                  // 4: kliring.service.v1.AccountType
	(*SenderData)(nil),                // 5: kliring.service.v1.SenderData
	(*BeneficiaryData)(nil),           // 6: kliring.service.v1.BeneficiaryData
	(*KliringData)(nil),               // 7: kliring.service.v1.KliringData
	(*KliringTransaction)(nil),        // 8: kliring.service.v1.KliringTransaction
	(*KliringSingleTemplate)(nil),     // 9: kliring.service.v1.KliringSingleTemplate
	(*KliringSingleTemplateData)(nil), // 10: kliring.service.v1.KliringSingleTemplateData
	(*KliringTaskData)(nil),           // 11: kliring.service.v1.KliringTaskData
	(*timestamppb.Timestamp)(nil),     // 12: google.protobuf.Timestamp
	(*Task)(nil),                      // 13: kliring.service.v1.Task
	(*ValidateWorkflowData)(nil),      // 14: kliring.service.v1.ValidateWorkflowData
}
var file_kliring_gorm_db_proto_depIdxs = []int32{
	4,  // 0: kliring.service.v1.BeneficiaryData.accountType:type_name -> kliring.service.v1.AccountType
	5,  // 1: kliring.service.v1.KliringData.sender:type_name -> kliring.service.v1.SenderData
	6,  // 2: kliring.service.v1.KliringData.beneficiary:type_name -> kliring.service.v1.BeneficiaryData
	1,  // 3: kliring.service.v1.KliringData.fee:type_name -> kliring.service.v1.Fee
	2,  // 4: kliring.service.v1.KliringData.transactionSchedule:type_name -> kliring.service.v1.TransactionSchedule
	12, // 5: kliring.service.v1.KliringData.scheduledAt:type_name -> google.protobuf.Timestamp
	3,  // 6: kliring.service.v1.KliringData.recurringFrequency:type_name -> kliring.service.v1.RecurringFrequency
	12, // 7: kliring.service.v1.KliringData.recurringPeriodStart:type_name -> google.protobuf.Timestamp
	12, // 8: kliring.service.v1.KliringData.recurringPeriodEnd:type_name -> google.protobuf.Timestamp
	12, // 9: kliring.service.v1.KliringData.executedAt:type_name -> google.protobuf.Timestamp
	12, // 10: kliring.service.v1.KliringTransaction.createdAt:type_name -> google.protobuf.Timestamp
	12, // 11: kliring.service.v1.KliringTransaction.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 12: kliring.service.v1.KliringSingleTemplate.createdAt:type_name -> google.protobuf.Timestamp
	12, // 13: kliring.service.v1.KliringSingleTemplate.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 14: kliring.service.v1.KliringSingleTemplateData.template:type_name -> kliring.service.v1.KliringSingleTemplate
	7,  // 15: kliring.service.v1.KliringSingleTemplateData.data:type_name -> kliring.service.v1.KliringData
	13, // 16: kliring.service.v1.KliringTaskData.task:type_name -> kliring.service.v1.Task
	7,  // 17: kliring.service.v1.KliringTaskData.data:type_name -> kliring.service.v1.KliringData
	14, // 18: kliring.service.v1.KliringTaskData.workflow:type_name -> kliring.service.v1.ValidateWorkflowData
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_kliring_gorm_db_proto_init() }
func file_kliring_gorm_db_proto_init() {
	if File_kliring_gorm_db_proto != nil {
		return
	}
	file_kliring_core_payload_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kliring_gorm_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kliring_gorm_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kliring_gorm_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KliringData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kliring_gorm_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KliringTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kliring_gorm_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KliringSingleTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kliring_gorm_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KliringSingleTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kliring_gorm_db_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KliringTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kliring_gorm_db_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kliring_gorm_db_proto_goTypes,
		DependencyIndexes: file_kliring_gorm_db_proto_depIdxs,
		EnumInfos:         file_kliring_gorm_db_proto_enumTypes,
		MessageInfos:      file_kliring_gorm_db_proto_msgTypes,
	}.Build()
	File_kliring_gorm_db_proto = out.File
	file_kliring_gorm_db_proto_rawDesc = nil
	file_kliring_gorm_db_proto_goTypes = nil
	file_kliring_gorm_db_proto_depIdxs = nil
}
