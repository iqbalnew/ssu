// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: transfer_api.proto

package pb

import (
	context "context"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiServiceClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	GetPairRate(ctx context.Context, in *GetPairRateRequest, opts ...grpc.CallOption) (*GetPairRateResponse, error)
	CreateTransfer(ctx context.Context, in *CreateTransferRequest, opts ...grpc.CallOption) (*CreateTransferResponse, error)
	GetTaskInternalFile(ctx context.Context, in *GetTaskInternalFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	GetTaskInternalTemplate(ctx context.Context, in *GetTaskInternalTemplateRequest, opts ...grpc.CallOption) (*GetTaskInternalTemplateResponse, error)
	GetTaskInternalTemplateDetail(ctx context.Context, in *GetTaskInternalTemplateDetailRequest, opts ...grpc.CallOption) (*GetTaskInternalTemplateDetailResponse, error)
	CreateTaskInternalSingleTemplate(ctx context.Context, in *InternalSingleTemplate, opts ...grpc.CallOption) (*CreateTaskInternalSingleTemplateResponse, error)
	GetTaskInternal(ctx context.Context, in *GetTaskInternalRequest, opts ...grpc.CallOption) (*GetTaskInternalResponse, error)
	GetTaskInternalDetail(ctx context.Context, in *GetTaskInternalDetailRequest, opts ...grpc.CallOption) (*GetTaskInternalDetailResponse, error)
	CreateTaskInternalSingle(ctx context.Context, in *CreateTaskInternalSingleRequest, opts ...grpc.CallOption) (*CreateTaskInternalSingleResponse, error)
	CreateTaskInternalMultiple(ctx context.Context, in *CreateTaskInternalMultipleRequest, opts ...grpc.CallOption) (*CreateTaskInternalMultipleResponse, error)
	GetTaskInternalBulk(ctx context.Context, in *GetTaskInternalBulkRequest, opts ...grpc.CallOption) (*GetTaskInternalBulkResponse, error)
	GetTaskInternalBulkDetail(ctx context.Context, in *GetTaskInternalBulkDetailRequest, opts ...grpc.CallOption) (*GetTaskInternalBulkDetailResponse, error)
	CreateTaskInternalBulk(ctx context.Context, in *CreateTaskInternalBulkRequest, opts ...grpc.CallOption) (*CreateTaskInternalBulkResponse, error)
	DecodeFile(ctx context.Context, in *DecodeFileRequest, opts ...grpc.CallOption) (*DecodeFileResponse, error)
}

type apiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiServiceClient(cc grpc.ClientConnInterface) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetPairRate(ctx context.Context, in *GetPairRateRequest, opts ...grpc.CallOption) (*GetPairRateResponse, error) {
	out := new(GetPairRateResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetPairRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTransfer(ctx context.Context, in *CreateTransferRequest, opts ...grpc.CallOption) (*CreateTransferResponse, error) {
	out := new(CreateTransferResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/CreateTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternalFile(ctx context.Context, in *GetTaskInternalFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternalFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternalTemplate(ctx context.Context, in *GetTaskInternalTemplateRequest, opts ...grpc.CallOption) (*GetTaskInternalTemplateResponse, error) {
	out := new(GetTaskInternalTemplateResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternalTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternalTemplateDetail(ctx context.Context, in *GetTaskInternalTemplateDetailRequest, opts ...grpc.CallOption) (*GetTaskInternalTemplateDetailResponse, error) {
	out := new(GetTaskInternalTemplateDetailResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternalTemplateDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskInternalSingleTemplate(ctx context.Context, in *InternalSingleTemplate, opts ...grpc.CallOption) (*CreateTaskInternalSingleTemplateResponse, error) {
	out := new(CreateTaskInternalSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/CreateTaskInternalSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternal(ctx context.Context, in *GetTaskInternalRequest, opts ...grpc.CallOption) (*GetTaskInternalResponse, error) {
	out := new(GetTaskInternalResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternalDetail(ctx context.Context, in *GetTaskInternalDetailRequest, opts ...grpc.CallOption) (*GetTaskInternalDetailResponse, error) {
	out := new(GetTaskInternalDetailResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternalDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskInternalSingle(ctx context.Context, in *CreateTaskInternalSingleRequest, opts ...grpc.CallOption) (*CreateTaskInternalSingleResponse, error) {
	out := new(CreateTaskInternalSingleResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/CreateTaskInternalSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskInternalMultiple(ctx context.Context, in *CreateTaskInternalMultipleRequest, opts ...grpc.CallOption) (*CreateTaskInternalMultipleResponse, error) {
	out := new(CreateTaskInternalMultipleResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/CreateTaskInternalMultiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternalBulk(ctx context.Context, in *GetTaskInternalBulkRequest, opts ...grpc.CallOption) (*GetTaskInternalBulkResponse, error) {
	out := new(GetTaskInternalBulkResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternalBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskInternalBulkDetail(ctx context.Context, in *GetTaskInternalBulkDetailRequest, opts ...grpc.CallOption) (*GetTaskInternalBulkDetailResponse, error) {
	out := new(GetTaskInternalBulkDetailResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/GetTaskInternalBulkDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskInternalBulk(ctx context.Context, in *CreateTaskInternalBulkRequest, opts ...grpc.CallOption) (*CreateTaskInternalBulkResponse, error) {
	out := new(CreateTaskInternalBulkResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/CreateTaskInternalBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) DecodeFile(ctx context.Context, in *DecodeFileRequest, opts ...grpc.CallOption) (*DecodeFileResponse, error) {
	out := new(DecodeFileResponse)
	err := c.cc.Invoke(ctx, "/transfer.service.v1.ApiService/DecodeFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
// All implementations must embed UnimplementedApiServiceServer
// for forward compatibility
type ApiServiceServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	GetPairRate(context.Context, *GetPairRateRequest) (*GetPairRateResponse, error)
	CreateTransfer(context.Context, *CreateTransferRequest) (*CreateTransferResponse, error)
	GetTaskInternalFile(context.Context, *GetTaskInternalFileRequest) (*httpbody.HttpBody, error)
	GetTaskInternalTemplate(context.Context, *GetTaskInternalTemplateRequest) (*GetTaskInternalTemplateResponse, error)
	GetTaskInternalTemplateDetail(context.Context, *GetTaskInternalTemplateDetailRequest) (*GetTaskInternalTemplateDetailResponse, error)
	CreateTaskInternalSingleTemplate(context.Context, *InternalSingleTemplate) (*CreateTaskInternalSingleTemplateResponse, error)
	GetTaskInternal(context.Context, *GetTaskInternalRequest) (*GetTaskInternalResponse, error)
	GetTaskInternalDetail(context.Context, *GetTaskInternalDetailRequest) (*GetTaskInternalDetailResponse, error)
	CreateTaskInternalSingle(context.Context, *CreateTaskInternalSingleRequest) (*CreateTaskInternalSingleResponse, error)
	CreateTaskInternalMultiple(context.Context, *CreateTaskInternalMultipleRequest) (*CreateTaskInternalMultipleResponse, error)
	GetTaskInternalBulk(context.Context, *GetTaskInternalBulkRequest) (*GetTaskInternalBulkResponse, error)
	GetTaskInternalBulkDetail(context.Context, *GetTaskInternalBulkDetailRequest) (*GetTaskInternalBulkDetailResponse, error)
	CreateTaskInternalBulk(context.Context, *CreateTaskInternalBulkRequest) (*CreateTaskInternalBulkResponse, error)
	DecodeFile(context.Context, *DecodeFileRequest) (*DecodeFileResponse, error)
	mustEmbedUnimplementedApiServiceServer()
}

// UnimplementedApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (UnimplementedApiServiceServer) HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedApiServiceServer) GetPairRate(context.Context, *GetPairRateRequest) (*GetPairRateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPairRate not implemented")
}
func (UnimplementedApiServiceServer) CreateTransfer(context.Context, *CreateTransferRequest) (*CreateTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransfer not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternalFile(context.Context, *GetTaskInternalFileRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternalFile not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternalTemplate(context.Context, *GetTaskInternalTemplateRequest) (*GetTaskInternalTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternalTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternalTemplateDetail(context.Context, *GetTaskInternalTemplateDetailRequest) (*GetTaskInternalTemplateDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternalTemplateDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskInternalSingleTemplate(context.Context, *InternalSingleTemplate) (*CreateTaskInternalSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskInternalSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternal(context.Context, *GetTaskInternalRequest) (*GetTaskInternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternal not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternalDetail(context.Context, *GetTaskInternalDetailRequest) (*GetTaskInternalDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternalDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskInternalSingle(context.Context, *CreateTaskInternalSingleRequest) (*CreateTaskInternalSingleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskInternalSingle not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskInternalMultiple(context.Context, *CreateTaskInternalMultipleRequest) (*CreateTaskInternalMultipleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskInternalMultiple not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternalBulk(context.Context, *GetTaskInternalBulkRequest) (*GetTaskInternalBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternalBulk not implemented")
}
func (UnimplementedApiServiceServer) GetTaskInternalBulkDetail(context.Context, *GetTaskInternalBulkDetailRequest) (*GetTaskInternalBulkDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskInternalBulkDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskInternalBulk(context.Context, *CreateTaskInternalBulkRequest) (*CreateTaskInternalBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskInternalBulk not implemented")
}
func (UnimplementedApiServiceServer) DecodeFile(context.Context, *DecodeFileRequest) (*DecodeFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeFile not implemented")
}
func (UnimplementedApiServiceServer) mustEmbedUnimplementedApiServiceServer() {}

// UnsafeApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiServiceServer will
// result in compilation errors.
type UnsafeApiServiceServer interface {
	mustEmbedUnimplementedApiServiceServer()
}

func RegisterApiServiceServer(s grpc.ServiceRegistrar, srv ApiServiceServer) {
	s.RegisterService(&ApiService_ServiceDesc, srv)
}

func _ApiService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetPairRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPairRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetPairRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetPairRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetPairRate(ctx, req.(*GetPairRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/CreateTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTransfer(ctx, req.(*CreateTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternalFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternalFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternalFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternalFile(ctx, req.(*GetTaskInternalFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternalTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternalTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternalTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternalTemplate(ctx, req.(*GetTaskInternalTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternalTemplateDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalTemplateDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternalTemplateDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternalTemplateDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternalTemplateDetail(ctx, req.(*GetTaskInternalTemplateDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskInternalSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InternalSingleTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskInternalSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/CreateTaskInternalSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskInternalSingleTemplate(ctx, req.(*InternalSingleTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternal(ctx, req.(*GetTaskInternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternalDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternalDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternalDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternalDetail(ctx, req.(*GetTaskInternalDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskInternalSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskInternalSingleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskInternalSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/CreateTaskInternalSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskInternalSingle(ctx, req.(*CreateTaskInternalSingleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskInternalMultiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskInternalMultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskInternalMultiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/CreateTaskInternalMultiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskInternalMultiple(ctx, req.(*CreateTaskInternalMultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternalBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternalBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternalBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternalBulk(ctx, req.(*GetTaskInternalBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskInternalBulkDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskInternalBulkDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskInternalBulkDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/GetTaskInternalBulkDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskInternalBulkDetail(ctx, req.(*GetTaskInternalBulkDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskInternalBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskInternalBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskInternalBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/CreateTaskInternalBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskInternalBulk(ctx, req.(*CreateTaskInternalBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_DecodeFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).DecodeFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transfer.service.v1.ApiService/DecodeFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).DecodeFile(ctx, req.(*DecodeFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiService_ServiceDesc is the grpc.ServiceDesc for ApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "transfer.service.v1.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _ApiService_HealthCheck_Handler,
		},
		{
			MethodName: "GetPairRate",
			Handler:    _ApiService_GetPairRate_Handler,
		},
		{
			MethodName: "CreateTransfer",
			Handler:    _ApiService_CreateTransfer_Handler,
		},
		{
			MethodName: "GetTaskInternalFile",
			Handler:    _ApiService_GetTaskInternalFile_Handler,
		},
		{
			MethodName: "GetTaskInternalTemplate",
			Handler:    _ApiService_GetTaskInternalTemplate_Handler,
		},
		{
			MethodName: "GetTaskInternalTemplateDetail",
			Handler:    _ApiService_GetTaskInternalTemplateDetail_Handler,
		},
		{
			MethodName: "CreateTaskInternalSingleTemplate",
			Handler:    _ApiService_CreateTaskInternalSingleTemplate_Handler,
		},
		{
			MethodName: "GetTaskInternal",
			Handler:    _ApiService_GetTaskInternal_Handler,
		},
		{
			MethodName: "GetTaskInternalDetail",
			Handler:    _ApiService_GetTaskInternalDetail_Handler,
		},
		{
			MethodName: "CreateTaskInternalSingle",
			Handler:    _ApiService_CreateTaskInternalSingle_Handler,
		},
		{
			MethodName: "CreateTaskInternalMultiple",
			Handler:    _ApiService_CreateTaskInternalMultiple_Handler,
		},
		{
			MethodName: "GetTaskInternalBulk",
			Handler:    _ApiService_GetTaskInternalBulk_Handler,
		},
		{
			MethodName: "GetTaskInternalBulkDetail",
			Handler:    _ApiService_GetTaskInternalBulkDetail_Handler,
		},
		{
			MethodName: "CreateTaskInternalBulk",
			Handler:    _ApiService_CreateTaskInternalBulk_Handler,
		},
		{
			MethodName: "DecodeFile",
			Handler:    _ApiService_DecodeFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transfer_api.proto",
}
