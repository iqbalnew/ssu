// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: online_transfer_api.proto

package pb

import (
	context "context"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiServiceClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	GetOnlineTransferTask(ctx context.Context, in *GetOnlineTransferTaskRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskResponse, error)
	GetOnlineTransferTaskDetail(ctx context.Context, in *GetOnlineTransferTaskDetailRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskDetailResponse, error)
	GetOnlineTransferTaskFile(ctx context.Context, in *GetOnlineTransferTaskFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	UpdateOnlineTransferTask(ctx context.Context, in *UpdateOnlineTransferTaskRequest, opts ...grpc.CallOption) (*UpdateOnlineTransferTaskResponse, error)
	GetOnlineTransferTaskSingleTemplate(ctx context.Context, in *GetOnlineTransferTaskSingleTemplateRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskSingleTemplateResponse, error)
	GetOnlineTransferTaskSingleTemplateDetail(ctx context.Context, in *GetOnlineTransferTaskSingleTemplateDetailRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskSingleTemplateDetailResponse, error)
	CreateOnlineTransferTaskSingleTemplate(ctx context.Context, in *OnlineTransferSingleTemplate, opts ...grpc.CallOption) (*CreateOnlineTransferTaskSingleTemplateResponse, error)
	DeleteOnlineTransferTaskSingleTemplate(ctx context.Context, in *DeleteOnlineTransferTaskSingleTemplateRequest, opts ...grpc.CallOption) (*DeleteOnlineTransferTaskSingleTemplateResponse, error)
	CreateOnlineTransferTaskSingle(ctx context.Context, in *CreateOnlineTransferTaskSingleRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTaskSingleResponse, error)
	CreateOnlineTransferTaskMultiple(ctx context.Context, in *CreateOnlineTransferTaskMultipleRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTaskMultipleResponse, error)
	ExecOnlineTransfer(ctx context.Context, in *ExecOnlineTransferRequest, opts ...grpc.CallOption) (*ExecOnlineTransferResponse, error)
	CreateOnlineTransferTransaction(ctx context.Context, in *CreateOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTransactionResponse, error)
	CancelOnlineTransferTransaction(ctx context.Context, in *CancelOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CancelOnlineTransferTransactionResponse, error)
}

type apiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiServiceClient(cc grpc.ClientConnInterface) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetOnlineTransferTask(ctx context.Context, in *GetOnlineTransferTaskRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskResponse, error) {
	out := new(GetOnlineTransferTaskResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetOnlineTransferTaskDetail(ctx context.Context, in *GetOnlineTransferTaskDetailRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskDetailResponse, error) {
	out := new(GetOnlineTransferTaskDetailResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetOnlineTransferTaskFile(ctx context.Context, in *GetOnlineTransferTaskFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateOnlineTransferTask(ctx context.Context, in *UpdateOnlineTransferTaskRequest, opts ...grpc.CallOption) (*UpdateOnlineTransferTaskResponse, error) {
	out := new(UpdateOnlineTransferTaskResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/UpdateOnlineTransferTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetOnlineTransferTaskSingleTemplate(ctx context.Context, in *GetOnlineTransferTaskSingleTemplateRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskSingleTemplateResponse, error) {
	out := new(GetOnlineTransferTaskSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetOnlineTransferTaskSingleTemplateDetail(ctx context.Context, in *GetOnlineTransferTaskSingleTemplateDetailRequest, opts ...grpc.CallOption) (*GetOnlineTransferTaskSingleTemplateDetailResponse, error) {
	out := new(GetOnlineTransferTaskSingleTemplateDetailResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskSingleTemplateDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateOnlineTransferTaskSingleTemplate(ctx context.Context, in *OnlineTransferSingleTemplate, opts ...grpc.CallOption) (*CreateOnlineTransferTaskSingleTemplateResponse, error) {
	out := new(CreateOnlineTransferTaskSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTaskSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) DeleteOnlineTransferTaskSingleTemplate(ctx context.Context, in *DeleteOnlineTransferTaskSingleTemplateRequest, opts ...grpc.CallOption) (*DeleteOnlineTransferTaskSingleTemplateResponse, error) {
	out := new(DeleteOnlineTransferTaskSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/DeleteOnlineTransferTaskSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateOnlineTransferTaskSingle(ctx context.Context, in *CreateOnlineTransferTaskSingleRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTaskSingleResponse, error) {
	out := new(CreateOnlineTransferTaskSingleResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTaskSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateOnlineTransferTaskMultiple(ctx context.Context, in *CreateOnlineTransferTaskMultipleRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTaskMultipleResponse, error) {
	out := new(CreateOnlineTransferTaskMultipleResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTaskMultiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecOnlineTransfer(ctx context.Context, in *ExecOnlineTransferRequest, opts ...grpc.CallOption) (*ExecOnlineTransferResponse, error) {
	out := new(ExecOnlineTransferResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/ExecOnlineTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateOnlineTransferTransaction(ctx context.Context, in *CreateOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTransactionResponse, error) {
	out := new(CreateOnlineTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CancelOnlineTransferTransaction(ctx context.Context, in *CancelOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CancelOnlineTransferTransactionResponse, error) {
	out := new(CancelOnlineTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CancelOnlineTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
// All implementations must embed UnimplementedApiServiceServer
// for forward compatibility
type ApiServiceServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	GetOnlineTransferTask(context.Context, *GetOnlineTransferTaskRequest) (*GetOnlineTransferTaskResponse, error)
	GetOnlineTransferTaskDetail(context.Context, *GetOnlineTransferTaskDetailRequest) (*GetOnlineTransferTaskDetailResponse, error)
	GetOnlineTransferTaskFile(context.Context, *GetOnlineTransferTaskFileRequest) (*httpbody.HttpBody, error)
	UpdateOnlineTransferTask(context.Context, *UpdateOnlineTransferTaskRequest) (*UpdateOnlineTransferTaskResponse, error)
	GetOnlineTransferTaskSingleTemplate(context.Context, *GetOnlineTransferTaskSingleTemplateRequest) (*GetOnlineTransferTaskSingleTemplateResponse, error)
	GetOnlineTransferTaskSingleTemplateDetail(context.Context, *GetOnlineTransferTaskSingleTemplateDetailRequest) (*GetOnlineTransferTaskSingleTemplateDetailResponse, error)
	CreateOnlineTransferTaskSingleTemplate(context.Context, *OnlineTransferSingleTemplate) (*CreateOnlineTransferTaskSingleTemplateResponse, error)
	DeleteOnlineTransferTaskSingleTemplate(context.Context, *DeleteOnlineTransferTaskSingleTemplateRequest) (*DeleteOnlineTransferTaskSingleTemplateResponse, error)
	CreateOnlineTransferTaskSingle(context.Context, *CreateOnlineTransferTaskSingleRequest) (*CreateOnlineTransferTaskSingleResponse, error)
	CreateOnlineTransferTaskMultiple(context.Context, *CreateOnlineTransferTaskMultipleRequest) (*CreateOnlineTransferTaskMultipleResponse, error)
	ExecOnlineTransfer(context.Context, *ExecOnlineTransferRequest) (*ExecOnlineTransferResponse, error)
	CreateOnlineTransferTransaction(context.Context, *CreateOnlineTransferTransactionRequest) (*CreateOnlineTransferTransactionResponse, error)
	CancelOnlineTransferTransaction(context.Context, *CancelOnlineTransferTransactionRequest) (*CancelOnlineTransferTransactionResponse, error)
	mustEmbedUnimplementedApiServiceServer()
}

// UnimplementedApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (UnimplementedApiServiceServer) HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedApiServiceServer) GetOnlineTransferTask(context.Context, *GetOnlineTransferTaskRequest) (*GetOnlineTransferTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineTransferTask not implemented")
}
func (UnimplementedApiServiceServer) GetOnlineTransferTaskDetail(context.Context, *GetOnlineTransferTaskDetailRequest) (*GetOnlineTransferTaskDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineTransferTaskDetail not implemented")
}
func (UnimplementedApiServiceServer) GetOnlineTransferTaskFile(context.Context, *GetOnlineTransferTaskFileRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineTransferTaskFile not implemented")
}
func (UnimplementedApiServiceServer) UpdateOnlineTransferTask(context.Context, *UpdateOnlineTransferTaskRequest) (*UpdateOnlineTransferTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOnlineTransferTask not implemented")
}
func (UnimplementedApiServiceServer) GetOnlineTransferTaskSingleTemplate(context.Context, *GetOnlineTransferTaskSingleTemplateRequest) (*GetOnlineTransferTaskSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineTransferTaskSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetOnlineTransferTaskSingleTemplateDetail(context.Context, *GetOnlineTransferTaskSingleTemplateDetailRequest) (*GetOnlineTransferTaskSingleTemplateDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineTransferTaskSingleTemplateDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateOnlineTransferTaskSingleTemplate(context.Context, *OnlineTransferSingleTemplate) (*CreateOnlineTransferTaskSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnlineTransferTaskSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) DeleteOnlineTransferTaskSingleTemplate(context.Context, *DeleteOnlineTransferTaskSingleTemplateRequest) (*DeleteOnlineTransferTaskSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOnlineTransferTaskSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) CreateOnlineTransferTaskSingle(context.Context, *CreateOnlineTransferTaskSingleRequest) (*CreateOnlineTransferTaskSingleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnlineTransferTaskSingle not implemented")
}
func (UnimplementedApiServiceServer) CreateOnlineTransferTaskMultiple(context.Context, *CreateOnlineTransferTaskMultipleRequest) (*CreateOnlineTransferTaskMultipleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnlineTransferTaskMultiple not implemented")
}
func (UnimplementedApiServiceServer) ExecOnlineTransfer(context.Context, *ExecOnlineTransferRequest) (*ExecOnlineTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecOnlineTransfer not implemented")
}
func (UnimplementedApiServiceServer) CreateOnlineTransferTransaction(context.Context, *CreateOnlineTransferTransactionRequest) (*CreateOnlineTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnlineTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) CancelOnlineTransferTransaction(context.Context, *CancelOnlineTransferTransactionRequest) (*CancelOnlineTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOnlineTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) mustEmbedUnimplementedApiServiceServer() {}

// UnsafeApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiServiceServer will
// result in compilation errors.
type UnsafeApiServiceServer interface {
	mustEmbedUnimplementedApiServiceServer()
}

func RegisterApiServiceServer(s grpc.ServiceRegistrar, srv ApiServiceServer) {
	s.RegisterService(&ApiService_ServiceDesc, srv)
}

func _ApiService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetOnlineTransferTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineTransferTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetOnlineTransferTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetOnlineTransferTask(ctx, req.(*GetOnlineTransferTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetOnlineTransferTaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineTransferTaskDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetOnlineTransferTaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetOnlineTransferTaskDetail(ctx, req.(*GetOnlineTransferTaskDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetOnlineTransferTaskFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineTransferTaskFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetOnlineTransferTaskFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetOnlineTransferTaskFile(ctx, req.(*GetOnlineTransferTaskFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_UpdateOnlineTransferTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOnlineTransferTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).UpdateOnlineTransferTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/UpdateOnlineTransferTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).UpdateOnlineTransferTask(ctx, req.(*UpdateOnlineTransferTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetOnlineTransferTaskSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineTransferTaskSingleTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetOnlineTransferTaskSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetOnlineTransferTaskSingleTemplate(ctx, req.(*GetOnlineTransferTaskSingleTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetOnlineTransferTaskSingleTemplateDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineTransferTaskSingleTemplateDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetOnlineTransferTaskSingleTemplateDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetOnlineTransferTaskSingleTemplateDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetOnlineTransferTaskSingleTemplateDetail(ctx, req.(*GetOnlineTransferTaskSingleTemplateDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateOnlineTransferTaskSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineTransferSingleTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateOnlineTransferTaskSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTaskSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateOnlineTransferTaskSingleTemplate(ctx, req.(*OnlineTransferSingleTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_DeleteOnlineTransferTaskSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOnlineTransferTaskSingleTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).DeleteOnlineTransferTaskSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/DeleteOnlineTransferTaskSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).DeleteOnlineTransferTaskSingleTemplate(ctx, req.(*DeleteOnlineTransferTaskSingleTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateOnlineTransferTaskSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOnlineTransferTaskSingleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateOnlineTransferTaskSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTaskSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateOnlineTransferTaskSingle(ctx, req.(*CreateOnlineTransferTaskSingleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateOnlineTransferTaskMultiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOnlineTransferTaskMultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateOnlineTransferTaskMultiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTaskMultiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateOnlineTransferTaskMultiple(ctx, req.(*CreateOnlineTransferTaskMultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecOnlineTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecOnlineTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecOnlineTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/ExecOnlineTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecOnlineTransfer(ctx, req.(*ExecOnlineTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateOnlineTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOnlineTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateOnlineTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateOnlineTransferTransaction(ctx, req.(*CreateOnlineTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CancelOnlineTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOnlineTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CancelOnlineTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CancelOnlineTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CancelOnlineTransferTransaction(ctx, req.(*CancelOnlineTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiService_ServiceDesc is the grpc.ServiceDesc for ApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "onlinetransfer.service.v1.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _ApiService_HealthCheck_Handler,
		},
		{
			MethodName: "GetOnlineTransferTask",
			Handler:    _ApiService_GetOnlineTransferTask_Handler,
		},
		{
			MethodName: "GetOnlineTransferTaskDetail",
			Handler:    _ApiService_GetOnlineTransferTaskDetail_Handler,
		},
		{
			MethodName: "GetOnlineTransferTaskFile",
			Handler:    _ApiService_GetOnlineTransferTaskFile_Handler,
		},
		{
			MethodName: "UpdateOnlineTransferTask",
			Handler:    _ApiService_UpdateOnlineTransferTask_Handler,
		},
		{
			MethodName: "GetOnlineTransferTaskSingleTemplate",
			Handler:    _ApiService_GetOnlineTransferTaskSingleTemplate_Handler,
		},
		{
			MethodName: "GetOnlineTransferTaskSingleTemplateDetail",
			Handler:    _ApiService_GetOnlineTransferTaskSingleTemplateDetail_Handler,
		},
		{
			MethodName: "CreateOnlineTransferTaskSingleTemplate",
			Handler:    _ApiService_CreateOnlineTransferTaskSingleTemplate_Handler,
		},
		{
			MethodName: "DeleteOnlineTransferTaskSingleTemplate",
			Handler:    _ApiService_DeleteOnlineTransferTaskSingleTemplate_Handler,
		},
		{
			MethodName: "CreateOnlineTransferTaskSingle",
			Handler:    _ApiService_CreateOnlineTransferTaskSingle_Handler,
		},
		{
			MethodName: "CreateOnlineTransferTaskMultiple",
			Handler:    _ApiService_CreateOnlineTransferTaskMultiple_Handler,
		},
		{
			MethodName: "ExecOnlineTransfer",
			Handler:    _ApiService_ExecOnlineTransfer_Handler,
		},
		{
			MethodName: "CreateOnlineTransferTransaction",
			Handler:    _ApiService_CreateOnlineTransferTransaction_Handler,
		},
		{
			MethodName: "CancelOnlineTransferTransaction",
			Handler:    _ApiService_CancelOnlineTransferTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "online_transfer_api.proto",
}
