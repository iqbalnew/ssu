// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: online_transfer_api.proto

package pb

import (
	context "context"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiServiceClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	GetTaskOnlineTransferSingleTemplate(ctx context.Context, in *GetTaskOnlineTransferSingleTemplateRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferSingleTemplateResponse, error)
	GetTaskOnlineTransferSingleTemplateDetail(ctx context.Context, in *GetTaskOnlineTransferSingleTemplateDetailRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferSingleTemplateDetailResponse, error)
	CreateTaskOnlineTransferSingleTemplate(ctx context.Context, in *OnlineTransferSingleTemplate, opts ...grpc.CallOption) (*CreateTaskOnlineTransferSingleTemplateResponse, error)
	DeleteTaskOnlineTransferSingleTemplate(ctx context.Context, in *DeleteTaskOnlineTransferSingleTemplateRequest, opts ...grpc.CallOption) (*DeleteTaskOnlineTransferSingleTemplateResponse, error)
	GetTaskOnlineTransfer(ctx context.Context, in *GetTaskOnlineTransferRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferResponse, error)
	GetTaskOnlineTransferFile(ctx context.Context, in *GetTaskOnlineTransferFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	GetTaskOnlineTransferDetail(ctx context.Context, in *GetTaskOnlineTransferDetailRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferDetailResponse, error)
	CreateOnlineTransferTransaction(ctx context.Context, in *CreateOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTransactionResponse, error)
	CancelOnlineTransferTransaction(ctx context.Context, in *CancelOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CancelOnlineTransferTransactionResponse, error)
	SetTaskOnlineTransfer(ctx context.Context, in *SetTaskOnlineTransferRequest, opts ...grpc.CallOption) (*SetTaskOnlineTransferResponse, error)
	ExecOnlineTransfer(ctx context.Context, in *ExecOnlineTransferRequest, opts ...grpc.CallOption) (*ExecOnlineTransferResponse, error)
	CreateTaskOnlineTransferSingle(ctx context.Context, in *CreateTaskOnlineTransferSingleRequest, opts ...grpc.CallOption) (*CreateTaskOnlineTransferSingleResponse, error)
	CreateTaskOnlineTransferMultiple(ctx context.Context, in *CreateTaskOnlineTransferMultipleRequest, opts ...grpc.CallOption) (*CreateTaskOnlineTransferMultipleResponse, error)
}

type apiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiServiceClient(cc grpc.ClientConnInterface) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskOnlineTransferSingleTemplate(ctx context.Context, in *GetTaskOnlineTransferSingleTemplateRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferSingleTemplateResponse, error) {
	out := new(GetTaskOnlineTransferSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskOnlineTransferSingleTemplateDetail(ctx context.Context, in *GetTaskOnlineTransferSingleTemplateDetailRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferSingleTemplateDetailResponse, error) {
	out := new(GetTaskOnlineTransferSingleTemplateDetailResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferSingleTemplateDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskOnlineTransferSingleTemplate(ctx context.Context, in *OnlineTransferSingleTemplate, opts ...grpc.CallOption) (*CreateTaskOnlineTransferSingleTemplateResponse, error) {
	out := new(CreateTaskOnlineTransferSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateTaskOnlineTransferSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) DeleteTaskOnlineTransferSingleTemplate(ctx context.Context, in *DeleteTaskOnlineTransferSingleTemplateRequest, opts ...grpc.CallOption) (*DeleteTaskOnlineTransferSingleTemplateResponse, error) {
	out := new(DeleteTaskOnlineTransferSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/DeleteTaskOnlineTransferSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskOnlineTransfer(ctx context.Context, in *GetTaskOnlineTransferRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferResponse, error) {
	out := new(GetTaskOnlineTransferResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskOnlineTransferFile(ctx context.Context, in *GetTaskOnlineTransferFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskOnlineTransferDetail(ctx context.Context, in *GetTaskOnlineTransferDetailRequest, opts ...grpc.CallOption) (*GetTaskOnlineTransferDetailResponse, error) {
	out := new(GetTaskOnlineTransferDetailResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateOnlineTransferTransaction(ctx context.Context, in *CreateOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CreateOnlineTransferTransactionResponse, error) {
	out := new(CreateOnlineTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CancelOnlineTransferTransaction(ctx context.Context, in *CancelOnlineTransferTransactionRequest, opts ...grpc.CallOption) (*CancelOnlineTransferTransactionResponse, error) {
	out := new(CancelOnlineTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CancelOnlineTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SetTaskOnlineTransfer(ctx context.Context, in *SetTaskOnlineTransferRequest, opts ...grpc.CallOption) (*SetTaskOnlineTransferResponse, error) {
	out := new(SetTaskOnlineTransferResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/SetTaskOnlineTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecOnlineTransfer(ctx context.Context, in *ExecOnlineTransferRequest, opts ...grpc.CallOption) (*ExecOnlineTransferResponse, error) {
	out := new(ExecOnlineTransferResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/ExecOnlineTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskOnlineTransferSingle(ctx context.Context, in *CreateTaskOnlineTransferSingleRequest, opts ...grpc.CallOption) (*CreateTaskOnlineTransferSingleResponse, error) {
	out := new(CreateTaskOnlineTransferSingleResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateTaskOnlineTransferSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskOnlineTransferMultiple(ctx context.Context, in *CreateTaskOnlineTransferMultipleRequest, opts ...grpc.CallOption) (*CreateTaskOnlineTransferMultipleResponse, error) {
	out := new(CreateTaskOnlineTransferMultipleResponse)
	err := c.cc.Invoke(ctx, "/onlinetransfer.service.v1.ApiService/CreateTaskOnlineTransferMultiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
// All implementations must embed UnimplementedApiServiceServer
// for forward compatibility
type ApiServiceServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	GetTaskOnlineTransferSingleTemplate(context.Context, *GetTaskOnlineTransferSingleTemplateRequest) (*GetTaskOnlineTransferSingleTemplateResponse, error)
	GetTaskOnlineTransferSingleTemplateDetail(context.Context, *GetTaskOnlineTransferSingleTemplateDetailRequest) (*GetTaskOnlineTransferSingleTemplateDetailResponse, error)
	CreateTaskOnlineTransferSingleTemplate(context.Context, *OnlineTransferSingleTemplate) (*CreateTaskOnlineTransferSingleTemplateResponse, error)
	DeleteTaskOnlineTransferSingleTemplate(context.Context, *DeleteTaskOnlineTransferSingleTemplateRequest) (*DeleteTaskOnlineTransferSingleTemplateResponse, error)
	GetTaskOnlineTransfer(context.Context, *GetTaskOnlineTransferRequest) (*GetTaskOnlineTransferResponse, error)
	GetTaskOnlineTransferFile(context.Context, *GetTaskOnlineTransferFileRequest) (*httpbody.HttpBody, error)
	GetTaskOnlineTransferDetail(context.Context, *GetTaskOnlineTransferDetailRequest) (*GetTaskOnlineTransferDetailResponse, error)
	CreateOnlineTransferTransaction(context.Context, *CreateOnlineTransferTransactionRequest) (*CreateOnlineTransferTransactionResponse, error)
	CancelOnlineTransferTransaction(context.Context, *CancelOnlineTransferTransactionRequest) (*CancelOnlineTransferTransactionResponse, error)
	SetTaskOnlineTransfer(context.Context, *SetTaskOnlineTransferRequest) (*SetTaskOnlineTransferResponse, error)
	ExecOnlineTransfer(context.Context, *ExecOnlineTransferRequest) (*ExecOnlineTransferResponse, error)
	CreateTaskOnlineTransferSingle(context.Context, *CreateTaskOnlineTransferSingleRequest) (*CreateTaskOnlineTransferSingleResponse, error)
	CreateTaskOnlineTransferMultiple(context.Context, *CreateTaskOnlineTransferMultipleRequest) (*CreateTaskOnlineTransferMultipleResponse, error)
	mustEmbedUnimplementedApiServiceServer()
}

// UnimplementedApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (UnimplementedApiServiceServer) HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedApiServiceServer) GetTaskOnlineTransferSingleTemplate(context.Context, *GetTaskOnlineTransferSingleTemplateRequest) (*GetTaskOnlineTransferSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskOnlineTransferSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetTaskOnlineTransferSingleTemplateDetail(context.Context, *GetTaskOnlineTransferSingleTemplateDetailRequest) (*GetTaskOnlineTransferSingleTemplateDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskOnlineTransferSingleTemplateDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskOnlineTransferSingleTemplate(context.Context, *OnlineTransferSingleTemplate) (*CreateTaskOnlineTransferSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskOnlineTransferSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) DeleteTaskOnlineTransferSingleTemplate(context.Context, *DeleteTaskOnlineTransferSingleTemplateRequest) (*DeleteTaskOnlineTransferSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTaskOnlineTransferSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetTaskOnlineTransfer(context.Context, *GetTaskOnlineTransferRequest) (*GetTaskOnlineTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskOnlineTransfer not implemented")
}
func (UnimplementedApiServiceServer) GetTaskOnlineTransferFile(context.Context, *GetTaskOnlineTransferFileRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskOnlineTransferFile not implemented")
}
func (UnimplementedApiServiceServer) GetTaskOnlineTransferDetail(context.Context, *GetTaskOnlineTransferDetailRequest) (*GetTaskOnlineTransferDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskOnlineTransferDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateOnlineTransferTransaction(context.Context, *CreateOnlineTransferTransactionRequest) (*CreateOnlineTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnlineTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) CancelOnlineTransferTransaction(context.Context, *CancelOnlineTransferTransactionRequest) (*CancelOnlineTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOnlineTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) SetTaskOnlineTransfer(context.Context, *SetTaskOnlineTransferRequest) (*SetTaskOnlineTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTaskOnlineTransfer not implemented")
}
func (UnimplementedApiServiceServer) ExecOnlineTransfer(context.Context, *ExecOnlineTransferRequest) (*ExecOnlineTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecOnlineTransfer not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskOnlineTransferSingle(context.Context, *CreateTaskOnlineTransferSingleRequest) (*CreateTaskOnlineTransferSingleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskOnlineTransferSingle not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskOnlineTransferMultiple(context.Context, *CreateTaskOnlineTransferMultipleRequest) (*CreateTaskOnlineTransferMultipleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskOnlineTransferMultiple not implemented")
}
func (UnimplementedApiServiceServer) mustEmbedUnimplementedApiServiceServer() {}

// UnsafeApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiServiceServer will
// result in compilation errors.
type UnsafeApiServiceServer interface {
	mustEmbedUnimplementedApiServiceServer()
}

func RegisterApiServiceServer(s grpc.ServiceRegistrar, srv ApiServiceServer) {
	s.RegisterService(&ApiService_ServiceDesc, srv)
}

func _ApiService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskOnlineTransferSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskOnlineTransferSingleTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskOnlineTransferSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskOnlineTransferSingleTemplate(ctx, req.(*GetTaskOnlineTransferSingleTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskOnlineTransferSingleTemplateDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskOnlineTransferSingleTemplateDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskOnlineTransferSingleTemplateDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferSingleTemplateDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskOnlineTransferSingleTemplateDetail(ctx, req.(*GetTaskOnlineTransferSingleTemplateDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskOnlineTransferSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineTransferSingleTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskOnlineTransferSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateTaskOnlineTransferSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskOnlineTransferSingleTemplate(ctx, req.(*OnlineTransferSingleTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_DeleteTaskOnlineTransferSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskOnlineTransferSingleTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).DeleteTaskOnlineTransferSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/DeleteTaskOnlineTransferSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).DeleteTaskOnlineTransferSingleTemplate(ctx, req.(*DeleteTaskOnlineTransferSingleTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskOnlineTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskOnlineTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskOnlineTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskOnlineTransfer(ctx, req.(*GetTaskOnlineTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskOnlineTransferFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskOnlineTransferFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskOnlineTransferFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskOnlineTransferFile(ctx, req.(*GetTaskOnlineTransferFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskOnlineTransferDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskOnlineTransferDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskOnlineTransferDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/GetTaskOnlineTransferDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskOnlineTransferDetail(ctx, req.(*GetTaskOnlineTransferDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateOnlineTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOnlineTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateOnlineTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateOnlineTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateOnlineTransferTransaction(ctx, req.(*CreateOnlineTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CancelOnlineTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOnlineTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CancelOnlineTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CancelOnlineTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CancelOnlineTransferTransaction(ctx, req.(*CancelOnlineTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SetTaskOnlineTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTaskOnlineTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SetTaskOnlineTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/SetTaskOnlineTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SetTaskOnlineTransfer(ctx, req.(*SetTaskOnlineTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecOnlineTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecOnlineTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecOnlineTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/ExecOnlineTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecOnlineTransfer(ctx, req.(*ExecOnlineTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskOnlineTransferSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskOnlineTransferSingleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskOnlineTransferSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateTaskOnlineTransferSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskOnlineTransferSingle(ctx, req.(*CreateTaskOnlineTransferSingleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskOnlineTransferMultiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskOnlineTransferMultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskOnlineTransferMultiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/onlinetransfer.service.v1.ApiService/CreateTaskOnlineTransferMultiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskOnlineTransferMultiple(ctx, req.(*CreateTaskOnlineTransferMultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiService_ServiceDesc is the grpc.ServiceDesc for ApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "onlinetransfer.service.v1.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _ApiService_HealthCheck_Handler,
		},
		{
			MethodName: "GetTaskOnlineTransferSingleTemplate",
			Handler:    _ApiService_GetTaskOnlineTransferSingleTemplate_Handler,
		},
		{
			MethodName: "GetTaskOnlineTransferSingleTemplateDetail",
			Handler:    _ApiService_GetTaskOnlineTransferSingleTemplateDetail_Handler,
		},
		{
			MethodName: "CreateTaskOnlineTransferSingleTemplate",
			Handler:    _ApiService_CreateTaskOnlineTransferSingleTemplate_Handler,
		},
		{
			MethodName: "DeleteTaskOnlineTransferSingleTemplate",
			Handler:    _ApiService_DeleteTaskOnlineTransferSingleTemplate_Handler,
		},
		{
			MethodName: "GetTaskOnlineTransfer",
			Handler:    _ApiService_GetTaskOnlineTransfer_Handler,
		},
		{
			MethodName: "GetTaskOnlineTransferFile",
			Handler:    _ApiService_GetTaskOnlineTransferFile_Handler,
		},
		{
			MethodName: "GetTaskOnlineTransferDetail",
			Handler:    _ApiService_GetTaskOnlineTransferDetail_Handler,
		},
		{
			MethodName: "CreateOnlineTransferTransaction",
			Handler:    _ApiService_CreateOnlineTransferTransaction_Handler,
		},
		{
			MethodName: "CancelOnlineTransferTransaction",
			Handler:    _ApiService_CancelOnlineTransferTransaction_Handler,
		},
		{
			MethodName: "SetTaskOnlineTransfer",
			Handler:    _ApiService_SetTaskOnlineTransfer_Handler,
		},
		{
			MethodName: "ExecOnlineTransfer",
			Handler:    _ApiService_ExecOnlineTransfer_Handler,
		},
		{
			MethodName: "CreateTaskOnlineTransferSingle",
			Handler:    _ApiService_CreateTaskOnlineTransferSingle_Handler,
		},
		{
			MethodName: "CreateTaskOnlineTransferMultiple",
			Handler:    _ApiService_CreateTaskOnlineTransferMultiple_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "online_transfer_api.proto",
}
