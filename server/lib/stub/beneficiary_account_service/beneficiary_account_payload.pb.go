// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: beneficiary_account_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListBeneficiaryAccountRequestDirection int32

const (
	ListBeneficiaryAccountRequest_DESC ListBeneficiaryAccountRequestDirection = 0
	ListBeneficiaryAccountRequest_ASC  ListBeneficiaryAccountRequestDirection = 1
)

// Enum value maps for ListBeneficiaryAccountRequestDirection.
var (
	ListBeneficiaryAccountRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListBeneficiaryAccountRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListBeneficiaryAccountRequestDirection) Enum() *ListBeneficiaryAccountRequestDirection {
	p := new(ListBeneficiaryAccountRequestDirection)
	*p = x
	return p
}

func (x ListBeneficiaryAccountRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListBeneficiaryAccountRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[0].Descriptor()
}

func (ListBeneficiaryAccountRequestDirection) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[0]
}

func (x ListBeneficiaryAccountRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListBeneficiaryAccountRequestDirection.Descriptor instead.
func (ListBeneficiaryAccountRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{7, 0}
}

type ListBeneficiaryAccountTaskRequestStatuses int32

const (
	ListBeneficiaryAccountTaskRequest_AllStatus ListBeneficiaryAccountTaskRequestStatuses = 0
	ListBeneficiaryAccountTaskRequest_Pending   ListBeneficiaryAccountTaskRequestStatuses = 1
	ListBeneficiaryAccountTaskRequest_Draft     ListBeneficiaryAccountTaskRequestStatuses = 2
	ListBeneficiaryAccountTaskRequest_Returned  ListBeneficiaryAccountTaskRequestStatuses = 3
	ListBeneficiaryAccountTaskRequest_Approved  ListBeneficiaryAccountTaskRequestStatuses = 4
	ListBeneficiaryAccountTaskRequest_Rejected  ListBeneficiaryAccountTaskRequestStatuses = 5
)

// Enum value maps for ListBeneficiaryAccountTaskRequestStatuses.
var (
	ListBeneficiaryAccountTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	ListBeneficiaryAccountTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x ListBeneficiaryAccountTaskRequestStatuses) Enum() *ListBeneficiaryAccountTaskRequestStatuses {
	p := new(ListBeneficiaryAccountTaskRequestStatuses)
	*p = x
	return p
}

func (x ListBeneficiaryAccountTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListBeneficiaryAccountTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[1].Descriptor()
}

func (ListBeneficiaryAccountTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[1]
}

func (x ListBeneficiaryAccountTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListBeneficiaryAccountTaskRequestStatuses.Descriptor instead.
func (ListBeneficiaryAccountTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{23, 0}
}

type ListBeneficiaryAccountTaskRequestSteps int32

const (
	ListBeneficiaryAccountTaskRequest_AllStep  ListBeneficiaryAccountTaskRequestSteps = 0
	ListBeneficiaryAccountTaskRequest_Maker    ListBeneficiaryAccountTaskRequestSteps = 1
	ListBeneficiaryAccountTaskRequest_Checker  ListBeneficiaryAccountTaskRequestSteps = 2
	ListBeneficiaryAccountTaskRequest_Signer   ListBeneficiaryAccountTaskRequestSteps = 3
	ListBeneficiaryAccountTaskRequest_Releaser ListBeneficiaryAccountTaskRequestSteps = 4
)

// Enum value maps for ListBeneficiaryAccountTaskRequestSteps.
var (
	ListBeneficiaryAccountTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListBeneficiaryAccountTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListBeneficiaryAccountTaskRequestSteps) Enum() *ListBeneficiaryAccountTaskRequestSteps {
	p := new(ListBeneficiaryAccountTaskRequestSteps)
	*p = x
	return p
}

func (x ListBeneficiaryAccountTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListBeneficiaryAccountTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[2].Descriptor()
}

func (ListBeneficiaryAccountTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[2]
}

func (x ListBeneficiaryAccountTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListBeneficiaryAccountTaskRequestSteps.Descriptor instead.
func (ListBeneficiaryAccountTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{23, 1}
}

type ListBeneficiaryAccountTaskRequestDirection int32

const (
	ListBeneficiaryAccountTaskRequest_DESC ListBeneficiaryAccountTaskRequestDirection = 0
	ListBeneficiaryAccountTaskRequest_ASC  ListBeneficiaryAccountTaskRequestDirection = 1
)

// Enum value maps for ListBeneficiaryAccountTaskRequestDirection.
var (
	ListBeneficiaryAccountTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListBeneficiaryAccountTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListBeneficiaryAccountTaskRequestDirection) Enum() *ListBeneficiaryAccountTaskRequestDirection {
	p := new(ListBeneficiaryAccountTaskRequestDirection)
	*p = x
	return p
}

func (x ListBeneficiaryAccountTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListBeneficiaryAccountTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[3].Descriptor()
}

func (ListBeneficiaryAccountTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[3]
}

func (x ListBeneficiaryAccountTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListBeneficiaryAccountTaskRequestDirection.Descriptor instead.
func (ListBeneficiaryAccountTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{23, 2}
}

type FileListTemplateRequest_FormatTemplates int32

const (
	FileListTemplateRequest_null FileListTemplateRequest_FormatTemplates = 0
	FileListTemplateRequest_csv  FileListTemplateRequest_FormatTemplates = 1
	FileListTemplateRequest_xls  FileListTemplateRequest_FormatTemplates = 2
	FileListTemplateRequest_xlsx FileListTemplateRequest_FormatTemplates = 3
)

// Enum value maps for FileListTemplateRequest_FormatTemplates.
var (
	FileListTemplateRequest_FormatTemplates_name = map[int32]string{
		0: "null",
		1: "csv",
		2: "xls",
		3: "xlsx",
	}
	FileListTemplateRequest_FormatTemplates_value = map[string]int32{
		"null": 0,
		"csv":  1,
		"xls":  2,
		"xlsx": 3,
	}
)

func (x FileListTemplateRequest_FormatTemplates) Enum() *FileListTemplateRequest_FormatTemplates {
	p := new(FileListTemplateRequest_FormatTemplates)
	*p = x
	return p
}

func (x FileListTemplateRequest_FormatTemplates) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListTemplateRequest_FormatTemplates) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[4].Descriptor()
}

func (FileListTemplateRequest_FormatTemplates) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[4]
}

func (x FileListTemplateRequest_FormatTemplates) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListTemplateRequest_FormatTemplates.Descriptor instead.
func (FileListTemplateRequest_FormatTemplates) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{32, 0}
}

type FileListBeneficiaryAccountTaskRequest_Formats int32

const (
	FileListBeneficiaryAccountTaskRequest_null FileListBeneficiaryAccountTaskRequest_Formats = 0
	FileListBeneficiaryAccountTaskRequest_pdf  FileListBeneficiaryAccountTaskRequest_Formats = 1
	FileListBeneficiaryAccountTaskRequest_xls  FileListBeneficiaryAccountTaskRequest_Formats = 2
	FileListBeneficiaryAccountTaskRequest_csv  FileListBeneficiaryAccountTaskRequest_Formats = 3
)

// Enum value maps for FileListBeneficiaryAccountTaskRequest_Formats.
var (
	FileListBeneficiaryAccountTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileListBeneficiaryAccountTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileListBeneficiaryAccountTaskRequest_Formats) Enum() *FileListBeneficiaryAccountTaskRequest_Formats {
	p := new(FileListBeneficiaryAccountTaskRequest_Formats)
	*p = x
	return p
}

func (x FileListBeneficiaryAccountTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListBeneficiaryAccountTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[5].Descriptor()
}

func (FileListBeneficiaryAccountTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[5]
}

func (x FileListBeneficiaryAccountTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListBeneficiaryAccountTaskRequest_Formats.Descriptor instead.
func (FileListBeneficiaryAccountTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{33, 0}
}

type FileListBeneficiaryAccountTaskRequestStatuses int32

const (
	FileListBeneficiaryAccountTaskRequest_AllStatus FileListBeneficiaryAccountTaskRequestStatuses = 0
	FileListBeneficiaryAccountTaskRequest_Pending   FileListBeneficiaryAccountTaskRequestStatuses = 1
	FileListBeneficiaryAccountTaskRequest_Draft     FileListBeneficiaryAccountTaskRequestStatuses = 2
	FileListBeneficiaryAccountTaskRequest_Returned  FileListBeneficiaryAccountTaskRequestStatuses = 3
	FileListBeneficiaryAccountTaskRequest_Approved  FileListBeneficiaryAccountTaskRequestStatuses = 4
	FileListBeneficiaryAccountTaskRequest_Rejected  FileListBeneficiaryAccountTaskRequestStatuses = 5
)

// Enum value maps for FileListBeneficiaryAccountTaskRequestStatuses.
var (
	FileListBeneficiaryAccountTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	FileListBeneficiaryAccountTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x FileListBeneficiaryAccountTaskRequestStatuses) Enum() *FileListBeneficiaryAccountTaskRequestStatuses {
	p := new(FileListBeneficiaryAccountTaskRequestStatuses)
	*p = x
	return p
}

func (x FileListBeneficiaryAccountTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListBeneficiaryAccountTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[6].Descriptor()
}

func (FileListBeneficiaryAccountTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[6]
}

func (x FileListBeneficiaryAccountTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListBeneficiaryAccountTaskRequestStatuses.Descriptor instead.
func (FileListBeneficiaryAccountTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{33, 1}
}

type FileListBeneficiaryAccountTaskRequestSteps int32

const (
	FileListBeneficiaryAccountTaskRequest_AllStep  FileListBeneficiaryAccountTaskRequestSteps = 0
	FileListBeneficiaryAccountTaskRequest_Maker    FileListBeneficiaryAccountTaskRequestSteps = 1
	FileListBeneficiaryAccountTaskRequest_Checker  FileListBeneficiaryAccountTaskRequestSteps = 2
	FileListBeneficiaryAccountTaskRequest_Signer   FileListBeneficiaryAccountTaskRequestSteps = 3
	FileListBeneficiaryAccountTaskRequest_Releaser FileListBeneficiaryAccountTaskRequestSteps = 4
)

// Enum value maps for FileListBeneficiaryAccountTaskRequestSteps.
var (
	FileListBeneficiaryAccountTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	FileListBeneficiaryAccountTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x FileListBeneficiaryAccountTaskRequestSteps) Enum() *FileListBeneficiaryAccountTaskRequestSteps {
	p := new(FileListBeneficiaryAccountTaskRequestSteps)
	*p = x
	return p
}

func (x FileListBeneficiaryAccountTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListBeneficiaryAccountTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[7].Descriptor()
}

func (FileListBeneficiaryAccountTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[7]
}

func (x FileListBeneficiaryAccountTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListBeneficiaryAccountTaskRequestSteps.Descriptor instead.
func (FileListBeneficiaryAccountTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{33, 2}
}

type FileListBeneficiaryAccountTaskRequestDirection int32

const (
	FileListBeneficiaryAccountTaskRequest_DESC FileListBeneficiaryAccountTaskRequestDirection = 0
	FileListBeneficiaryAccountTaskRequest_ASC  FileListBeneficiaryAccountTaskRequestDirection = 1
)

// Enum value maps for FileListBeneficiaryAccountTaskRequestDirection.
var (
	FileListBeneficiaryAccountTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	FileListBeneficiaryAccountTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x FileListBeneficiaryAccountTaskRequestDirection) Enum() *FileListBeneficiaryAccountTaskRequestDirection {
	p := new(FileListBeneficiaryAccountTaskRequestDirection)
	*p = x
	return p
}

func (x FileListBeneficiaryAccountTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileListBeneficiaryAccountTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[8].Descriptor()
}

func (FileListBeneficiaryAccountTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[8]
}

func (x FileListBeneficiaryAccountTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileListBeneficiaryAccountTaskRequestDirection.Descriptor instead.
func (FileListBeneficiaryAccountTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{33, 3}
}

type ListBankReqDirection int32

const (
	ListBankReq_DESC ListBankReqDirection = 0
	ListBankReq_ASC  ListBankReqDirection = 1
)

// Enum value maps for ListBankReqDirection.
var (
	ListBankReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListBankReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListBankReqDirection) Enum() *ListBankReqDirection {
	p := new(ListBankReqDirection)
	*p = x
	return p
}

func (x ListBankReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListBankReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_beneficiary_account_payload_proto_enumTypes[9].Descriptor()
}

func (ListBankReqDirection) Type() protoreflect.EnumType {
	return &file_beneficiary_account_payload_proto_enumTypes[9]
}

func (x ListBankReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListBankReqDirection.Descriptor instead.
func (ListBankReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{36, 0}
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{3}
}

type InvalidKeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidKeyError) Reset() {
	*x = InvalidKeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyError) ProtoMessage() {}

func (x *InvalidKeyError) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyError.ProtoReflect.Descriptor instead.
func (*InvalidKeyError) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{4}
}

func (x *InvalidKeyError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InvalidKeyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *JWTTokenResponse) Reset() {
	*x = JWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokenResponse) ProtoMessage() {}

func (x *JWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokenResponse.ProtoReflect.Descriptor instead.
func (*JWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{5}
}

func (x *JWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTTokenResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{6}
}

type ListBeneficiaryAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccount *BeneficiaryAccount                    `protobuf:"bytes,1,opt,name=beneficiaryAccount,proto3" json:"beneficiaryAccount,omitempty"`
	Limit              int32                                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page               int32                                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort               string                                 `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir                ListBeneficiaryAccountRequestDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=beneficiary.account.service.v1.ListBeneficiaryAccountRequestDirection" json:"dir,omitempty"`
	Filter             string                                 `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query              string                                 `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr           string                                 `protobuf:"bytes,8,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
	In                 string                                 `protobuf:"bytes,9,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *ListBeneficiaryAccountRequest) Reset() {
	*x = ListBeneficiaryAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeneficiaryAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeneficiaryAccountRequest) ProtoMessage() {}

func (x *ListBeneficiaryAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeneficiaryAccountRequest.ProtoReflect.Descriptor instead.
func (*ListBeneficiaryAccountRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{7}
}

func (x *ListBeneficiaryAccountRequest) GetBeneficiaryAccount() *BeneficiaryAccount {
	if x != nil {
		return x.BeneficiaryAccount
	}
	return nil
}

func (x *ListBeneficiaryAccountRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBeneficiaryAccountRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBeneficiaryAccountRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListBeneficiaryAccountRequest) GetDir() ListBeneficiaryAccountRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListBeneficiaryAccountRequest_DESC
}

func (x *ListBeneficiaryAccountRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListBeneficiaryAccountRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListBeneficiaryAccountRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

func (x *ListBeneficiaryAccountRequest) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{8}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type ListBeneficiaryAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*BeneficiaryAccount `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse   `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBeneficiaryAccountResponse) Reset() {
	*x = ListBeneficiaryAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeneficiaryAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeneficiaryAccountResponse) ProtoMessage() {}

func (x *ListBeneficiaryAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeneficiaryAccountResponse.ProtoReflect.Descriptor instead.
func (*ListBeneficiaryAccountResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{9}
}

func (x *ListBeneficiaryAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListBeneficiaryAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListBeneficiaryAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListBeneficiaryAccountResponse) GetData() []*BeneficiaryAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListBeneficiaryAccountResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListBeneficiaryAccountActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*BeneficiaryAccount `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListBeneficiaryAccountActiveResponse) Reset() {
	*x = ListBeneficiaryAccountActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeneficiaryAccountActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeneficiaryAccountActiveResponse) ProtoMessage() {}

func (x *ListBeneficiaryAccountActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeneficiaryAccountActiveResponse.ProtoReflect.Descriptor instead.
func (*ListBeneficiaryAccountActiveResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{10}
}

func (x *ListBeneficiaryAccountActiveResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListBeneficiaryAccountActiveResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListBeneficiaryAccountActiveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListBeneficiaryAccountActiveResponse) GetData() []*BeneficiaryAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateBeneficiaryAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *BeneficiaryAccount `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64              `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateBeneficiaryAccountRequest) Reset() {
	*x = CreateBeneficiaryAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryAccountRequest) ProtoMessage() {}

func (x *CreateBeneficiaryAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryAccountRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{11}
}

func (x *CreateBeneficiaryAccountRequest) GetData() *BeneficiaryAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateBeneficiaryAccountRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateBeneficiaryAccountTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *BeneficiaryAccountWrite `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64                   `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool                     `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateBeneficiaryAccountTaskRequest) Reset() {
	*x = CreateBeneficiaryAccountTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryAccountTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryAccountTaskRequest) ProtoMessage() {}

func (x *CreateBeneficiaryAccountTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryAccountTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryAccountTaskRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{12}
}

func (x *CreateBeneficiaryAccountTaskRequest) GetData() *BeneficiaryAccountWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateBeneficiaryAccountTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateBeneficiaryAccountTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type BeneficiaryAccountWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccountID uint64   `protobuf:"varint,1,opt,name=beneficiaryAccountID,proto3" json:"beneficiaryAccountID,omitempty"`
	CompanyID            uint64   `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Country              string   `protobuf:"bytes,20,opt,name=country,proto3" json:"country,omitempty"`
	Bic                  string   `protobuf:"bytes,21,opt,name=bic,proto3" json:"bic,omitempty"`
	MasterBankID         string   `protobuf:"bytes,19,opt,name=masterBankID,proto3" json:"masterBankID,omitempty"`
	AccountNumber        string   `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias         []string `protobuf:"bytes,4,rep,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName          string   `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType          string   `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus        string   `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency      string   `protobuf:"bytes,8,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel          string   `protobuf:"bytes,9,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	IsOwnedByCompany     string   `protobuf:"bytes,10,opt,name=isOwnedByCompany,proto3" json:"isOwnedByCompany,omitempty"`
	CreatedByID          uint64   `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID          uint64   `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID          uint64   `protobuf:"varint,13,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	CompanyName          string   `protobuf:"bytes,31,opt,name=companyName,proto3" json:"companyName,omitempty"`
	MasterBankName       string   `protobuf:"bytes,33,opt,name=masterBankName,proto3" json:"masterBankName,omitempty"`
	CreatedByName        string   `protobuf:"bytes,32,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	// uint64 roleID = 14  ;
	// bool disabled = 15  ;
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *BeneficiaryAccountWrite) Reset() {
	*x = BeneficiaryAccountWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAccountWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAccountWrite) ProtoMessage() {}

func (x *BeneficiaryAccountWrite) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAccountWrite.ProtoReflect.Descriptor instead.
func (*BeneficiaryAccountWrite) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{13}
}

func (x *BeneficiaryAccountWrite) GetBeneficiaryAccountID() uint64 {
	if x != nil {
		return x.BeneficiaryAccountID
	}
	return 0
}

func (x *BeneficiaryAccountWrite) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *BeneficiaryAccountWrite) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetBic() string {
	if x != nil {
		return x.Bic
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetMasterBankID() string {
	if x != nil {
		return x.MasterBankID
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetAccountAlias() []string {
	if x != nil {
		return x.AccountAlias
	}
	return nil
}

func (x *BeneficiaryAccountWrite) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetIsOwnedByCompany() string {
	if x != nil {
		return x.IsOwnedByCompany
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *BeneficiaryAccountWrite) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *BeneficiaryAccountWrite) GetDeletedByID() uint64 {
	if x != nil {
		return x.DeletedByID
	}
	return 0
}

func (x *BeneficiaryAccountWrite) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetMasterBankName() string {
	if x != nil {
		return x.MasterBankName
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *BeneficiaryAccountWrite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BeneficiaryAccountWrite) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BeneficiaryAccountWrite) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type CreateBeneficiaryAccountTaskBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccounts []*BeneficiaryAccountWrite `protobuf:"bytes,1,rep,name=beneficiaryAccounts,proto3" json:"beneficiaryAccounts,omitempty"`
	TaskID              uint64                     `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft             bool                       `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateBeneficiaryAccountTaskBulkRequest) Reset() {
	*x = CreateBeneficiaryAccountTaskBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryAccountTaskBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryAccountTaskBulkRequest) ProtoMessage() {}

func (x *CreateBeneficiaryAccountTaskBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryAccountTaskBulkRequest.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryAccountTaskBulkRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{14}
}

func (x *CreateBeneficiaryAccountTaskBulkRequest) GetBeneficiaryAccounts() []*BeneficiaryAccountWrite {
	if x != nil {
		return x.BeneficiaryAccounts
	}
	return nil
}

func (x *CreateBeneficiaryAccountTaskBulkRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateBeneficiaryAccountTaskBulkRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type AccountAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAlias string `protobuf:"bytes,1,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
}

func (x *AccountAlias) Reset() {
	*x = AccountAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAlias) ProtoMessage() {}

func (x *AccountAlias) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAlias.ProtoReflect.Descriptor instead.
func (*AccountAlias) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{15}
}

func (x *AccountAlias) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

type CreateBeneficiaryAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BeneficiaryAccount `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateBeneficiaryAccountResponse) Reset() {
	*x = CreateBeneficiaryAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryAccountResponse) ProtoMessage() {}

func (x *CreateBeneficiaryAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryAccountResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{16}
}

func (x *CreateBeneficiaryAccountResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateBeneficiaryAccountResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateBeneficiaryAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBeneficiaryAccountResponse) GetData() *BeneficiaryAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Status             string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,4,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,5,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,6,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,7,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,8,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,9,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,50,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{17}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Task) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type BeneficiaryAccountTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccountID uint64                 `protobuf:"varint,1,opt,name=beneficiaryAccountID,proto3" json:"beneficiaryAccountID,omitempty"`
	CompanyID            uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Country              string                 `protobuf:"bytes,17,opt,name=country,proto3" json:"country,omitempty"`
	Bic                  string                 `protobuf:"bytes,18,opt,name=bic,proto3" json:"bic,omitempty"`
	MasterBankID         string                 `protobuf:"bytes,16,opt,name=masterBankID,proto3" json:"masterBankID,omitempty"`
	AccountNumber        string                 `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias         []string               `protobuf:"bytes,4,rep,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName          string                 `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType          string                 `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus        string                 `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency      string                 `protobuf:"bytes,8,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel          string                 `protobuf:"bytes,9,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	IsOwnedByCompany     string                 `protobuf:"bytes,10,opt,name=isOwnedByCompany,proto3" json:"isOwnedByCompany,omitempty"`
	CreatedByID          uint64                 `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID          uint64                 `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID          uint64                 `protobuf:"varint,13,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	CompanyName          string                 `protobuf:"bytes,31,opt,name=companyName,proto3" json:"companyName,omitempty"`
	MasterBankName       string                 `protobuf:"bytes,33,opt,name=masterBankName,proto3" json:"masterBankName,omitempty"`
	CreatedByName        string                 `protobuf:"bytes,32,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *BeneficiaryAccountTaskData) Reset() {
	*x = BeneficiaryAccountTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAccountTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAccountTaskData) ProtoMessage() {}

func (x *BeneficiaryAccountTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAccountTaskData.ProtoReflect.Descriptor instead.
func (*BeneficiaryAccountTaskData) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{18}
}

func (x *BeneficiaryAccountTaskData) GetBeneficiaryAccountID() uint64 {
	if x != nil {
		return x.BeneficiaryAccountID
	}
	return 0
}

func (x *BeneficiaryAccountTaskData) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *BeneficiaryAccountTaskData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetBic() string {
	if x != nil {
		return x.Bic
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetMasterBankID() string {
	if x != nil {
		return x.MasterBankID
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetAccountAlias() []string {
	if x != nil {
		return x.AccountAlias
	}
	return nil
}

func (x *BeneficiaryAccountTaskData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetIsOwnedByCompany() string {
	if x != nil {
		return x.IsOwnedByCompany
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *BeneficiaryAccountTaskData) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *BeneficiaryAccountTaskData) GetDeletedByID() uint64 {
	if x != nil {
		return x.DeletedByID
	}
	return 0
}

func (x *BeneficiaryAccountTaskData) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetMasterBankName() string {
	if x != nil {
		return x.MasterBankName
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *BeneficiaryAccountTaskData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BeneficiaryAccountTaskData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BeneficiaryAccountTaskData) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type BeneficiaryAccountTaskDataString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccountID uint64                 `protobuf:"varint,1,opt,name=beneficiaryAccountID,proto3" json:"beneficiaryAccountID,omitempty"`
	CompanyID            uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Country              string                 `protobuf:"bytes,20,opt,name=country,proto3" json:"country,omitempty"`
	Bic                  string                 `protobuf:"bytes,21,opt,name=bic,proto3" json:"bic,omitempty"`
	MasterBankID         string                 `protobuf:"bytes,16,opt,name=masterBankID,proto3" json:"masterBankID,omitempty"`
	AccountNumber        string                 `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias         string                 `protobuf:"bytes,4,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName          string                 `protobuf:"bytes,5,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType          string                 `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus        string                 `protobuf:"bytes,7,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency      string                 `protobuf:"bytes,8,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel          string                 `protobuf:"bytes,9,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
	IsOwnedByCompany     string                 `protobuf:"bytes,10,opt,name=isOwnedByCompany,proto3" json:"isOwnedByCompany,omitempty"`
	CreatedByID          uint64                 `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID          uint64                 `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID          uint64                 `protobuf:"varint,13,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	CompanyName          string                 `protobuf:"bytes,31,opt,name=companyName,proto3" json:"companyName,omitempty"`
	MasterBankName       string                 `protobuf:"bytes,33,opt,name=masterBankName,proto3" json:"masterBankName,omitempty"`
	CreatedByName        string                 `protobuf:"bytes,32,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *BeneficiaryAccountTaskDataString) Reset() {
	*x = BeneficiaryAccountTaskDataString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAccountTaskDataString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAccountTaskDataString) ProtoMessage() {}

func (x *BeneficiaryAccountTaskDataString) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAccountTaskDataString.ProtoReflect.Descriptor instead.
func (*BeneficiaryAccountTaskDataString) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{19}
}

func (x *BeneficiaryAccountTaskDataString) GetBeneficiaryAccountID() uint64 {
	if x != nil {
		return x.BeneficiaryAccountID
	}
	return 0
}

func (x *BeneficiaryAccountTaskDataString) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *BeneficiaryAccountTaskDataString) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetBic() string {
	if x != nil {
		return x.Bic
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetMasterBankID() string {
	if x != nil {
		return x.MasterBankID
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetIsOwnedByCompany() string {
	if x != nil {
		return x.IsOwnedByCompany
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *BeneficiaryAccountTaskDataString) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *BeneficiaryAccountTaskDataString) GetDeletedByID() uint64 {
	if x != nil {
		return x.DeletedByID
	}
	return 0
}

func (x *BeneficiaryAccountTaskDataString) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetMasterBankName() string {
	if x != nil {
		return x.MasterBankName
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *BeneficiaryAccountTaskDataString) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BeneficiaryAccountTaskDataString) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BeneficiaryAccountTaskDataString) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type BeneficiaryAccountTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccount  *BeneficiaryAccountTaskData   `protobuf:"bytes,1,opt,name=beneficiaryAccount,proto3" json:"beneficiaryAccount,omitempty"`
	Task                *Task                         `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	BeneficiaryAccounts []*BeneficiaryAccountTaskData `protobuf:"bytes,3,rep,name=beneficiaryAccounts,proto3" json:"beneficiaryAccounts,omitempty"`
}

func (x *BeneficiaryAccountTask) Reset() {
	*x = BeneficiaryAccountTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAccountTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAccountTask) ProtoMessage() {}

func (x *BeneficiaryAccountTask) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAccountTask.ProtoReflect.Descriptor instead.
func (*BeneficiaryAccountTask) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{20}
}

func (x *BeneficiaryAccountTask) GetBeneficiaryAccount() *BeneficiaryAccountTaskData {
	if x != nil {
		return x.BeneficiaryAccount
	}
	return nil
}

func (x *BeneficiaryAccountTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *BeneficiaryAccountTask) GetBeneficiaryAccounts() []*BeneficiaryAccountTaskData {
	if x != nil {
		return x.BeneficiaryAccounts
	}
	return nil
}

type CreateBeneficiaryAccountTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TaskID  uint64 `protobuf:"varint,4,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateBeneficiaryAccountTaskResponse) Reset() {
	*x = CreateBeneficiaryAccountTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryAccountTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryAccountTaskResponse) ProtoMessage() {}

func (x *CreateBeneficiaryAccountTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryAccountTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryAccountTaskResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{21}
}

func (x *CreateBeneficiaryAccountTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateBeneficiaryAccountTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateBeneficiaryAccountTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBeneficiaryAccountTaskResponse) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateBeneficiaryAccountTaskMultipleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TaskID  []uint64 `protobuf:"varint,4,rep,packed,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) Reset() {
	*x = CreateBeneficiaryAccountTaskMultipleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryAccountTaskMultipleResponse) ProtoMessage() {}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryAccountTaskMultipleResponse.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryAccountTaskMultipleResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{22}
}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateBeneficiaryAccountTaskMultipleResponse) GetTaskID() []uint64 {
	if x != nil {
		return x.TaskID
	}
	return nil
}

type ListBeneficiaryAccountTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListBeneficiaryAccountTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequestStatuses" json:"status,omitempty"`
	Step   ListBeneficiaryAccountTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequestSteps" json:"step,omitempty"`
	Limit  int32                                      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                                      `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                                     `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListBeneficiaryAccountTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequestDirection" json:"dir,omitempty"`
	Filter string                                     `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query  string                                     `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListBeneficiaryAccountTaskRequest) Reset() {
	*x = ListBeneficiaryAccountTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeneficiaryAccountTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeneficiaryAccountTaskRequest) ProtoMessage() {}

func (x *ListBeneficiaryAccountTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeneficiaryAccountTaskRequest.ProtoReflect.Descriptor instead.
func (*ListBeneficiaryAccountTaskRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{23}
}

func (x *ListBeneficiaryAccountTaskRequest) GetStatus() ListBeneficiaryAccountTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListBeneficiaryAccountTaskRequest_AllStatus
}

func (x *ListBeneficiaryAccountTaskRequest) GetStep() ListBeneficiaryAccountTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListBeneficiaryAccountTaskRequest_AllStep
}

func (x *ListBeneficiaryAccountTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBeneficiaryAccountTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBeneficiaryAccountTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListBeneficiaryAccountTaskRequest) GetDir() ListBeneficiaryAccountTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListBeneficiaryAccountTaskRequest_DESC
}

func (x *ListBeneficiaryAccountTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListBeneficiaryAccountTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{24}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type GetBeneficiaryAccountTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetBeneficiaryAccountTaskByIDRequest) Reset() {
	*x = GetBeneficiaryAccountTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBeneficiaryAccountTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBeneficiaryAccountTaskByIDRequest) ProtoMessage() {}

func (x *GetBeneficiaryAccountTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBeneficiaryAccountTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBeneficiaryAccountTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{25}
}

func (x *GetBeneficiaryAccountTaskByIDRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ListBeneficiaryAccountTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*BeneficiaryAccountTask `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse       `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBeneficiaryAccountTaskResponse) Reset() {
	*x = ListBeneficiaryAccountTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeneficiaryAccountTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeneficiaryAccountTaskResponse) ProtoMessage() {}

func (x *ListBeneficiaryAccountTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeneficiaryAccountTaskResponse.ProtoReflect.Descriptor instead.
func (*ListBeneficiaryAccountTaskResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{26}
}

func (x *ListBeneficiaryAccountTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListBeneficiaryAccountTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListBeneficiaryAccountTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListBeneficiaryAccountTaskResponse) GetData() []*BeneficiaryAccountTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListBeneficiaryAccountTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{27}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BeneficiaryAccountDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryAccountID uint64 `protobuf:"varint,1,opt,name=beneficiaryAccountID,proto3" json:"beneficiaryAccountID,omitempty"`
}

func (x *BeneficiaryAccountDetailRequest) Reset() {
	*x = BeneficiaryAccountDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAccountDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAccountDetailRequest) ProtoMessage() {}

func (x *BeneficiaryAccountDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAccountDetailRequest.ProtoReflect.Descriptor instead.
func (*BeneficiaryAccountDetailRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{28}
}

func (x *BeneficiaryAccountDetailRequest) GetBeneficiaryAccountID() uint64 {
	if x != nil {
		return x.BeneficiaryAccountID
	}
	return 0
}

type BeneficiaryAccountDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BeneficiaryAccount `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BeneficiaryAccountDetailResponse) Reset() {
	*x = BeneficiaryAccountDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAccountDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAccountDetailResponse) ProtoMessage() {}

func (x *BeneficiaryAccountDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAccountDetailResponse.ProtoReflect.Descriptor instead.
func (*BeneficiaryAccountDetailResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{29}
}

func (x *BeneficiaryAccountDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *BeneficiaryAccountDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BeneficiaryAccountDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BeneficiaryAccountDetailResponse) GetData() *BeneficiaryAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateBeneficiaryAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID               uint64   `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	BeneficiaryAccountID []uint64 `protobuf:"varint,2,rep,packed,name=beneficiaryAccountID,proto3" json:"beneficiaryAccountID,omitempty"`
}

func (x *UpdateBeneficiaryAccountRoleRequest) Reset() {
	*x = UpdateBeneficiaryAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBeneficiaryAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBeneficiaryAccountRoleRequest) ProtoMessage() {}

func (x *UpdateBeneficiaryAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBeneficiaryAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateBeneficiaryAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateBeneficiaryAccountRoleRequest) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *UpdateBeneficiaryAccountRoleRequest) GetBeneficiaryAccountID() []uint64 {
	if x != nil {
		return x.BeneficiaryAccountID
	}
	return nil
}

type UpdateBeneficiaryAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBeneficiaryAccountRoleResponse) Reset() {
	*x = UpdateBeneficiaryAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBeneficiaryAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBeneficiaryAccountRoleResponse) ProtoMessage() {}

func (x *UpdateBeneficiaryAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBeneficiaryAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateBeneficiaryAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateBeneficiaryAccountRoleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *UpdateBeneficiaryAccountRoleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateBeneficiaryAccountRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FileListTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileListTemplateRequest_FormatTemplates `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=beneficiary.account.service.v1.FileListTemplateRequest_FormatTemplates" json:"fileFormat,omitempty"`
}

func (x *FileListTemplateRequest) Reset() {
	*x = FileListTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListTemplateRequest) ProtoMessage() {}

func (x *FileListTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListTemplateRequest.ProtoReflect.Descriptor instead.
func (*FileListTemplateRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{32}
}

func (x *FileListTemplateRequest) GetFileFormat() FileListTemplateRequest_FormatTemplates {
	if x != nil {
		return x.FileFormat
	}
	return FileListTemplateRequest_null
}

type FileListBeneficiaryAccountTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileListBeneficiaryAccountTaskRequest_Formats  `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest_Formats" json:"fileFormat,omitempty"`
	Status     FileListBeneficiaryAccountTaskRequestStatuses  `protobuf:"varint,2,opt,name=status,proto3,enum=beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequestStatuses" json:"status,omitempty"`
	Step       FileListBeneficiaryAccountTaskRequestSteps     `protobuf:"varint,3,opt,name=step,proto3,enum=beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                                          `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                          `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                         `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        FileListBeneficiaryAccountTaskRequestDirection `protobuf:"varint,7,opt,name=dir,proto3,enum=beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequestDirection" json:"dir,omitempty"`
	Filter     string                                         `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
	Query      string                                         `protobuf:"bytes,9,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FileListBeneficiaryAccountTaskRequest) Reset() {
	*x = FileListBeneficiaryAccountTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListBeneficiaryAccountTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListBeneficiaryAccountTaskRequest) ProtoMessage() {}

func (x *FileListBeneficiaryAccountTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListBeneficiaryAccountTaskRequest.ProtoReflect.Descriptor instead.
func (*FileListBeneficiaryAccountTaskRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{33}
}

func (x *FileListBeneficiaryAccountTaskRequest) GetFileFormat() FileListBeneficiaryAccountTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileListBeneficiaryAccountTaskRequest_null
}

func (x *FileListBeneficiaryAccountTaskRequest) GetStatus() FileListBeneficiaryAccountTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return FileListBeneficiaryAccountTaskRequest_AllStatus
}

func (x *FileListBeneficiaryAccountTaskRequest) GetStep() FileListBeneficiaryAccountTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return FileListBeneficiaryAccountTaskRequest_AllStep
}

func (x *FileListBeneficiaryAccountTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileListBeneficiaryAccountTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileListBeneficiaryAccountTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *FileListBeneficiaryAccountTaskRequest) GetDir() FileListBeneficiaryAccountTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return FileListBeneficiaryAccountTaskRequest_DESC
}

func (x *FileListBeneficiaryAccountTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FileListBeneficiaryAccountTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type CekBeneficiaryAccountAvaibilityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID      string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccountNumber  string `protobuf:"bytes,2,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	MasterBankName string `protobuf:"bytes,3,opt,name=masterBankName,proto3" json:"masterBankName,omitempty"`
}

func (x *CekBeneficiaryAccountAvaibilityReq) Reset() {
	*x = CekBeneficiaryAccountAvaibilityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekBeneficiaryAccountAvaibilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekBeneficiaryAccountAvaibilityReq) ProtoMessage() {}

func (x *CekBeneficiaryAccountAvaibilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekBeneficiaryAccountAvaibilityReq.ProtoReflect.Descriptor instead.
func (*CekBeneficiaryAccountAvaibilityReq) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{34}
}

func (x *CekBeneficiaryAccountAvaibilityReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *CekBeneficiaryAccountAvaibilityReq) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *CekBeneficiaryAccountAvaibilityReq) GetMasterBankName() string {
	if x != nil {
		return x.MasterBankName
	}
	return ""
}

type CekBeneficiaryAccountAvaibilityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available bool   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CekBeneficiaryAccountAvaibilityRes) Reset() {
	*x = CekBeneficiaryAccountAvaibilityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekBeneficiaryAccountAvaibilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekBeneficiaryAccountAvaibilityRes) ProtoMessage() {}

func (x *CekBeneficiaryAccountAvaibilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekBeneficiaryAccountAvaibilityRes.ProtoReflect.Descriptor instead.
func (*CekBeneficiaryAccountAvaibilityRes) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{35}
}

func (x *CekBeneficiaryAccountAvaibilityRes) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *CekBeneficiaryAccountAvaibilityRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListBankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryBank *BeneficiaryBank     `protobuf:"bytes,1,opt,name=beneficiaryBank,proto3" json:"beneficiaryBank,omitempty"`
	Limit           int32                `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page            int32                `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort            string               `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir             ListBankReqDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=beneficiary.account.service.v1.ListBankReqDirection" json:"dir,omitempty"`
	Filter          string               `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query           string               `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	BankName        string               `protobuf:"bytes,8,opt,name=bankName,proto3" json:"bankName,omitempty"`
}

func (x *ListBankReq) Reset() {
	*x = ListBankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBankReq) ProtoMessage() {}

func (x *ListBankReq) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBankReq.ProtoReflect.Descriptor instead.
func (*ListBankReq) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{36}
}

func (x *ListBankReq) GetBeneficiaryBank() *BeneficiaryBank {
	if x != nil {
		return x.BeneficiaryBank
	}
	return nil
}

func (x *ListBankReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBankReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBankReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListBankReq) GetDir() ListBankReqDirection {
	if x != nil {
		return x.Dir
	}
	return ListBankReq_DESC
}

func (x *ListBankReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListBankReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListBankReq) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type ListBankRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*BeneficiaryBank  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBankRes) Reset() {
	*x = ListBankRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBankRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBankRes) ProtoMessage() {}

func (x *ListBankRes) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBankRes.ProtoReflect.Descriptor instead.
func (*ListBankRes) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{37}
}

func (x *ListBankRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListBankRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListBankRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListBankRes) GetData() []*BeneficiaryBank {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListBankRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type BankDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryBankID uint64 `protobuf:"varint,1,opt,name=beneficiaryBankID,proto3" json:"beneficiaryBankID,omitempty"`
}

func (x *BankDetailRequest) Reset() {
	*x = BankDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankDetailRequest) ProtoMessage() {}

func (x *BankDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankDetailRequest.ProtoReflect.Descriptor instead.
func (*BankDetailRequest) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{38}
}

func (x *BankDetailRequest) GetBeneficiaryBankID() uint64 {
	if x != nil {
		return x.BeneficiaryBankID
	}
	return 0
}

type BankDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool             `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32           `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BeneficiaryBank `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BankDetailResponse) Reset() {
	*x = BankDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beneficiary_account_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankDetailResponse) ProtoMessage() {}

func (x *BankDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beneficiary_account_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankDetailResponse.ProtoReflect.Descriptor instead.
func (*BankDetailResponse) Descriptor() ([]byte, []int) {
	return file_beneficiary_account_payload_proto_rawDescGZIP(), []int{39}
}

func (x *BankDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *BankDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BankDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BankDetailResponse) GetData() *BeneficiaryBank {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_beneficiary_account_payload_proto protoreflect.FileDescriptor

var file_beneficiary_account_payload_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x21, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f,
	0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x20, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x4b, 0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x4a, 0x57, 0x54,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x8d, 0x0b, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x62, 0x0a, 0x12, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x12, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27,
	0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32,
	0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20,
	0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x59, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79,
	0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
	0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20,
	0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a,
	0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a,
	0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44,
	0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27,
	0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31,
	0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e,
	0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01,
	0x22, 0x3c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80,
	0x02, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a, 0x23, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x22, 0xeb, 0x06, 0x0a, 0x17, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x32, 0x0a,
	0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x63,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e,
	0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc6, 0x01, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x13, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x13, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xae, 0x01, 0x0a,
	0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x03,
	0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xee, 0x06, 0x0a,
	0x1a, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x63, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a,
	0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64,
	0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf4, 0x06,
	0x0a, 0x20, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x69, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x63,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61,
	0x6e, 0x6b, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xac, 0x02, 0x0a, 0x16, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x6a, 0x0a, 0x12, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x6c, 0x0a, 0x13, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x8a, 0x01, 0x0a, 0x2c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xeb, 0x0c, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x5b, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x5d, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03,
	0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41,
	0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41,
	0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20,
	0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45,
	0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d,
	0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02,
	0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f,
	0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c,
	0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d,
	0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c,
	0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x5b,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x3e, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x22, 0x88, 0x02, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x11,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x1f, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xae, 0x01, 0x0a,
	0x20, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a,
	0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x14, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x22, 0x6a, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a,
	0x17, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x22, 0x37, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x78, 0x6c, 0x73, 0x78, 0x10, 0x03, 0x22, 0x9a, 0x0e, 0x0a, 0x25, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x66, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5f, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x61, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
	0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20,
	0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65,
	0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e,
	0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d,
	0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49,
	0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a,
	0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b,
	0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42,
	0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31,
	0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a,
	0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b,
	0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20,
	0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d,
	0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20,
	0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a,
	0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76,
	0x10, 0x03, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22,
	0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53,
	0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x90, 0x01, 0x0a, 0x22, 0x43, 0x65, 0x6b, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x22, 0x43, 0x65,
	0x6b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd0, 0x0a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x59, 0x0a, 0x0f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b,
	0x52, 0x0f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e,
	0x6b, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65,
	0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41,
	0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79,
	0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x47, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92,
	0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e,
	0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e,
	0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45,
	0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e,
	0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92,
	0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52,
	0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b,
	0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65,
	0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49,
	0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x52, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x42, 0x61,
	0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x42,
	0x61, 0x6e, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beneficiary_account_payload_proto_rawDescOnce sync.Once
	file_beneficiary_account_payload_proto_rawDescData = file_beneficiary_account_payload_proto_rawDesc
)

func file_beneficiary_account_payload_proto_rawDescGZIP() []byte {
	file_beneficiary_account_payload_proto_rawDescOnce.Do(func() {
		file_beneficiary_account_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_beneficiary_account_payload_proto_rawDescData)
	})
	return file_beneficiary_account_payload_proto_rawDescData
}

var file_beneficiary_account_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_beneficiary_account_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_beneficiary_account_payload_proto_goTypes = []interface{}{
	(ListBeneficiaryAccountRequestDirection)(0),          // 0: beneficiary.account.service.v1.ListBeneficiaryAccountRequest.direction
	(ListBeneficiaryAccountTaskRequestStatuses)(0),       // 1: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.statuses
	(ListBeneficiaryAccountTaskRequestSteps)(0),          // 2: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.steps
	(ListBeneficiaryAccountTaskRequestDirection)(0),      // 3: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.direction
	(FileListTemplateRequest_FormatTemplates)(0),         // 4: beneficiary.account.service.v1.FileListTemplateRequest.FormatTemplates
	(FileListBeneficiaryAccountTaskRequest_Formats)(0),   // 5: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.Formats
	(FileListBeneficiaryAccountTaskRequestStatuses)(0),   // 6: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.statuses
	(FileListBeneficiaryAccountTaskRequestSteps)(0),      // 7: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.steps
	(FileListBeneficiaryAccountTaskRequestDirection)(0),  // 8: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.direction
	(ListBankReqDirection)(0),                            // 9: beneficiary.account.service.v1.ListBankReq.direction
	(*LoginRequest)(nil),                                 // 10: beneficiary.account.service.v1.LoginRequest
	(*LoginResponse)(nil),                                // 11: beneficiary.account.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                          // 12: beneficiary.account.service.v1.HealthCheckResponse
	(*Empty)(nil),                                        // 13: beneficiary.account.service.v1.Empty
	(*InvalidKeyError)(nil),                              // 14: beneficiary.account.service.v1.InvalidKeyError
	(*JWTTokenResponse)(nil),                             // 15: beneficiary.account.service.v1.JWTTokenResponse
	(*ListRequest)(nil),                                  // 16: beneficiary.account.service.v1.ListRequest
	(*ListBeneficiaryAccountRequest)(nil),                // 17: beneficiary.account.service.v1.ListBeneficiaryAccountRequest
	(*Sort)(nil),                                         // 18: beneficiary.account.service.v1.Sort
	(*ListBeneficiaryAccountResponse)(nil),               // 19: beneficiary.account.service.v1.ListBeneficiaryAccountResponse
	(*ListBeneficiaryAccountActiveResponse)(nil),         // 20: beneficiary.account.service.v1.ListBeneficiaryAccountActiveResponse
	(*CreateBeneficiaryAccountRequest)(nil),              // 21: beneficiary.account.service.v1.CreateBeneficiaryAccountRequest
	(*CreateBeneficiaryAccountTaskRequest)(nil),          // 22: beneficiary.account.service.v1.CreateBeneficiaryAccountTaskRequest
	(*BeneficiaryAccountWrite)(nil),                      // 23: beneficiary.account.service.v1.BeneficiaryAccountWrite
	(*CreateBeneficiaryAccountTaskBulkRequest)(nil),      // 24: beneficiary.account.service.v1.CreateBeneficiaryAccountTaskBulkRequest
	(*AccountAlias)(nil),                                 // 25: beneficiary.account.service.v1.AccountAlias
	(*CreateBeneficiaryAccountResponse)(nil),             // 26: beneficiary.account.service.v1.CreateBeneficiaryAccountResponse
	(*Task)(nil),                                         // 27: beneficiary.account.service.v1.Task
	(*BeneficiaryAccountTaskData)(nil),                   // 28: beneficiary.account.service.v1.BeneficiaryAccountTaskData
	(*BeneficiaryAccountTaskDataString)(nil),             // 29: beneficiary.account.service.v1.BeneficiaryAccountTaskDataString
	(*BeneficiaryAccountTask)(nil),                       // 30: beneficiary.account.service.v1.BeneficiaryAccountTask
	(*CreateBeneficiaryAccountTaskResponse)(nil),         // 31: beneficiary.account.service.v1.CreateBeneficiaryAccountTaskResponse
	(*CreateBeneficiaryAccountTaskMultipleResponse)(nil), // 32: beneficiary.account.service.v1.CreateBeneficiaryAccountTaskMultipleResponse
	(*ListBeneficiaryAccountTaskRequest)(nil),            // 33: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest
	(*PaginationResponse)(nil),                           // 34: beneficiary.account.service.v1.PaginationResponse
	(*GetBeneficiaryAccountTaskByIDRequest)(nil),         // 35: beneficiary.account.service.v1.GetBeneficiaryAccountTaskByIDRequest
	(*ListBeneficiaryAccountTaskResponse)(nil),           // 36: beneficiary.account.service.v1.ListBeneficiaryAccountTaskResponse
	(*ErrorBodyResponse)(nil),                            // 37: beneficiary.account.service.v1.errorBodyResponse
	(*BeneficiaryAccountDetailRequest)(nil),              // 38: beneficiary.account.service.v1.BeneficiaryAccountDetailRequest
	(*BeneficiaryAccountDetailResponse)(nil),             // 39: beneficiary.account.service.v1.BeneficiaryAccountDetailResponse
	(*UpdateBeneficiaryAccountRoleRequest)(nil),          // 40: beneficiary.account.service.v1.UpdateBeneficiaryAccountRoleRequest
	(*UpdateBeneficiaryAccountRoleResponse)(nil),         // 41: beneficiary.account.service.v1.UpdateBeneficiaryAccountRoleResponse
	(*FileListTemplateRequest)(nil),                      // 42: beneficiary.account.service.v1.FileListTemplateRequest
	(*FileListBeneficiaryAccountTaskRequest)(nil),        // 43: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest
	(*CekBeneficiaryAccountAvaibilityReq)(nil),           // 44: beneficiary.account.service.v1.CekBeneficiaryAccountAvaibilityReq
	(*CekBeneficiaryAccountAvaibilityRes)(nil),           // 45: beneficiary.account.service.v1.CekBeneficiaryAccountAvaibilityRes
	(*ListBankReq)(nil),                                  // 46: beneficiary.account.service.v1.ListBankReq
	(*ListBankRes)(nil),                                  // 47: beneficiary.account.service.v1.ListBankRes
	(*BankDetailRequest)(nil),                            // 48: beneficiary.account.service.v1.BankDetailRequest
	(*BankDetailResponse)(nil),                           // 49: beneficiary.account.service.v1.BankDetailResponse
	(*BeneficiaryAccount)(nil),                           // 50: beneficiary.account.service.v1.BeneficiaryAccount
	(*timestamppb.Timestamp)(nil),                        // 51: google.protobuf.Timestamp
	(*BeneficiaryBank)(nil),                              // 52: beneficiary.account.service.v1.BeneficiaryBank
}
var file_beneficiary_account_payload_proto_depIdxs = []int32{
	50, // 0: beneficiary.account.service.v1.ListBeneficiaryAccountRequest.beneficiaryAccount:type_name -> beneficiary.account.service.v1.BeneficiaryAccount
	0,  // 1: beneficiary.account.service.v1.ListBeneficiaryAccountRequest.dir:type_name -> beneficiary.account.service.v1.ListBeneficiaryAccountRequest.direction
	50, // 2: beneficiary.account.service.v1.ListBeneficiaryAccountResponse.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccount
	34, // 3: beneficiary.account.service.v1.ListBeneficiaryAccountResponse.pagination:type_name -> beneficiary.account.service.v1.PaginationResponse
	50, // 4: beneficiary.account.service.v1.ListBeneficiaryAccountActiveResponse.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccount
	50, // 5: beneficiary.account.service.v1.CreateBeneficiaryAccountRequest.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccount
	23, // 6: beneficiary.account.service.v1.CreateBeneficiaryAccountTaskRequest.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccountWrite
	51, // 7: beneficiary.account.service.v1.BeneficiaryAccountWrite.createdAt:type_name -> google.protobuf.Timestamp
	51, // 8: beneficiary.account.service.v1.BeneficiaryAccountWrite.updatedAt:type_name -> google.protobuf.Timestamp
	51, // 9: beneficiary.account.service.v1.BeneficiaryAccountWrite.deletedAt:type_name -> google.protobuf.Timestamp
	23, // 10: beneficiary.account.service.v1.CreateBeneficiaryAccountTaskBulkRequest.beneficiaryAccounts:type_name -> beneficiary.account.service.v1.BeneficiaryAccountWrite
	50, // 11: beneficiary.account.service.v1.CreateBeneficiaryAccountResponse.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccount
	51, // 12: beneficiary.account.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	51, // 13: beneficiary.account.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	51, // 14: beneficiary.account.service.v1.BeneficiaryAccountTaskData.createdAt:type_name -> google.protobuf.Timestamp
	51, // 15: beneficiary.account.service.v1.BeneficiaryAccountTaskData.updatedAt:type_name -> google.protobuf.Timestamp
	51, // 16: beneficiary.account.service.v1.BeneficiaryAccountTaskData.deletedAt:type_name -> google.protobuf.Timestamp
	51, // 17: beneficiary.account.service.v1.BeneficiaryAccountTaskDataString.createdAt:type_name -> google.protobuf.Timestamp
	51, // 18: beneficiary.account.service.v1.BeneficiaryAccountTaskDataString.updatedAt:type_name -> google.protobuf.Timestamp
	51, // 19: beneficiary.account.service.v1.BeneficiaryAccountTaskDataString.deletedAt:type_name -> google.protobuf.Timestamp
	28, // 20: beneficiary.account.service.v1.BeneficiaryAccountTask.beneficiaryAccount:type_name -> beneficiary.account.service.v1.BeneficiaryAccountTaskData
	27, // 21: beneficiary.account.service.v1.BeneficiaryAccountTask.task:type_name -> beneficiary.account.service.v1.Task
	28, // 22: beneficiary.account.service.v1.BeneficiaryAccountTask.beneficiaryAccounts:type_name -> beneficiary.account.service.v1.BeneficiaryAccountTaskData
	1,  // 23: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.status:type_name -> beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.statuses
	2,  // 24: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.step:type_name -> beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.steps
	3,  // 25: beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.dir:type_name -> beneficiary.account.service.v1.ListBeneficiaryAccountTaskRequest.direction
	30, // 26: beneficiary.account.service.v1.ListBeneficiaryAccountTaskResponse.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccountTask
	34, // 27: beneficiary.account.service.v1.ListBeneficiaryAccountTaskResponse.pagination:type_name -> beneficiary.account.service.v1.PaginationResponse
	50, // 28: beneficiary.account.service.v1.BeneficiaryAccountDetailResponse.data:type_name -> beneficiary.account.service.v1.BeneficiaryAccount
	4,  // 29: beneficiary.account.service.v1.FileListTemplateRequest.fileFormat:type_name -> beneficiary.account.service.v1.FileListTemplateRequest.FormatTemplates
	5,  // 30: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.fileFormat:type_name -> beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.Formats
	6,  // 31: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.status:type_name -> beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.statuses
	7,  // 32: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.step:type_name -> beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.steps
	8,  // 33: beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.dir:type_name -> beneficiary.account.service.v1.FileListBeneficiaryAccountTaskRequest.direction
	52, // 34: beneficiary.account.service.v1.ListBankReq.beneficiaryBank:type_name -> beneficiary.account.service.v1.BeneficiaryBank
	9,  // 35: beneficiary.account.service.v1.ListBankReq.dir:type_name -> beneficiary.account.service.v1.ListBankReq.direction
	52, // 36: beneficiary.account.service.v1.ListBankRes.data:type_name -> beneficiary.account.service.v1.BeneficiaryBank
	34, // 37: beneficiary.account.service.v1.ListBankRes.pagination:type_name -> beneficiary.account.service.v1.PaginationResponse
	52, // 38: beneficiary.account.service.v1.BankDetailResponse.data:type_name -> beneficiary.account.service.v1.BeneficiaryBank
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_beneficiary_account_payload_proto_init() }
func file_beneficiary_account_payload_proto_init() {
	if File_beneficiary_account_payload_proto != nil {
		return
	}
	file_beneficiary_account_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_beneficiary_account_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeneficiaryAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeneficiaryAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeneficiaryAccountActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryAccountTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAccountWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryAccountTaskBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAccountTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAccountTaskDataString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAccountTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryAccountTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryAccountTaskMultipleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeneficiaryAccountTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBeneficiaryAccountTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeneficiaryAccountTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAccountDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAccountDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBeneficiaryAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBeneficiaryAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListBeneficiaryAccountTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekBeneficiaryAccountAvaibilityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekBeneficiaryAccountAvaibilityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBankRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beneficiary_account_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beneficiary_account_payload_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beneficiary_account_payload_proto_goTypes,
		DependencyIndexes: file_beneficiary_account_payload_proto_depIdxs,
		EnumInfos:         file_beneficiary_account_payload_proto_enumTypes,
		MessageInfos:      file_beneficiary_account_payload_proto_msgTypes,
	}.Build()
	File_beneficiary_account_payload_proto = out.File
	file_beneficiary_account_payload_proto_rawDesc = nil
	file_beneficiary_account_payload_proto_goTypes = nil
	file_beneficiary_account_payload_proto_depIdxs = nil
}
