// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: announcement.payload_ev.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAnnouncementDataRequestEVDirection int32

const (
	ListAnnouncementDataRequestEV_DESC ListAnnouncementDataRequestEVDirection = 0
	ListAnnouncementDataRequestEV_ASC  ListAnnouncementDataRequestEVDirection = 1
)

// Enum value maps for ListAnnouncementDataRequestEVDirection.
var (
	ListAnnouncementDataRequestEVDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAnnouncementDataRequestEVDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAnnouncementDataRequestEVDirection) Enum() *ListAnnouncementDataRequestEVDirection {
	p := new(ListAnnouncementDataRequestEVDirection)
	*p = x
	return p
}

func (x ListAnnouncementDataRequestEVDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAnnouncementDataRequestEVDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_announcement_payload_ev_proto_enumTypes[0].Descriptor()
}

func (ListAnnouncementDataRequestEVDirection) Type() protoreflect.EnumType {
	return &file_announcement_payload_ev_proto_enumTypes[0]
}

func (x ListAnnouncementDataRequestEVDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAnnouncementDataRequestEVDirection.Descriptor instead.
func (ListAnnouncementDataRequestEVDirection) EnumDescriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{2, 0}
}

type AnnouncementEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnouncementID    string                   `protobuf:"bytes,1,opt,name=announcementID,proto3" json:"announcementID,omitempty"`
	EventTypeID       string                   `protobuf:"bytes,2,opt,name=eventTypeID,proto3" json:"eventTypeID,omitempty"`
	CompanyID         uint64                   `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Description       string                   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Code              string                   `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	Title             string                   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Content           string                   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	StatusLevel       string                   `protobuf:"bytes,8,opt,name=statusLevel,proto3" json:"statusLevel,omitempty"`
	IsAutoClose       bool                     `protobuf:"varint,9,opt,name=isAutoClose,proto3" json:"isAutoClose,omitempty"`
	IsEnabled         bool                     `protobuf:"varint,10,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"`
	StartFrom         *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=startFrom,proto3" json:"startFrom,omitempty"`
	EndTo             *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=endTo,proto3" json:"endTo,omitempty"`
	CreatedByID       string                   `protobuf:"bytes,13,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID       string                   `protobuf:"bytes,14,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	DeletedByID       string                   `protobuf:"bytes,15,opt,name=deletedByID,proto3" json:"deletedByID,omitempty"`
	CreatedAt         *timestamppb.Timestamp   `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         *timestamppb.Timestamp   `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt         *timestamppb.Timestamp   `protobuf:"bytes,103,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	EventType         *AnnouncementEventTypeEV `protobuf:"bytes,51,opt,name=EventType,proto3" json:"EventType,omitempty"`
	IsWaitingApproval bool                     `protobuf:"varint,16,opt,name=isWaitingApproval,proto3" json:"isWaitingApproval,omitempty"`
}

func (x *AnnouncementEV) Reset() {
	*x = AnnouncementEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementEV) ProtoMessage() {}

func (x *AnnouncementEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementEV.ProtoReflect.Descriptor instead.
func (*AnnouncementEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{0}
}

func (x *AnnouncementEV) GetAnnouncementID() string {
	if x != nil {
		return x.AnnouncementID
	}
	return ""
}

func (x *AnnouncementEV) GetEventTypeID() string {
	if x != nil {
		return x.EventTypeID
	}
	return ""
}

func (x *AnnouncementEV) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AnnouncementEV) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AnnouncementEV) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AnnouncementEV) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AnnouncementEV) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AnnouncementEV) GetStatusLevel() string {
	if x != nil {
		return x.StatusLevel
	}
	return ""
}

func (x *AnnouncementEV) GetIsAutoClose() bool {
	if x != nil {
		return x.IsAutoClose
	}
	return false
}

func (x *AnnouncementEV) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *AnnouncementEV) GetStartFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StartFrom
	}
	return nil
}

func (x *AnnouncementEV) GetEndTo() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTo
	}
	return nil
}

func (x *AnnouncementEV) GetCreatedByID() string {
	if x != nil {
		return x.CreatedByID
	}
	return ""
}

func (x *AnnouncementEV) GetUpdatedByID() string {
	if x != nil {
		return x.UpdatedByID
	}
	return ""
}

func (x *AnnouncementEV) GetDeletedByID() string {
	if x != nil {
		return x.DeletedByID
	}
	return ""
}

func (x *AnnouncementEV) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AnnouncementEV) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AnnouncementEV) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *AnnouncementEV) GetEventType() *AnnouncementEventTypeEV {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *AnnouncementEV) GetIsWaitingApproval() bool {
	if x != nil {
		return x.IsWaitingApproval
	}
	return false
}

type AnnouncementEventTypeEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypeID string                 `protobuf:"bytes,1,opt,name=eventTypeID,proto3" json:"eventTypeID,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *AnnouncementEventTypeEV) Reset() {
	*x = AnnouncementEventTypeEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementEventTypeEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementEventTypeEV) ProtoMessage() {}

func (x *AnnouncementEventTypeEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementEventTypeEV.ProtoReflect.Descriptor instead.
func (*AnnouncementEventTypeEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{1}
}

func (x *AnnouncementEventTypeEV) GetEventTypeID() string {
	if x != nil {
		return x.EventTypeID
	}
	return ""
}

func (x *AnnouncementEventTypeEV) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnnouncementEventTypeEV) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AnnouncementEventTypeEV) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AnnouncementEventTypeEV) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ListAnnouncementDataRequestEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcement *AnnouncementEV                        `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
	IsActiveOnly bool                                   `protobuf:"varint,2,opt,name=isActiveOnly,proto3" json:"isActiveOnly,omitempty"`
	Limit        int32                                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32                                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort         string                                 `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir          ListAnnouncementDataRequestEVDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=announcement.service.v1.ListAnnouncementDataRequestEVDirection" json:"dir,omitempty"`
	Filter       string                                 `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query        string                                 `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListAnnouncementDataRequestEV) Reset() {
	*x = ListAnnouncementDataRequestEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAnnouncementDataRequestEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnouncementDataRequestEV) ProtoMessage() {}

func (x *ListAnnouncementDataRequestEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnouncementDataRequestEV.ProtoReflect.Descriptor instead.
func (*ListAnnouncementDataRequestEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{2}
}

func (x *ListAnnouncementDataRequestEV) GetAnnouncement() *AnnouncementEV {
	if x != nil {
		return x.Announcement
	}
	return nil
}

func (x *ListAnnouncementDataRequestEV) GetIsActiveOnly() bool {
	if x != nil {
		return x.IsActiveOnly
	}
	return false
}

func (x *ListAnnouncementDataRequestEV) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAnnouncementDataRequestEV) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAnnouncementDataRequestEV) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAnnouncementDataRequestEV) GetDir() ListAnnouncementDataRequestEVDirection {
	if x != nil {
		return x.Dir
	}
	return ListAnnouncementDataRequestEV_DESC
}

func (x *ListAnnouncementDataRequestEV) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAnnouncementDataRequestEV) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListEventTypeRequestEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcement *AnnouncementEventTypeEV `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
}

func (x *ListEventTypeRequestEV) Reset() {
	*x = ListEventTypeRequestEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventTypeRequestEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTypeRequestEV) ProtoMessage() {}

func (x *ListEventTypeRequestEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTypeRequestEV.ProtoReflect.Descriptor instead.
func (*ListEventTypeRequestEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{3}
}

func (x *ListEventTypeRequestEV) GetAnnouncement() *AnnouncementEventTypeEV {
	if x != nil {
		return x.Announcement
	}
	return nil
}

type AnnouncementTaskResponseEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID           string                 `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type             string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status           string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step             string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID        string                 `protobuf:"bytes,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	IsValidFeatureID bool                   `protobuf:"varint,6,opt,name=isValidFeatureID,proto3" json:"isValidFeatureID,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *AnnouncementTaskResponseEV) Reset() {
	*x = AnnouncementTaskResponseEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementTaskResponseEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementTaskResponseEV) ProtoMessage() {}

func (x *AnnouncementTaskResponseEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementTaskResponseEV.ProtoReflect.Descriptor instead.
func (*AnnouncementTaskResponseEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{4}
}

func (x *AnnouncementTaskResponseEV) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

func (x *AnnouncementTaskResponseEV) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnnouncementTaskResponseEV) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AnnouncementTaskResponseEV) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *AnnouncementTaskResponseEV) GetFeatureID() string {
	if x != nil {
		return x.FeatureID
	}
	return ""
}

func (x *AnnouncementTaskResponseEV) GetIsValidFeatureID() bool {
	if x != nil {
		return x.IsValidFeatureID
	}
	return false
}

func (x *AnnouncementTaskResponseEV) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AnnouncementTaskResponseEV) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AnnouncementWithTaskEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcement *AnnouncementEV             `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
	Task         *AnnouncementTaskResponseEV `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *AnnouncementWithTaskEV) Reset() {
	*x = AnnouncementWithTaskEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementWithTaskEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementWithTaskEV) ProtoMessage() {}

func (x *AnnouncementWithTaskEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementWithTaskEV.ProtoReflect.Descriptor instead.
func (*AnnouncementWithTaskEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{5}
}

func (x *AnnouncementWithTaskEV) GetAnnouncement() *AnnouncementEV {
	if x != nil {
		return x.Announcement
	}
	return nil
}

func (x *AnnouncementWithTaskEV) GetTask() *AnnouncementTaskResponseEV {
	if x != nil {
		return x.Task
	}
	return nil
}

type ListAnnouncementResponseEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*AnnouncementWithTaskEV `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse       `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAnnouncementResponseEV) Reset() {
	*x = ListAnnouncementResponseEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAnnouncementResponseEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnouncementResponseEV) ProtoMessage() {}

func (x *ListAnnouncementResponseEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnouncementResponseEV.ProtoReflect.Descriptor instead.
func (*ListAnnouncementResponseEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{6}
}

func (x *ListAnnouncementResponseEV) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAnnouncementResponseEV) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAnnouncementResponseEV) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAnnouncementResponseEV) GetData() []*AnnouncementWithTaskEV {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAnnouncementResponseEV) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListAnnouncementActiveResponseEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*AnnouncementEV   `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAnnouncementActiveResponseEV) Reset() {
	*x = ListAnnouncementActiveResponseEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAnnouncementActiveResponseEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnouncementActiveResponseEV) ProtoMessage() {}

func (x *ListAnnouncementActiveResponseEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnouncementActiveResponseEV.ProtoReflect.Descriptor instead.
func (*ListAnnouncementActiveResponseEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{7}
}

func (x *ListAnnouncementActiveResponseEV) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAnnouncementActiveResponseEV) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAnnouncementActiveResponseEV) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAnnouncementActiveResponseEV) GetData() []*AnnouncementEV {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAnnouncementActiveResponseEV) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateAnnouncementTaskRequestEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *AnnouncementEV `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  string          `protobuf:"bytes,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool            `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateAnnouncementTaskRequestEV) Reset() {
	*x = CreateAnnouncementTaskRequestEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnnouncementTaskRequestEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnnouncementTaskRequestEV) ProtoMessage() {}

func (x *CreateAnnouncementTaskRequestEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnnouncementTaskRequestEV.ProtoReflect.Descriptor instead.
func (*CreateAnnouncementTaskRequestEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{8}
}

func (x *CreateAnnouncementTaskRequestEV) GetData() *AnnouncementEV {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAnnouncementTaskRequestEV) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

func (x *CreateAnnouncementTaskRequestEV) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type GetByTaskIDEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID string `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetByTaskIDEV) Reset() {
	*x = GetByTaskIDEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByTaskIDEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByTaskIDEV) ProtoMessage() {}

func (x *GetByTaskIDEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByTaskIDEV.ProtoReflect.Descriptor instead.
func (*GetByTaskIDEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{9}
}

func (x *GetByTaskIDEV) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

type CreateAnnouncementResponseEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool            `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *AnnouncementEV `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateAnnouncementResponseEV) Reset() {
	*x = CreateAnnouncementResponseEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnnouncementResponseEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnnouncementResponseEV) ProtoMessage() {}

func (x *CreateAnnouncementResponseEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnnouncementResponseEV.ProtoReflect.Descriptor instead.
func (*CreateAnnouncementResponseEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAnnouncementResponseEV) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateAnnouncementResponseEV) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAnnouncementResponseEV) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAnnouncementResponseEV) GetData() *AnnouncementEV {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListEventTypeResponseEV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*AnnouncementEventTypeEV `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListEventTypeResponseEV) Reset() {
	*x = ListEventTypeResponseEV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_announcement_payload_ev_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventTypeResponseEV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTypeResponseEV) ProtoMessage() {}

func (x *ListEventTypeResponseEV) ProtoReflect() protoreflect.Message {
	mi := &file_announcement_payload_ev_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTypeResponseEV.ProtoReflect.Descriptor instead.
func (*ListEventTypeResponseEV) Descriptor() ([]byte, []int) {
	return file_announcement_payload_ev_proto_rawDescGZIP(), []int{11}
}

func (x *ListEventTypeResponseEV) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListEventTypeResponseEV) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListEventTypeResponseEV) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListEventTypeResponseEV) GetData() []*AnnouncementEventTypeEV {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_announcement_payload_ev_proto protoreflect.FileDescriptor

var file_announcement_payload_ev_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x17, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x06, 0x0a, 0x0e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x56, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41,
	0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x30, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x56, 0x52, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x69, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x22, 0xfd, 0x01, 0x0a, 0x17, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x56,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xe7, 0x0a, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x56, 0x12, 0x4b, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x56, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f,
	0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e,
	0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f,
	0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x52, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x56, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03,
	0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41,
	0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41,
	0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20,
	0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45,
	0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d,
	0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02,
	0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f,
	0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c,
	0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d,
	0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c,
	0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x1e,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x6e,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x56, 0x12, 0x54, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x56,
	0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xbc,
	0x02, 0x0a, 0x1a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x56, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12,
	0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xae, 0x01,
	0x0a, 0x16, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x56, 0x12, 0x4b, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x56, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x56, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xf2,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x56, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x56,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x56, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x56, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x03, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x56, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x56, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x9c, 0x02, 0x92, 0x41, 0x98, 0x02,
	0x32, 0x95, 0x02, 0x7b, 0x22, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x3a, 0x74, 0x72,
	0x75, 0x65, 0x2c, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x7b, 0x22, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x2c, 0x22, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x3a, 0x22, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x2c, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x3a,
	0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x32, 0x32, 0x2d, 0x30,
	0x32, 0x2d, 0x30, 0x34, 0x54, 0x31, 0x35, 0x3a, 0x34, 0x31, 0x3a, 0x35, 0x34, 0x2e, 0x39, 0x37,
	0x34, 0x5a, 0x22, 0x2c, 0x22, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x32,
	0x32, 0x2d, 0x30, 0x32, 0x2d, 0x30, 0x34, 0x54, 0x31, 0x35, 0x3a, 0x34, 0x31, 0x3a, 0x35, 0x34,
	0x2e, 0x39, 0x37, 0x34, 0x5a, 0x22, 0x7d, 0x7d, 0x22, 0x27, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x45, 0x56, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x56, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x56, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x56, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x56, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_announcement_payload_ev_proto_rawDescOnce sync.Once
	file_announcement_payload_ev_proto_rawDescData = file_announcement_payload_ev_proto_rawDesc
)

func file_announcement_payload_ev_proto_rawDescGZIP() []byte {
	file_announcement_payload_ev_proto_rawDescOnce.Do(func() {
		file_announcement_payload_ev_proto_rawDescData = protoimpl.X.CompressGZIP(file_announcement_payload_ev_proto_rawDescData)
	})
	return file_announcement_payload_ev_proto_rawDescData
}

var file_announcement_payload_ev_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_announcement_payload_ev_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_announcement_payload_ev_proto_goTypes = []interface{}{
	(ListAnnouncementDataRequestEVDirection)(0), // 0: announcement.service.v1.ListAnnouncementDataRequestEV.direction
	(*AnnouncementEV)(nil),                      // 1: announcement.service.v1.AnnouncementEV
	(*AnnouncementEventTypeEV)(nil),             // 2: announcement.service.v1.AnnouncementEventTypeEV
	(*ListAnnouncementDataRequestEV)(nil),       // 3: announcement.service.v1.ListAnnouncementDataRequestEV
	(*ListEventTypeRequestEV)(nil),              // 4: announcement.service.v1.ListEventTypeRequestEV
	(*AnnouncementTaskResponseEV)(nil),          // 5: announcement.service.v1.AnnouncementTaskResponseEV
	(*AnnouncementWithTaskEV)(nil),              // 6: announcement.service.v1.AnnouncementWithTaskEV
	(*ListAnnouncementResponseEV)(nil),          // 7: announcement.service.v1.ListAnnouncementResponseEV
	(*ListAnnouncementActiveResponseEV)(nil),    // 8: announcement.service.v1.ListAnnouncementActiveResponseEV
	(*CreateAnnouncementTaskRequestEV)(nil),     // 9: announcement.service.v1.CreateAnnouncementTaskRequestEV
	(*GetByTaskIDEV)(nil),                       // 10: announcement.service.v1.GetByTaskIDEV
	(*CreateAnnouncementResponseEV)(nil),        // 11: announcement.service.v1.CreateAnnouncementResponseEV
	(*ListEventTypeResponseEV)(nil),             // 12: announcement.service.v1.ListEventTypeResponseEV
	(*timestamppb.Timestamp)(nil),               // 13: google.protobuf.Timestamp
	(*PaginationResponse)(nil),                  // 14: announcement.service.v1.PaginationResponse
}
var file_announcement_payload_ev_proto_depIdxs = []int32{
	13, // 0: announcement.service.v1.AnnouncementEV.startFrom:type_name -> google.protobuf.Timestamp
	13, // 1: announcement.service.v1.AnnouncementEV.endTo:type_name -> google.protobuf.Timestamp
	13, // 2: announcement.service.v1.AnnouncementEV.createdAt:type_name -> google.protobuf.Timestamp
	13, // 3: announcement.service.v1.AnnouncementEV.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: announcement.service.v1.AnnouncementEV.deletedAt:type_name -> google.protobuf.Timestamp
	2,  // 5: announcement.service.v1.AnnouncementEV.EventType:type_name -> announcement.service.v1.AnnouncementEventTypeEV
	13, // 6: announcement.service.v1.AnnouncementEventTypeEV.createdAt:type_name -> google.protobuf.Timestamp
	13, // 7: announcement.service.v1.AnnouncementEventTypeEV.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 8: announcement.service.v1.AnnouncementEventTypeEV.deletedAt:type_name -> google.protobuf.Timestamp
	1,  // 9: announcement.service.v1.ListAnnouncementDataRequestEV.announcement:type_name -> announcement.service.v1.AnnouncementEV
	0,  // 10: announcement.service.v1.ListAnnouncementDataRequestEV.dir:type_name -> announcement.service.v1.ListAnnouncementDataRequestEV.direction
	2,  // 11: announcement.service.v1.ListEventTypeRequestEV.announcement:type_name -> announcement.service.v1.AnnouncementEventTypeEV
	13, // 12: announcement.service.v1.AnnouncementTaskResponseEV.createdAt:type_name -> google.protobuf.Timestamp
	13, // 13: announcement.service.v1.AnnouncementTaskResponseEV.updatedAt:type_name -> google.protobuf.Timestamp
	1,  // 14: announcement.service.v1.AnnouncementWithTaskEV.announcement:type_name -> announcement.service.v1.AnnouncementEV
	5,  // 15: announcement.service.v1.AnnouncementWithTaskEV.task:type_name -> announcement.service.v1.AnnouncementTaskResponseEV
	6,  // 16: announcement.service.v1.ListAnnouncementResponseEV.data:type_name -> announcement.service.v1.AnnouncementWithTaskEV
	14, // 17: announcement.service.v1.ListAnnouncementResponseEV.pagination:type_name -> announcement.service.v1.PaginationResponse
	1,  // 18: announcement.service.v1.ListAnnouncementActiveResponseEV.data:type_name -> announcement.service.v1.AnnouncementEV
	14, // 19: announcement.service.v1.ListAnnouncementActiveResponseEV.pagination:type_name -> announcement.service.v1.PaginationResponse
	1,  // 20: announcement.service.v1.CreateAnnouncementTaskRequestEV.data:type_name -> announcement.service.v1.AnnouncementEV
	1,  // 21: announcement.service.v1.CreateAnnouncementResponseEV.data:type_name -> announcement.service.v1.AnnouncementEV
	2,  // 22: announcement.service.v1.ListEventTypeResponseEV.data:type_name -> announcement.service.v1.AnnouncementEventTypeEV
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_announcement_payload_ev_proto_init() }
func file_announcement_payload_ev_proto_init() {
	if File_announcement_payload_ev_proto != nil {
		return
	}
	file_announcement_payload_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_announcement_payload_ev_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementEventTypeEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAnnouncementDataRequestEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventTypeRequestEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementTaskResponseEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementWithTaskEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAnnouncementResponseEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAnnouncementActiveResponseEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnnouncementTaskRequestEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByTaskIDEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnnouncementResponseEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_announcement_payload_ev_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventTypeResponseEV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_announcement_payload_ev_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_announcement_payload_ev_proto_goTypes,
		DependencyIndexes: file_announcement_payload_ev_proto_depIdxs,
		EnumInfos:         file_announcement_payload_ev_proto_enumTypes,
		MessageInfos:      file_announcement_payload_ev_proto_msgTypes,
	}.Build()
	File_announcement_payload_ev_proto = out.File
	file_announcement_payload_ev_proto_rawDesc = nil
	file_announcement_payload_ev_proto_goTypes = nil
	file_announcement_payload_ev_proto_depIdxs = nil
}
