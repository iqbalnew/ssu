// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: sso_gorm_db.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SSOSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Client      string                 `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	SessionID   string                 `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Token       string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	ClientToken string                 `protobuf:"bytes,5,opt,name=clientToken,proto3" json:"clientToken,omitempty"`
	ExpiredAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *SSOSession) Reset() {
	*x = SSOSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOSession) ProtoMessage() {}

func (x *SSOSession) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOSession.ProtoReflect.Descriptor instead.
func (*SSOSession) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{0}
}

func (x *SSOSession) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SSOSession) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *SSOSession) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *SSOSession) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SSOSession) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SSOSession) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

func (x *SSOSession) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SSOSyncUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSyncID     uint64                 `protobuf:"varint,1,opt,name=userSyncID,proto3" json:"userSyncID,omitempty"`
	AddonsUserID   uint64                 `protobuf:"varint,2,opt,name=addonsUserID,proto3" json:"addonsUserID,omitempty"`
	Client         string                 `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	UserID         string                 `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleID         uint64                 `protobuf:"varint,5,opt,name=roleID,proto3" json:"roleID,omitempty"`
	AddonsUserName string                 `protobuf:"bytes,6,opt,name=addonsUserName,proto3" json:"addonsUserName,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *SSOSyncUser) Reset() {
	*x = SSOSyncUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOSyncUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOSyncUser) ProtoMessage() {}

func (x *SSOSyncUser) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOSyncUser.ProtoReflect.Descriptor instead.
func (*SSOSyncUser) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{1}
}

func (x *SSOSyncUser) GetUserSyncID() uint64 {
	if x != nil {
		return x.UserSyncID
	}
	return 0
}

func (x *SSOSyncUser) GetAddonsUserID() uint64 {
	if x != nil {
		return x.AddonsUserID
	}
	return 0
}

func (x *SSOSyncUser) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *SSOSyncUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SSOSyncUser) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *SSOSyncUser) GetAddonsUserName() string {
	if x != nil {
		return x.AddonsUserName
	}
	return ""
}

func (x *SSOSyncUser) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SSOSyncUser) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SSOSyncCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanySyncID   uint64                 `protobuf:"varint,1,opt,name=companySyncID,proto3" json:"companySyncID,omitempty"`
	AddonsCompanyID uint64                 `protobuf:"varint,2,opt,name=addonsCompanyID,proto3" json:"addonsCompanyID,omitempty"`
	Client          string                 `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	CompanyID       string                 `protobuf:"bytes,4,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *SSOSyncCompany) Reset() {
	*x = SSOSyncCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOSyncCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOSyncCompany) ProtoMessage() {}

func (x *SSOSyncCompany) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOSyncCompany.ProtoReflect.Descriptor instead.
func (*SSOSyncCompany) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{2}
}

func (x *SSOSyncCompany) GetCompanySyncID() uint64 {
	if x != nil {
		return x.CompanySyncID
	}
	return 0
}

func (x *SSOSyncCompany) GetAddonsCompanyID() uint64 {
	if x != nil {
		return x.AddonsCompanyID
	}
	return 0
}

func (x *SSOSyncCompany) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *SSOSyncCompany) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *SSOSyncCompany) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SSOSyncCompany) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SSOClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID       uint64                 `protobuf:"varint,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code           string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	LoginURL       string                 `protobuf:"bytes,4,opt,name=loginURL,proto3" json:"loginURL,omitempty"`
	LogoutURL      string                 `protobuf:"bytes,5,opt,name=logoutURL,proto3" json:"logoutURL,omitempty"`
	SyncUserURL    string                 `protobuf:"bytes,6,opt,name=syncUserURL,proto3" json:"syncUserURL,omitempty"`
	SyncCompanyURL string                 `protobuf:"bytes,7,opt,name=syncCompanyURL,proto3" json:"syncCompanyURL,omitempty"`
	UpdatedByID    uint64                 `protobuf:"varint,8,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,52,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *SSOClient) Reset() {
	*x = SSOClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOClient) ProtoMessage() {}

func (x *SSOClient) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOClient.ProtoReflect.Descriptor instead.
func (*SSOClient) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{3}
}

func (x *SSOClient) GetClientID() uint64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *SSOClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SSOClient) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SSOClient) GetLoginURL() string {
	if x != nil {
		return x.LoginURL
	}
	return ""
}

func (x *SSOClient) GetLogoutURL() string {
	if x != nil {
		return x.LogoutURL
	}
	return ""
}

func (x *SSOClient) GetSyncUserURL() string {
	if x != nil {
		return x.SyncUserURL
	}
	return ""
}

func (x *SSOClient) GetSyncCompanyURL() string {
	if x != nil {
		return x.SyncCompanyURL
	}
	return ""
}

func (x *SSOClient) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *SSOClient) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SSOClient) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SSOClientRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID         uint64                 `protobuf:"varint,1,opt,name=roleID,proto3" json:"roleID,omitempty"`
	ClientRoleCode string                 `protobuf:"bytes,2,opt,name=clientRoleCode,proto3" json:"clientRoleCode,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Client         string                 `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *SSOClientRole) Reset() {
	*x = SSOClientRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOClientRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOClientRole) ProtoMessage() {}

func (x *SSOClientRole) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOClientRole.ProtoReflect.Descriptor instead.
func (*SSOClientRole) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{4}
}

func (x *SSOClientRole) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *SSOClientRole) GetClientRoleCode() string {
	if x != nil {
		return x.ClientRoleCode
	}
	return ""
}

func (x *SSOClientRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SSOClientRole) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *SSOClientRole) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CompanySyncJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyCode     string                 `protobuf:"bytes,1,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
	Partner         string                 `protobuf:"bytes,2,opt,name=partner,proto3" json:"partner,omitempty"`
	SyncRequestDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=syncRequestDate,proto3" json:"syncRequestDate,omitempty"`
	SyncDate        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=syncDate,proto3" json:"syncDate,omitempty"`
	SyncStatus      string                 `protobuf:"bytes,5,opt,name=syncStatus,proto3" json:"syncStatus,omitempty"`
	TaskID          uint64                 `protobuf:"varint,6,opt,name=taskID,proto3" json:"taskID,omitempty"`
	CompanyID       uint64                 `protobuf:"varint,7,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Status          int32                  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CompanySyncJoin) Reset() {
	*x = CompanySyncJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanySyncJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanySyncJoin) ProtoMessage() {}

func (x *CompanySyncJoin) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanySyncJoin.ProtoReflect.Descriptor instead.
func (*CompanySyncJoin) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{5}
}

func (x *CompanySyncJoin) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *CompanySyncJoin) GetPartner() string {
	if x != nil {
		return x.Partner
	}
	return ""
}

func (x *CompanySyncJoin) GetSyncRequestDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncRequestDate
	}
	return nil
}

func (x *CompanySyncJoin) GetSyncDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncDate
	}
	return nil
}

func (x *CompanySyncJoin) GetSyncStatus() string {
	if x != nil {
		return x.SyncStatus
	}
	return ""
}

func (x *CompanySyncJoin) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CompanySyncJoin) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanySyncJoin) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CompanySyncJoin) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UserSyncJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          uint64                 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username        string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserTypeName    string                 `protobuf:"bytes,3,opt,name=userTypeName,proto3" json:"userTypeName,omitempty"`
	Partner         string                 `protobuf:"bytes,4,opt,name=partner,proto3" json:"partner,omitempty"`
	SyncRequestDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=syncRequestDate,proto3" json:"syncRequestDate,omitempty"`
	SyncDate        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=syncDate,proto3" json:"syncDate,omitempty"`
	SyncStatus      string                 `protobuf:"bytes,7,opt,name=syncStatus,proto3" json:"syncStatus,omitempty"`
	TaskID          uint64                 `protobuf:"varint,8,opt,name=taskID,proto3" json:"taskID,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Status          int32                  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserSyncJoin) Reset() {
	*x = UserSyncJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sso_gorm_db_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSyncJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSyncJoin) ProtoMessage() {}

func (x *UserSyncJoin) ProtoReflect() protoreflect.Message {
	mi := &file_sso_gorm_db_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSyncJoin.ProtoReflect.Descriptor instead.
func (*UserSyncJoin) Descriptor() ([]byte, []int) {
	return file_sso_gorm_db_proto_rawDescGZIP(), []int{6}
}

func (x *UserSyncJoin) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserSyncJoin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserSyncJoin) GetUserTypeName() string {
	if x != nil {
		return x.UserTypeName
	}
	return ""
}

func (x *UserSyncJoin) GetPartner() string {
	if x != nil {
		return x.Partner
	}
	return ""
}

func (x *UserSyncJoin) GetSyncRequestDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncRequestDate
	}
	return nil
}

func (x *UserSyncJoin) GetSyncDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncDate
	}
	return nil
}

func (x *UserSyncJoin) GetSyncStatus() string {
	if x != nil {
		return x.SyncStatus
	}
	return ""
}

func (x *UserSyncJoin) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *UserSyncJoin) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserSyncJoin) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_sso_gorm_db_proto protoreflect.FileDescriptor

var file_sso_gorm_db_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x73, 0x6f, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f,
	0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x03, 0x0a, 0x0a, 0x53, 0x53, 0x4f, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x1c, 0x0a, 0x1a,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x32, 0x35, 0x35, 0x29, 0x28, 0x01, 0x40, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x23, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x1c, 0x0a, 0x1a, 0x0a, 0x06, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32,
	0x35, 0x35, 0x29, 0x28, 0x01, 0x40, 0x01, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1e, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x17, 0x0a, 0x15, 0x0a, 0x09, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x04, 0x74, 0x65, 0x78, 0x74, 0x28, 0x01,
	0x40, 0x01, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2e, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xe0, 0x41,
	0x03, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x40, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1e, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x17, 0x0a, 0x15, 0x0a, 0x0b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x40, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x3d, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4e,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x14,
	0xba, 0xb9, 0x19, 0x10, 0x08, 0x01, 0x1a, 0x0c, 0x73, 0x73, 0x6f, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa7, 0x04, 0x0a, 0x0b, 0x53, 0x53, 0x4f, 0x53, 0x79, 0x6e, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x19, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19,
	0x12, 0x0a, 0x10, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x44, 0x28,
	0x01, 0x40, 0x01, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x44, 0x12,
	0x3d, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x19, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x40, 0x01,
	0x52, 0x0c, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x39,
	0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21,
	0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x1a, 0x0a, 0x18, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x35, 0x35, 0x29, 0x40,
	0x01, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xe0, 0x41, 0x03, 0xba, 0xb9,
	0x19, 0x1a, 0x0a, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x35, 0x35, 0x29, 0x40, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x13, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a,
	0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x40, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x43, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xe0, 0x41, 0x03, 0xba, 0xb9,
	0x19, 0x14, 0x0a, 0x12, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x40, 0x01, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x08, 0x01, 0x1a, 0x0e,
	0x73, 0x73, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xc9,
	0x03, 0x0a, 0x0e, 0x53, 0x53, 0x4f, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x1c, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19,
	0x15, 0x0a, 0x13, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x44, 0x28, 0x01, 0x40, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53,
	0x79, 0x6e, 0x63, 0x49, 0x44, 0x12, 0x46, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x1c,
	0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x15, 0x0a, 0x13, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x6e,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x40, 0x01, 0x52, 0x0f, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x39, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x1a, 0x0a, 0x18, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x35, 0x35, 0x29, 0x40, 0x01,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xe0, 0x41, 0x03,
	0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x40, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x4e,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4e,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x1a,
	0xba, 0xb9, 0x19, 0x16, 0x08, 0x01, 0x1a, 0x12, 0x73, 0x73, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x22, 0xcf, 0x04, 0x0a, 0x09, 0x53,
	0x53, 0x4f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x17, 0xe0, 0x41, 0x03, 0xba,
	0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x28,
	0x01, 0x40, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19,
	0x0a, 0x0a, 0x08, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x40, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x30, 0x01, 0x40,
	0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a,
	0x0a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55,
	0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x09, 0x6c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19,
	0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c,
	0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x3e, 0x0a,
	0x0e, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x52, 0x4c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x0a, 0x0e, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x0e, 0x73,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x38, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x16, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a,
	0x0b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a,
	0x0b, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x08, 0x01, 0x1a,
	0x0b, 0x73, 0x73, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb5, 0x02, 0x0a,
	0x0d, 0x53, 0x53, 0x4f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12,
	0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x28, 0x01,
	0x40, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xba, 0xb9, 0x19, 0x14, 0x0a, 0x12, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x40, 0x01, 0x52, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a,
	0x0a, 0x08, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x40, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x40, 0x01, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0xe0, 0x41, 0x03, 0xba, 0xb9,
	0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x18, 0xba, 0xb9, 0x19, 0x14,
	0x08, 0x01, 0x1a, 0x10, 0x73, 0x73, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0xdb, 0x04, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x12, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x0a, 0x07,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x12, 0x60, 0x0a, 0x0f, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1a, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x13, 0x0a, 0x11,
	0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x0f, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x13, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x53, 0x79, 0x6e,
	0x63, 0x44, 0x61, 0x74, 0x65, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x15, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0a, 0x0a,
	0x08, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x4f, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x15, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x3a, 0x1f, 0xba, 0xb9, 0x19, 0x1b, 0x08, 0x01, 0x1a, 0x17, 0x73, 0x73, 0x6f, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x5f, 0x6a, 0x6f,
	0x69, 0x6e, 0x22, 0xff, 0x04, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4a,
	0x6f, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2f,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x07,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0f, 0x73, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x1a, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x13, 0x0a, 0x11, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x08,
	0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x13, 0xe0, 0x41, 0x03, 0xba,
	0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x79, 0x6e,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xe0,
	0x41, 0x03, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x29, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x11, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x06, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x4f, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x15, 0xe0, 0x41, 0x03, 0xba,
	0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0xe0, 0x41,
	0x03, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x1b, 0xba, 0xb9, 0x19, 0x17, 0x08, 0x01, 0x1a,
	0x13, 0x73, 0x73, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f,
	0x6a, 0x6f, 0x69, 0x6e, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sso_gorm_db_proto_rawDescOnce sync.Once
	file_sso_gorm_db_proto_rawDescData = file_sso_gorm_db_proto_rawDesc
)

func file_sso_gorm_db_proto_rawDescGZIP() []byte {
	file_sso_gorm_db_proto_rawDescOnce.Do(func() {
		file_sso_gorm_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_sso_gorm_db_proto_rawDescData)
	})
	return file_sso_gorm_db_proto_rawDescData
}

var file_sso_gorm_db_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sso_gorm_db_proto_goTypes = []interface{}{
	(*SSOSession)(nil),            // 0: sso.service.v1.SSOSession
	(*SSOSyncUser)(nil),           // 1: sso.service.v1.SSOSyncUser
	(*SSOSyncCompany)(nil),        // 2: sso.service.v1.SSOSyncCompany
	(*SSOClient)(nil),             // 3: sso.service.v1.SSOClient
	(*SSOClientRole)(nil),         // 4: sso.service.v1.SSOClientRole
	(*CompanySyncJoin)(nil),       // 5: sso.service.v1.CompanySyncJoin
	(*UserSyncJoin)(nil),          // 6: sso.service.v1.UserSyncJoin
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_sso_gorm_db_proto_depIdxs = []int32{
	7,  // 0: sso.service.v1.SSOSession.expiredAt:type_name -> google.protobuf.Timestamp
	7,  // 1: sso.service.v1.SSOSession.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 2: sso.service.v1.SSOSyncUser.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 3: sso.service.v1.SSOSyncUser.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 4: sso.service.v1.SSOSyncCompany.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 5: sso.service.v1.SSOSyncCompany.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 6: sso.service.v1.SSOClient.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 7: sso.service.v1.SSOClient.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 8: sso.service.v1.SSOClientRole.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 9: sso.service.v1.CompanySyncJoin.syncRequestDate:type_name -> google.protobuf.Timestamp
	7,  // 10: sso.service.v1.CompanySyncJoin.syncDate:type_name -> google.protobuf.Timestamp
	7,  // 11: sso.service.v1.CompanySyncJoin.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 12: sso.service.v1.UserSyncJoin.syncRequestDate:type_name -> google.protobuf.Timestamp
	7,  // 13: sso.service.v1.UserSyncJoin.syncDate:type_name -> google.protobuf.Timestamp
	7,  // 14: sso.service.v1.UserSyncJoin.updatedAt:type_name -> google.protobuf.Timestamp
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_sso_gorm_db_proto_init() }
func file_sso_gorm_db_proto_init() {
	if File_sso_gorm_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sso_gorm_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sso_gorm_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOSyncUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sso_gorm_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOSyncCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sso_gorm_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sso_gorm_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOClientRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sso_gorm_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanySyncJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sso_gorm_db_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSyncJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sso_gorm_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sso_gorm_db_proto_goTypes,
		DependencyIndexes: file_sso_gorm_db_proto_depIdxs,
		MessageInfos:      file_sso_gorm_db_proto_msgTypes,
	}.Build()
	File_sso_gorm_db_proto = out.File
	file_sso_gorm_db_proto_rawDesc = nil
	file_sso_gorm_db_proto_goTypes = nil
	file_sso_gorm_db_proto_depIdxs = nil
}
