// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: sync_company_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSyncCompanyReq_Sort int32

const (
	GetSyncCompanyReq_companyCode     GetSyncCompanyReq_Sort = 0
	GetSyncCompanyReq_partner         GetSyncCompanyReq_Sort = 1
	GetSyncCompanyReq_syncStatus      GetSyncCompanyReq_Sort = 2
	GetSyncCompanyReq_syncDate        GetSyncCompanyReq_Sort = 3
	GetSyncCompanyReq_status          GetSyncCompanyReq_Sort = 4
	GetSyncCompanyReq_syncRequestDate GetSyncCompanyReq_Sort = 5
)

// Enum value maps for GetSyncCompanyReq_Sort.
var (
	GetSyncCompanyReq_Sort_name = map[int32]string{
		0: "companyCode",
		1: "partner",
		2: "syncStatus",
		3: "syncDate",
		4: "status",
		5: "syncRequestDate",
	}
	GetSyncCompanyReq_Sort_value = map[string]int32{
		"companyCode":     0,
		"partner":         1,
		"syncStatus":      2,
		"syncDate":        3,
		"status":          4,
		"syncRequestDate": 5,
	}
)

func (x GetSyncCompanyReq_Sort) Enum() *GetSyncCompanyReq_Sort {
	p := new(GetSyncCompanyReq_Sort)
	*p = x
	return p
}

func (x GetSyncCompanyReq_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetSyncCompanyReq_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_company_payload_proto_enumTypes[0].Descriptor()
}

func (GetSyncCompanyReq_Sort) Type() protoreflect.EnumType {
	return &file_sync_company_payload_proto_enumTypes[0]
}

func (x GetSyncCompanyReq_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetSyncCompanyReq_Sort.Descriptor instead.
func (GetSyncCompanyReq_Sort) EnumDescriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{8, 0}
}

type GetSyncCompanyReqDirection int32

const (
	GetSyncCompanyReq_DESC GetSyncCompanyReqDirection = 0
	GetSyncCompanyReq_ASC  GetSyncCompanyReqDirection = 1
)

// Enum value maps for GetSyncCompanyReqDirection.
var (
	GetSyncCompanyReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetSyncCompanyReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetSyncCompanyReqDirection) Enum() *GetSyncCompanyReqDirection {
	p := new(GetSyncCompanyReqDirection)
	*p = x
	return p
}

func (x GetSyncCompanyReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetSyncCompanyReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_company_payload_proto_enumTypes[1].Descriptor()
}

func (GetSyncCompanyReqDirection) Type() protoreflect.EnumType {
	return &file_sync_company_payload_proto_enumTypes[1]
}

func (x GetSyncCompanyReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetSyncCompanyReqDirection.Descriptor instead.
func (GetSyncCompanyReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{8, 1}
}

type FileGetSyncCompanyReq_Formats int32

const (
	FileGetSyncCompanyReq_null FileGetSyncCompanyReq_Formats = 0
	FileGetSyncCompanyReq_pdf  FileGetSyncCompanyReq_Formats = 1
	FileGetSyncCompanyReq_xls  FileGetSyncCompanyReq_Formats = 2
	FileGetSyncCompanyReq_csv  FileGetSyncCompanyReq_Formats = 3
)

// Enum value maps for FileGetSyncCompanyReq_Formats.
var (
	FileGetSyncCompanyReq_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileGetSyncCompanyReq_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileGetSyncCompanyReq_Formats) Enum() *FileGetSyncCompanyReq_Formats {
	p := new(FileGetSyncCompanyReq_Formats)
	*p = x
	return p
}

func (x FileGetSyncCompanyReq_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileGetSyncCompanyReq_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_company_payload_proto_enumTypes[2].Descriptor()
}

func (FileGetSyncCompanyReq_Formats) Type() protoreflect.EnumType {
	return &file_sync_company_payload_proto_enumTypes[2]
}

func (x FileGetSyncCompanyReq_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileGetSyncCompanyReq_Formats.Descriptor instead.
func (FileGetSyncCompanyReq_Formats) EnumDescriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{14, 0}
}

type FileGetSyncCompanyReqDirection int32

const (
	FileGetSyncCompanyReq_DESC FileGetSyncCompanyReqDirection = 0
	FileGetSyncCompanyReq_ASC  FileGetSyncCompanyReqDirection = 1
)

// Enum value maps for FileGetSyncCompanyReqDirection.
var (
	FileGetSyncCompanyReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	FileGetSyncCompanyReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x FileGetSyncCompanyReqDirection) Enum() *FileGetSyncCompanyReqDirection {
	p := new(FileGetSyncCompanyReqDirection)
	*p = x
	return p
}

func (x FileGetSyncCompanyReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileGetSyncCompanyReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_company_payload_proto_enumTypes[3].Descriptor()
}

func (FileGetSyncCompanyReqDirection) Type() protoreflect.EnumType {
	return &file_sync_company_payload_proto_enumTypes[3]
}

func (x FileGetSyncCompanyReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileGetSyncCompanyReqDirection.Descriptor instead.
func (FileGetSyncCompanyReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{14, 1}
}

// CreateSyncCompanyTask
type CreateSyncCompanyTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *WriteSyncCompanyTask `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64                `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool                  `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateSyncCompanyTaskReq) Reset() {
	*x = CreateSyncCompanyTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSyncCompanyTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSyncCompanyTaskReq) ProtoMessage() {}

func (x *CreateSyncCompanyTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSyncCompanyTaskReq.ProtoReflect.Descriptor instead.
func (*CreateSyncCompanyTaskReq) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSyncCompanyTaskReq) GetData() *WriteSyncCompanyTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateSyncCompanyTaskReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateSyncCompanyTaskReq) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type WriteSyncCompanyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddonsCompanyId uint64          `protobuf:"varint,1,opt,name=addonsCompanyId,proto3" json:"addonsCompanyId,omitempty"`
	Additionals     *Additionals    `protobuf:"bytes,2,opt,name=additionals,proto3" json:"additionals,omitempty"`
	TaskID          uint64          `protobuf:"varint,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Client          string          `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	DataCBM         *CBMCompany     `protobuf:"bytes,5,opt,name=dataCBM,proto3" json:"dataCBM,omitempty"`
	Company         *SSOSyncCompany `protobuf:"bytes,50,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *WriteSyncCompanyTask) Reset() {
	*x = WriteSyncCompanyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSyncCompanyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSyncCompanyTask) ProtoMessage() {}

func (x *WriteSyncCompanyTask) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSyncCompanyTask.ProtoReflect.Descriptor instead.
func (*WriteSyncCompanyTask) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{1}
}

func (x *WriteSyncCompanyTask) GetAddonsCompanyId() uint64 {
	if x != nil {
		return x.AddonsCompanyId
	}
	return 0
}

func (x *WriteSyncCompanyTask) GetAdditionals() *Additionals {
	if x != nil {
		return x.Additionals
	}
	return nil
}

func (x *WriteSyncCompanyTask) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *WriteSyncCompanyTask) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *WriteSyncCompanyTask) GetDataCBM() *CBMCompany {
	if x != nil {
		return x.DataCBM
	}
	return nil
}

func (x *WriteSyncCompanyTask) GetCompany() *SSOSyncCompany {
	if x != nil {
		return x.Company
	}
	return nil
}

type CreateSyncCompanyTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Task  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSyncCompanyTaskRes) Reset() {
	*x = CreateSyncCompanyTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSyncCompanyTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSyncCompanyTaskRes) ProtoMessage() {}

func (x *CreateSyncCompanyTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSyncCompanyTaskRes.ProtoReflect.Descriptor instead.
func (*CreateSyncCompanyTaskRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSyncCompanyTaskRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateSyncCompanyTaskRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateSyncCompanyTaskRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSyncCompanyTaskRes) GetData() *Task {
	if x != nil {
		return x.Data
	}
	return nil
}

// ListSyncCompanyTask
type ReadSyncCompanyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company     *SSOSyncCompany `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Additionals *Additionals    `protobuf:"bytes,2,opt,name=additionals,proto3" json:"additionals,omitempty"`
	Task        *Task           `protobuf:"bytes,3,opt,name=Task,proto3" json:"Task,omitempty"`
	Client      string          `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	DataCBM     *CBMCompany     `protobuf:"bytes,5,opt,name=dataCBM,proto3" json:"dataCBM,omitempty"`
}

func (x *ReadSyncCompanyTask) Reset() {
	*x = ReadSyncCompanyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSyncCompanyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSyncCompanyTask) ProtoMessage() {}

func (x *ReadSyncCompanyTask) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSyncCompanyTask.ProtoReflect.Descriptor instead.
func (*ReadSyncCompanyTask) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{3}
}

func (x *ReadSyncCompanyTask) GetCompany() *SSOSyncCompany {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *ReadSyncCompanyTask) GetAdditionals() *Additionals {
	if x != nil {
		return x.Additionals
	}
	return nil
}

func (x *ReadSyncCompanyTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *ReadSyncCompanyTask) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *ReadSyncCompanyTask) GetDataCBM() *CBMCompany {
	if x != nil {
		return x.DataCBM
	}
	return nil
}

type ListSyncCompanyTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*ReadSyncCompanyTask `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination            `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListSyncCompanyTaskRes) Reset() {
	*x = ListSyncCompanyTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSyncCompanyTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSyncCompanyTaskRes) ProtoMessage() {}

func (x *ListSyncCompanyTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSyncCompanyTaskRes.ProtoReflect.Descriptor instead.
func (*ListSyncCompanyTaskRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{4}
}

func (x *ListSyncCompanyTaskRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListSyncCompanyTaskRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListSyncCompanyTaskRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListSyncCompanyTaskRes) GetData() []*ReadSyncCompanyTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListSyncCompanyTaskRes) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetSyncCompanyTask && DeleteSyncCompanyTask
type GetSyncCompanyTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ReadSyncCompanyTask `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSyncCompanyTaskRes) Reset() {
	*x = GetSyncCompanyTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCompanyTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCompanyTaskRes) ProtoMessage() {}

func (x *GetSyncCompanyTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCompanyTaskRes.ProtoReflect.Descriptor instead.
func (*GetSyncCompanyTaskRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{5}
}

func (x *GetSyncCompanyTaskRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetSyncCompanyTaskRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSyncCompanyTaskRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSyncCompanyTaskRes) GetData() *ReadSyncCompanyTask {
	if x != nil {
		return x.Data
	}
	return nil
}

// ListSyncCompany
type ListSyncCompanyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*SSOSyncCompany `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination       `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListSyncCompanyRes) Reset() {
	*x = ListSyncCompanyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSyncCompanyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSyncCompanyRes) ProtoMessage() {}

func (x *ListSyncCompanyRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSyncCompanyRes.ProtoReflect.Descriptor instead.
func (*ListSyncCompanyRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{6}
}

func (x *ListSyncCompanyRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListSyncCompanyRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListSyncCompanyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListSyncCompanyRes) GetData() []*SSOSyncCompany {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListSyncCompanyRes) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// SaveSyncCompany && DeleteSyncCompany
type SetSyncCompanyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool            `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SSOSyncCompany `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetSyncCompanyRes) Reset() {
	*x = SetSyncCompanyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSyncCompanyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSyncCompanyRes) ProtoMessage() {}

func (x *SetSyncCompanyRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSyncCompanyRes.ProtoReflect.Descriptor instead.
func (*SetSyncCompanyRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{7}
}

func (x *SetSyncCompanyRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SetSyncCompanyRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetSyncCompanyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SetSyncCompanyRes) GetData() *SSOSyncCompany {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetSyncCompany
type GetSyncCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client string                     `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Limit  int32                      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                      `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   GetSyncCompanyReq_Sort     `protobuf:"varint,5,opt,name=sort,proto3,enum=sso.service.v1.GetSyncCompanyReq_Sort" json:"sort,omitempty"`
	Dir    GetSyncCompanyReqDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=sso.service.v1.GetSyncCompanyReqDirection" json:"dir,omitempty"`
	Search string                     `protobuf:"bytes,7,opt,name=search,proto3" json:"search,omitempty"`
	Filter *GetSyncCompanyFilter      `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetSyncCompanyReq) Reset() {
	*x = GetSyncCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCompanyReq) ProtoMessage() {}

func (x *GetSyncCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCompanyReq.ProtoReflect.Descriptor instead.
func (*GetSyncCompanyReq) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{8}
}

func (x *GetSyncCompanyReq) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *GetSyncCompanyReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSyncCompanyReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSyncCompanyReq) GetSort() GetSyncCompanyReq_Sort {
	if x != nil {
		return x.Sort
	}
	return GetSyncCompanyReq_companyCode
}

func (x *GetSyncCompanyReq) GetDir() GetSyncCompanyReqDirection {
	if x != nil {
		return x.Dir
	}
	return GetSyncCompanyReq_DESC
}

func (x *GetSyncCompanyReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSyncCompanyReq) GetFilter() *GetSyncCompanyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetSyncCompanyFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyCode string                 `protobuf:"bytes,1,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
	Partner     string                 `protobuf:"bytes,2,opt,name=partner,proto3" json:"partner,omitempty"`
	SyncStatus  string                 `protobuf:"bytes,3,opt,name=syncStatus,proto3" json:"syncStatus,omitempty"`
	SyncDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=syncDate,proto3" json:"syncDate,omitempty"`
	Status      string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetSyncCompanyFilter) Reset() {
	*x = GetSyncCompanyFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCompanyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCompanyFilter) ProtoMessage() {}

func (x *GetSyncCompanyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCompanyFilter.ProtoReflect.Descriptor instead.
func (*GetSyncCompanyFilter) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{9}
}

func (x *GetSyncCompanyFilter) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *GetSyncCompanyFilter) GetPartner() string {
	if x != nil {
		return x.Partner
	}
	return ""
}

func (x *GetSyncCompanyFilter) GetSyncStatus() string {
	if x != nil {
		return x.SyncStatus
	}
	return ""
}

func (x *GetSyncCompanyFilter) GetSyncDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncDate
	}
	return nil
}

func (x *GetSyncCompanyFilter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetSyncCompanyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*SyncCompanyData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination        `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetSyncCompanyRes) Reset() {
	*x = GetSyncCompanyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCompanyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCompanyRes) ProtoMessage() {}

func (x *GetSyncCompanyRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCompanyRes.ProtoReflect.Descriptor instead.
func (*GetSyncCompanyRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{10}
}

func (x *GetSyncCompanyRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetSyncCompanyRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSyncCompanyRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSyncCompanyRes) GetData() []*SyncCompanyData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSyncCompanyRes) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SyncCompanyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncID          string                 `protobuf:"bytes,1,opt,name=syncID,proto3" json:"syncID,omitempty"`
	CompanyCode     string                 `protobuf:"bytes,2,opt,name=companyCode,proto3" json:"companyCode,omitempty"`
	Partner         string                 `protobuf:"bytes,3,opt,name=partner,proto3" json:"partner,omitempty"`
	SyncStatus      string                 `protobuf:"bytes,4,opt,name=syncStatus,proto3" json:"syncStatus,omitempty"`
	SyncDate        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=syncDate,proto3" json:"syncDate,omitempty"`
	Status          string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	TaskID          string                 `protobuf:"bytes,7,opt,name=taskID,proto3" json:"taskID,omitempty"`
	SyncRequestDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=syncRequestDate,proto3" json:"syncRequestDate,omitempty"`
}

func (x *SyncCompanyData) Reset() {
	*x = SyncCompanyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCompanyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCompanyData) ProtoMessage() {}

func (x *SyncCompanyData) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCompanyData.ProtoReflect.Descriptor instead.
func (*SyncCompanyData) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{11}
}

func (x *SyncCompanyData) GetSyncID() string {
	if x != nil {
		return x.SyncID
	}
	return ""
}

func (x *SyncCompanyData) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *SyncCompanyData) GetPartner() string {
	if x != nil {
		return x.Partner
	}
	return ""
}

func (x *SyncCompanyData) GetSyncStatus() string {
	if x != nil {
		return x.SyncStatus
	}
	return ""
}

func (x *SyncCompanyData) GetSyncDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncDate
	}
	return nil
}

func (x *SyncCompanyData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SyncCompanyData) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

func (x *SyncCompanyData) GetSyncRequestDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SyncRequestDate
	}
	return nil
}

// GetSyncCompanyDetail
type GetSyncCompanyDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *ReadSyncCompanyTask `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Company *Company             `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	TaskID  string               `protobuf:"bytes,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetSyncCompanyDetailRes) Reset() {
	*x = GetSyncCompanyDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCompanyDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCompanyDetailRes) ProtoMessage() {}

func (x *GetSyncCompanyDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCompanyDetailRes.ProtoReflect.Descriptor instead.
func (*GetSyncCompanyDetailRes) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{12}
}

func (x *GetSyncCompanyDetailRes) GetData() *ReadSyncCompanyTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSyncCompanyDetailRes) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *GetSyncCompanyDetailRes) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID          uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	HoldingID          uint64 `protobuf:"varint,2,opt,name=holdingID,proto3" json:"holdingID,omitempty"`
	GroupName          string `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	CompanyName        string `protobuf:"bytes,4,opt,name=companyName,proto3" json:"companyName,omitempty"`
	HoldingCompanyName string `protobuf:"bytes,5,opt,name=holdingCompanyName,proto3" json:"holdingCompanyName,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{13}
}

func (x *Company) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Company) GetHoldingID() uint64 {
	if x != nil {
		return x.HoldingID
	}
	return 0
}

func (x *Company) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Company) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Company) GetHoldingCompanyName() string {
	if x != nil {
		return x.HoldingCompanyName
	}
	return ""
}

type FileGetSyncCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileGetSyncCompanyReq_Formats  `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=sso.service.v1.FileGetSyncCompanyReq_Formats" json:"fileFormat,omitempty"`
	Client     string                         `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Limit      int32                          `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                          `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       GetSyncCompanyReq_Sort         `protobuf:"varint,5,opt,name=sort,proto3,enum=sso.service.v1.GetSyncCompanyReq_Sort" json:"sort,omitempty"`
	Dir        FileGetSyncCompanyReqDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=sso.service.v1.FileGetSyncCompanyReqDirection" json:"dir,omitempty"`
	Search     string                         `protobuf:"bytes,7,opt,name=search,proto3" json:"search,omitempty"`
	Filter     *GetSyncCompanyFilter          `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *FileGetSyncCompanyReq) Reset() {
	*x = FileGetSyncCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_company_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileGetSyncCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGetSyncCompanyReq) ProtoMessage() {}

func (x *FileGetSyncCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_sync_company_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGetSyncCompanyReq.ProtoReflect.Descriptor instead.
func (*FileGetSyncCompanyReq) Descriptor() ([]byte, []int) {
	return file_sync_company_payload_proto_rawDescGZIP(), []int{14}
}

func (x *FileGetSyncCompanyReq) GetFileFormat() FileGetSyncCompanyReq_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileGetSyncCompanyReq_null
}

func (x *FileGetSyncCompanyReq) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *FileGetSyncCompanyReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileGetSyncCompanyReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileGetSyncCompanyReq) GetSort() GetSyncCompanyReq_Sort {
	if x != nil {
		return x.Sort
	}
	return GetSyncCompanyReq_companyCode
}

func (x *FileGetSyncCompanyReq) GetDir() FileGetSyncCompanyReqDirection {
	if x != nil {
		return x.Dir
	}
	return FileGetSyncCompanyReq_DESC
}

func (x *FileGetSyncCompanyReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FileGetSyncCompanyReq) GetFilter() *GetSyncCompanyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

var File_sync_company_payload_proto protoreflect.FileDescriptor

var file_sync_company_payload_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x73,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x73, 0x73,
	0x6f, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x14,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x0b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73,
	0x52, 0x0b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x42, 0x4d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x42, 0x4d, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x73, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4f, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x86, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x73,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4f,
	0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x42, 0x4d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x43, 0x42, 0x4d, 0x22, 0xd1, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x94, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x73,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x53, 0x4f, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x73, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x4f, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe4, 0x04, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41,
	0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65,
	0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27,
	0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x53, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x63, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44,
	0x61, 0x74, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10,
	0x04, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x10, 0x05, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xc2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x73,
	0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x02, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6e, 0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36,
	0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x79,
	0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x9d, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xb5, 0x01, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x86, 0x05, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x4d,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c,
	0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x5a, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x57,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x73,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x71, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x92, 0x41,
	0x11, 0x32, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x3c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x2e, 0x0a,
	0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78,
	0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0x1e, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45,
	0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sync_company_payload_proto_rawDescOnce sync.Once
	file_sync_company_payload_proto_rawDescData = file_sync_company_payload_proto_rawDesc
)

func file_sync_company_payload_proto_rawDescGZIP() []byte {
	file_sync_company_payload_proto_rawDescOnce.Do(func() {
		file_sync_company_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_sync_company_payload_proto_rawDescData)
	})
	return file_sync_company_payload_proto_rawDescData
}

var file_sync_company_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_sync_company_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_sync_company_payload_proto_goTypes = []interface{}{
	(GetSyncCompanyReq_Sort)(0),         // 0: sso.service.v1.GetSyncCompanyReq.Sort
	(GetSyncCompanyReqDirection)(0),     // 1: sso.service.v1.GetSyncCompanyReq.direction
	(FileGetSyncCompanyReq_Formats)(0),  // 2: sso.service.v1.FileGetSyncCompanyReq.Formats
	(FileGetSyncCompanyReqDirection)(0), // 3: sso.service.v1.FileGetSyncCompanyReq.direction
	(*CreateSyncCompanyTaskReq)(nil),    // 4: sso.service.v1.CreateSyncCompanyTaskReq
	(*WriteSyncCompanyTask)(nil),        // 5: sso.service.v1.WriteSyncCompanyTask
	(*CreateSyncCompanyTaskRes)(nil),    // 6: sso.service.v1.CreateSyncCompanyTaskRes
	(*ReadSyncCompanyTask)(nil),         // 7: sso.service.v1.ReadSyncCompanyTask
	(*ListSyncCompanyTaskRes)(nil),      // 8: sso.service.v1.ListSyncCompanyTaskRes
	(*GetSyncCompanyTaskRes)(nil),       // 9: sso.service.v1.GetSyncCompanyTaskRes
	(*ListSyncCompanyRes)(nil),          // 10: sso.service.v1.ListSyncCompanyRes
	(*SetSyncCompanyRes)(nil),           // 11: sso.service.v1.SetSyncCompanyRes
	(*GetSyncCompanyReq)(nil),           // 12: sso.service.v1.GetSyncCompanyReq
	(*GetSyncCompanyFilter)(nil),        // 13: sso.service.v1.GetSyncCompanyFilter
	(*GetSyncCompanyRes)(nil),           // 14: sso.service.v1.GetSyncCompanyRes
	(*SyncCompanyData)(nil),             // 15: sso.service.v1.SyncCompanyData
	(*GetSyncCompanyDetailRes)(nil),     // 16: sso.service.v1.GetSyncCompanyDetailRes
	(*Company)(nil),                     // 17: sso.service.v1.company
	(*FileGetSyncCompanyReq)(nil),       // 18: sso.service.v1.FileGetSyncCompanyReq
	(*Additionals)(nil),                 // 19: sso.service.v1.Additionals
	(*CBMCompany)(nil),                  // 20: sso.service.v1.CBMCompany
	(*SSOSyncCompany)(nil),              // 21: sso.service.v1.SSOSyncCompany
	(*Task)(nil),                        // 22: sso.service.v1.Task
	(*Pagination)(nil),                  // 23: sso.service.v1.Pagination
	(*timestamppb.Timestamp)(nil),       // 24: google.protobuf.Timestamp
}
var file_sync_company_payload_proto_depIdxs = []int32{
	5,  // 0: sso.service.v1.CreateSyncCompanyTaskReq.data:type_name -> sso.service.v1.WriteSyncCompanyTask
	19, // 1: sso.service.v1.WriteSyncCompanyTask.additionals:type_name -> sso.service.v1.Additionals
	20, // 2: sso.service.v1.WriteSyncCompanyTask.dataCBM:type_name -> sso.service.v1.CBMCompany
	21, // 3: sso.service.v1.WriteSyncCompanyTask.company:type_name -> sso.service.v1.SSOSyncCompany
	22, // 4: sso.service.v1.CreateSyncCompanyTaskRes.data:type_name -> sso.service.v1.Task
	21, // 5: sso.service.v1.ReadSyncCompanyTask.company:type_name -> sso.service.v1.SSOSyncCompany
	19, // 6: sso.service.v1.ReadSyncCompanyTask.additionals:type_name -> sso.service.v1.Additionals
	22, // 7: sso.service.v1.ReadSyncCompanyTask.Task:type_name -> sso.service.v1.Task
	20, // 8: sso.service.v1.ReadSyncCompanyTask.dataCBM:type_name -> sso.service.v1.CBMCompany
	7,  // 9: sso.service.v1.ListSyncCompanyTaskRes.data:type_name -> sso.service.v1.ReadSyncCompanyTask
	23, // 10: sso.service.v1.ListSyncCompanyTaskRes.pagination:type_name -> sso.service.v1.Pagination
	7,  // 11: sso.service.v1.GetSyncCompanyTaskRes.data:type_name -> sso.service.v1.ReadSyncCompanyTask
	21, // 12: sso.service.v1.ListSyncCompanyRes.data:type_name -> sso.service.v1.SSOSyncCompany
	23, // 13: sso.service.v1.ListSyncCompanyRes.pagination:type_name -> sso.service.v1.Pagination
	21, // 14: sso.service.v1.SetSyncCompanyRes.data:type_name -> sso.service.v1.SSOSyncCompany
	0,  // 15: sso.service.v1.GetSyncCompanyReq.sort:type_name -> sso.service.v1.GetSyncCompanyReq.Sort
	1,  // 16: sso.service.v1.GetSyncCompanyReq.dir:type_name -> sso.service.v1.GetSyncCompanyReq.direction
	13, // 17: sso.service.v1.GetSyncCompanyReq.filter:type_name -> sso.service.v1.GetSyncCompanyFilter
	24, // 18: sso.service.v1.GetSyncCompanyFilter.syncDate:type_name -> google.protobuf.Timestamp
	15, // 19: sso.service.v1.GetSyncCompanyRes.data:type_name -> sso.service.v1.SyncCompanyData
	23, // 20: sso.service.v1.GetSyncCompanyRes.pagination:type_name -> sso.service.v1.Pagination
	24, // 21: sso.service.v1.SyncCompanyData.syncDate:type_name -> google.protobuf.Timestamp
	24, // 22: sso.service.v1.SyncCompanyData.syncRequestDate:type_name -> google.protobuf.Timestamp
	7,  // 23: sso.service.v1.GetSyncCompanyDetailRes.data:type_name -> sso.service.v1.ReadSyncCompanyTask
	17, // 24: sso.service.v1.GetSyncCompanyDetailRes.company:type_name -> sso.service.v1.company
	2,  // 25: sso.service.v1.FileGetSyncCompanyReq.fileFormat:type_name -> sso.service.v1.FileGetSyncCompanyReq.Formats
	0,  // 26: sso.service.v1.FileGetSyncCompanyReq.sort:type_name -> sso.service.v1.GetSyncCompanyReq.Sort
	3,  // 27: sso.service.v1.FileGetSyncCompanyReq.dir:type_name -> sso.service.v1.FileGetSyncCompanyReq.direction
	13, // 28: sso.service.v1.FileGetSyncCompanyReq.filter:type_name -> sso.service.v1.GetSyncCompanyFilter
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_sync_company_payload_proto_init() }
func file_sync_company_payload_proto_init() {
	if File_sync_company_payload_proto != nil {
		return
	}
	file_sso_gorm_db_proto_init()
	file_sso_payload_proto_init()
	file_sync_user_payload_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sync_company_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSyncCompanyTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSyncCompanyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSyncCompanyTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSyncCompanyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSyncCompanyTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCompanyTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSyncCompanyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSyncCompanyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCompanyFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCompanyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCompanyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCompanyDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_company_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileGetSyncCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sync_company_payload_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sync_company_payload_proto_goTypes,
		DependencyIndexes: file_sync_company_payload_proto_depIdxs,
		EnumInfos:         file_sync_company_payload_proto_enumTypes,
		MessageInfos:      file_sync_company_payload_proto_msgTypes,
	}.Build()
	File_sync_company_payload_proto = out.File
	file_sync_company_payload_proto_rawDesc = nil
	file_sync_company_payload_proto_goTypes = nil
	file_sync_company_payload_proto_depIdxs = nil
}
