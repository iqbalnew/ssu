// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: swift_gorm_db.proto

package pb

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemittanceTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID                        uint64                 `protobuf:"varint,1,opt,name=dataID,proto3" json:"dataID,omitempty"`
	AMOUNT_ORI                    string                 `protobuf:"bytes,2,opt,name=AMOUNT_ORI,json=AMOUNTORI,proto3" json:"AMOUNT_ORI,omitempty"`                                                         // "AMOUNT_ORI": "7.00",
	DEBIT_ACCOUNT                 string                 `protobuf:"bytes,3,opt,name=DEBIT_ACCOUNT,json=DEBITACCOUNT,proto3" json:"DEBIT_ACCOUNT,omitempty"`                                                // "DEBIT_ACCOUNT": "001901001158306",
	DEBIT_AMOUNT                  string                 `protobuf:"bytes,4,opt,name=DEBIT_AMOUNT,json=DEBITAMOUNT,proto3" json:"DEBIT_AMOUNT,omitempty"`                                                   // "DEBIT_AMOUNT": "106148.85",
	DEBIT_ACCOUNT_MAIN            string                 `protobuf:"bytes,5,opt,name=DEBIT_ACCOUNT_MAIN,json=DEBITACCOUNTMAIN,proto3" json:"DEBIT_ACCOUNT_MAIN,omitempty"`                                  // "DEBIT_ACCOUNT_MAIN" : "020618000018501",
	FEE_ACCOUNT_CHANNEL           string                 `protobuf:"bytes,6,opt,name=FEE_ACCOUNT_CHANNEL,json=FEEACCOUNTCHANNEL,proto3" json:"FEE_ACCOUNT_CHANNEL,omitempty"`                               // "FEE_ACCOUNT_CHANNEL": "1003200310",
	FEE_DEBIT_AMOUNT_CHANNEL      string                 `protobuf:"bytes,7,opt,name=FEE_DEBIT_AMOUNT_CHANNEL,json=FEEDEBITAMOUNTCHANNEL,proto3" json:"FEE_DEBIT_AMOUNT_CHANNEL,omitempty"`                 // "FEE_DEBIT_AMOUNT_CHANNEL": "500000.00",
	FEE_CREDIT_AMOUNT_CHANNEL     string                 `protobuf:"bytes,8,opt,name=FEE_CREDIT_AMOUNT_CHANNEL,json=FEECREDITAMOUNTCHANNEL,proto3" json:"FEE_CREDIT_AMOUNT_CHANNEL,omitempty"`              // "FEE_CREDIT_AMOUNT_CHANNEL":"500000.00",
	FEE_CURRENCY_CHANNEL          string                 `protobuf:"bytes,9,opt,name=FEE_CURRENCY_CHANNEL,json=FEECURRENCYCHANNEL,proto3" json:"FEE_CURRENCY_CHANNEL,omitempty"`                            // "FEE_CURRENCY_CHANNEL": "IDR",
	TELLERID_KCBO                 string                 `protobuf:"bytes,10,opt,name=TELLERID_KCBO,json=TELLERIDKCBO,proto3" json:"TELLERID_KCBO,omitempty"`                                               // "TELLERID_KCBO":"0374891",
	BOOK_RATE_BUY                 string                 `protobuf:"bytes,11,opt,name=BOOK_RATE_BUY,json=BOOKRATEBUY,proto3" json:"BOOK_RATE_BUY,omitempty"`                                                // "BOOK_RATE_BUY": "1.00",
	BOOK_RATE_SELL                string                 `protobuf:"bytes,12,opt,name=BOOK_RATE_SELL,json=BOOKRATESELL,proto3" json:"BOOK_RATE_SELL,omitempty"`                                             // "BOOK_RATE_SELL": "10000",
	REMARK2                       string                 `protobuf:"bytes,13,opt,name=REMARK2,proto3" json:"REMARK2,omitempty"`                                                                             // "REMARK2": "REMARK2_COUNTERPART",
	REMARK3                       string                 `protobuf:"bytes,14,opt,name=REMARK3,proto3" json:"REMARK3,omitempty"`                                                                             // "REMARK3": "REMARK3_COUNTERPART",
	DEAL_CODE                     string                 `protobuf:"bytes,15,opt,name=DEAL_CODE,json=DEALCODE,proto3" json:"DEAL_CODE,omitempty"`                                                           // "DEAL_CODE": "O0316358",
	COUNTERPART                   string                 `protobuf:"bytes,16,opt,name=COUNTERPART,proto3" json:"COUNTERPART,omitempty"`                                                                     // "COUNTERPART": "BRICAMS",
	ROUTING                       string                 `protobuf:"bytes,17,opt,name=ROUTING,proto3" json:"ROUTING,omitempty"`                                                                             // "ROUTING": "SWIFT",
	TRANSACTION_ID                string                 `protobuf:"bytes,18,opt,name=TRANSACTION_ID,json=TRANSACTIONID,proto3" json:"TRANSACTION_ID,omitempty"`                                            // "TRANSACTION_ID": "H2022032203",
	USER_TRANSACTION              string                 `protobuf:"bytes,19,opt,name=USER_TRANSACTION,json=USERTRANSACTION,proto3" json:"USER_TRANSACTION,omitempty"`                                      // "USER_TRANSACTION": "HANS",
	USER_TRANSACTION_BRANCH_CODE  string                 `protobuf:"bytes,20,opt,name=USER_TRANSACTION_BRANCH_CODE,json=USERTRANSACTIONBRANCHCODE,proto3" json:"USER_TRANSACTION_BRANCH_CODE,omitempty"`    // "USER_TRANSACTION_BRANCH_CODE": "020601",
	ACCOUNT_NUMBER                string                 `protobuf:"bytes,21,opt,name=ACCOUNT_NUMBER,json=ACCOUNTNUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`                                            // "ACCOUNT_NUMBER": "1223113215555",
	CHARGES_TYPE                  string                 `protobuf:"bytes,22,opt,name=CHARGES_TYPE,json=CHARGESTYPE,proto3" json:"CHARGES_TYPE,omitempty"`                                                  // "CHARGES_TYPE": "OUR",
	BENEFICIARY_BANK_CODE         string                 `protobuf:"bytes,23,opt,name=BENEFICIARY_BANK_CODE,json=BENEFICIARYBANKCODE,proto3" json:"BENEFICIARY_BANK_CODE,omitempty"`                        // "BENEFICIARY_BANK_CODE": "AERIUS33XXX",
	BENEFICIARY_BANK_NAME         string                 `protobuf:"bytes,24,opt,name=BENEFICIARY_BANK_NAME,json=BENEFICIARYBANKNAME,proto3" json:"BENEFICIARY_BANK_NAME,omitempty"`                        // "BENEFICIARY_BANK_NAME": "AMERIS BANK",
	BENEFICIARY_BANK_ADDRESS      string                 `protobuf:"bytes,25,opt,name=BENEFICIARY_BANK_ADDRESS,json=BENEFICIARYBANKADDRESS,proto3" json:"BENEFICIARY_BANK_ADDRESS,omitempty"`               // "BENEFICIARY_BANK_ADDRESS": "1300 MORRIS DRIVE",
	BENEFICIARY_BANK_CITY         string                 `protobuf:"bytes,26,opt,name=BENEFICIARY_BANK_CITY,json=BENEFICIARYBANKCITY,proto3" json:"BENEFICIARY_BANK_CITY,omitempty"`                        // "BENEFICIARY_BANK_CITY": "CHESTERBROOK,PA",
	BENEFICIARY_BANK_COUNTRY_CODE string                 `protobuf:"bytes,27,opt,name=BENEFICIARY_BANK_COUNTRY_CODE,json=BENEFICIARYBANKCOUNTRYCODE,proto3" json:"BENEFICIARY_BANK_COUNTRY_CODE,omitempty"` // "BENEFICIARY_BANK_COUNTRY_CODE": "US",
	BENEFICIARY_ID_TYPE           string                 `protobuf:"bytes,28,opt,name=BENEFICIARY_ID_TYPE,json=BENEFICIARYIDTYPE,proto3" json:"BENEFICIARY_ID_TYPE,omitempty"`                              // "BENEFICIARY_ID_TYPE": "1",
	BENEFICIARY_ID_NUMBER         string                 `protobuf:"bytes,29,opt,name=BENEFICIARY_ID_NUMBER,json=BENEFICIARYIDNUMBER,proto3" json:"BENEFICIARY_ID_NUMBER,omitempty"`                        // "BENEFICIARY_ID_NUMBER": "3318101912900004",
	BENEFICIARY_NAME              string                 `protobuf:"bytes,30,opt,name=BENEFICIARY_NAME,json=BENEFICIARYNAME,proto3" json:"BENEFICIARY_NAME,omitempty"`                                      // "BENEFICIARY_NAME": "FERRY MARK",
	BENEFICIARY_ADDRESS           string                 `protobuf:"bytes,31,opt,name=BENEFICIARY_ADDRESS,json=BENEFICIARYADDRESS,proto3" json:"BENEFICIARY_ADDRESS,omitempty"`                             // "BENEFICIARY_ADDRESS": "24 STREET",
	BENEFICIARY_CITY              string                 `protobuf:"bytes,32,opt,name=BENEFICIARY_CITY,json=BENEFICIARYCITY,proto3" json:"BENEFICIARY_CITY,omitempty"`                                      // "BENEFICIARY_CITY": "ALASKA",
	BENEFICIARY_STATE_PROVINCE    string                 `protobuf:"bytes,33,opt,name=BENEFICIARY_STATE_PROVINCE,json=BENEFICIARYSTATEPROVINCE,proto3" json:"BENEFICIARY_STATE_PROVINCE,omitempty"`         // "BENEFICIARY_STATE_PROVINCE": "ALASKA",
	BENEFICIARY_POSTCODE          string                 `protobuf:"bytes,34,opt,name=BENEFICIARY_POSTCODE,json=BENEFICIARYPOSTCODE,proto3" json:"BENEFICIARY_POSTCODE,omitempty"`                          // "BENEFICIARY_POSTCODE": "50144",
	BENEFICIARY_COUNTRY_CODE      string                 `protobuf:"bytes,35,opt,name=BENEFICIARY_COUNTRY_CODE,json=BENEFICIARYCOUNTRYCODE,proto3" json:"BENEFICIARY_COUNTRY_CODE,omitempty"`               // "BENEFICIARY_COUNTRY_CODE": "US",
	BENEFICIARY_PHONE_CODE        string                 `protobuf:"bytes,36,opt,name=BENEFICIARY_PHONE_CODE,json=BENEFICIARYPHONECODE,proto3" json:"BENEFICIARY_PHONE_CODE,omitempty"`                     // "BENEFICIARY_PHONE_CODE": "852",
	BENEFICIARY_PHONE             string                 `protobuf:"bytes,37,opt,name=BENEFICIARY_PHONE,json=BENEFICIARYPHONE,proto3" json:"BENEFICIARY_PHONE,omitempty"`                                   // "BENEFICIARY_PHONE": "081792226376",
	BENEFICIARY_EMAIL             string                 `protobuf:"bytes,38,opt,name=BENEFICIARY_EMAIL,json=BENEFICIARYEMAIL,proto3" json:"BENEFICIARY_EMAIL,omitempty"`                                   // "BENEFICIARY_EMAIL": "ELABRAMBRI@GMAIL.COM",
	BENEFICIARY_TYPE              string                 `protobuf:"bytes,39,opt,name=BENEFICIARY_TYPE,json=BENEFICIARYTYPE,proto3" json:"BENEFICIARY_TYPE,omitempty"`                                      // "BENEFICIARY_TYPE": "1",
	BENEFICIARY_GENDER            string                 `protobuf:"bytes,40,opt,name=BENEFICIARY_GENDER,json=BENEFICIARYGENDER,proto3" json:"BENEFICIARY_GENDER,omitempty"`                                // "BENEFICIARY_GENDER": "1",
	BENEFICIARY_RELATIONSHIP      string                 `protobuf:"bytes,41,opt,name=BENEFICIARY_RELATIONSHIP,json=BENEFICIARYRELATIONSHIP,proto3" json:"BENEFICIARY_RELATIONSHIP,omitempty"`              // "BENEFICIARY_RELATIONSHIP": "1",
	CURRENCY_ORI                  string                 `protobuf:"bytes,42,opt,name=CURRENCY_ORI,json=CURRENCYORI,proto3" json:"CURRENCY_ORI,omitempty"`                                                  // "CURRENCY_ORI": "USD",
	SENDER_ID_TYPE                string                 `protobuf:"bytes,43,opt,name=SENDER_ID_TYPE,json=SENDERIDTYPE,proto3" json:"SENDER_ID_TYPE,omitempty"`                                             // "SENDER_ID_TYPE": "1",
	SENDER_ID_NUMBER              string                 `protobuf:"bytes,44,opt,name=SENDER_ID_NUMBER,json=SENDERIDNUMBER,proto3" json:"SENDER_ID_NUMBER,omitempty"`                                       // "SENDER_ID_NUMBER": "00835345345345",
	SENDER_ID_ISSUE_DATE          string                 `protobuf:"bytes,45,opt,name=SENDER_ID_ISSUE_DATE,json=SENDERIDISSUEDATE,proto3" json:"SENDER_ID_ISSUE_DATE,omitempty"`                            // "SENDER_ID_ISSUE_DATE": "2020-08-18",
	SENDER_ID_EXPIRED_DATE        string                 `protobuf:"bytes,46,opt,name=SENDER_ID_EXPIRED_DATE,json=SENDERIDEXPIREDDATE,proto3" json:"SENDER_ID_EXPIRED_DATE,omitempty"`                      // "SENDER_ID_EXPIRED_DATE": "2020-09-18",
	SENDER_NAME                   string                 `protobuf:"bytes,47,opt,name=SENDER_NAME,json=SENDERNAME,proto3" json:"SENDER_NAME,omitempty"`                                                     // "SENDER_NAME": "BANGKIT NGABDIANTO OTHER",
	SENDER_ADDRESS                string                 `protobuf:"bytes,48,opt,name=SENDER_ADDRESS,json=SENDERADDRESS,proto3" json:"SENDER_ADDRESS,omitempty"`                                            // "SENDER_ADDRESS": "JL HARSONO RM",
	SENDER_CITY                   string                 `protobuf:"bytes,49,opt,name=SENDER_CITY,json=SENDERCITY,proto3" json:"SENDER_CITY,omitempty"`                                                     // "SENDER_CITY": "DKI JAKARTA",
	SENDER_STATE_PROVINCE         string                 `protobuf:"bytes,50,opt,name=SENDER_STATE_PROVINCE,json=SENDERSTATEPROVINCE,proto3" json:"SENDER_STATE_PROVINCE,omitempty"`                        // "SENDER_STATE_PROVINCE": "JAKARTA SELATAN",
	SENDER_POSTCODE               string                 `protobuf:"bytes,51,opt,name=SENDER_POSTCODE,json=SENDERPOSTCODE,proto3" json:"SENDER_POSTCODE,omitempty"`                                         // "SENDER_POSTCODE": "50144",
	SENDER_COUNTRY_CODE           string                 `protobuf:"bytes,52,opt,name=SENDER_COUNTRY_CODE,json=SENDERCOUNTRYCODE,proto3" json:"SENDER_COUNTRY_CODE,omitempty"`                              // "SENDER_COUNTRY_CODE": "1",
	SENDER_DOB                    string                 `protobuf:"bytes,53,opt,name=SENDER_DOB,json=SENDERDOB,proto3" json:"SENDER_DOB,omitempty"`                                                        // "SENDER_DOB": "1990-01-22",
	SENDER_PHONE_CODE             string                 `protobuf:"bytes,54,opt,name=SENDER_PHONE_CODE,json=SENDERPHONECODE,proto3" json:"SENDER_PHONE_CODE,omitempty"`                                    // "SENDER_PHONE_CODE": "62",
	SENDER_PHONE                  string                 `protobuf:"bytes,55,opt,name=SENDER_PHONE,json=SENDERPHONE,proto3" json:"SENDER_PHONE,omitempty"`                                                  // "SENDER_PHONE": "6281781112353",
	SENDER_EMAIL                  string                 `protobuf:"bytes,56,opt,name=SENDER_EMAIL,json=SENDEREMAIL,proto3" json:"SENDER_EMAIL,omitempty"`                                                  // "SENDER_EMAIL": "ELABRAMBRI@BRILIAN.BRI.CO.ID",
	SENDER_TYPE                   string                 `protobuf:"bytes,57,opt,name=SENDER_TYPE,json=SENDERTYPE,proto3" json:"SENDER_TYPE,omitempty"`                                                     // "SENDER_TYPE": "1",
	SENDER_SOURCE_OF_FUND         string                 `protobuf:"bytes,58,opt,name=SENDER_SOURCE_OF_FUND,json=SENDERSOURCEOFFUND,proto3" json:"SENDER_SOURCE_OF_FUND,omitempty"`                         // "SENDER_SOURCE_OF_FUND": "2",
	SENDER_BIRTH_CITY             string                 `protobuf:"bytes,59,opt,name=SENDER_BIRTH_CITY,json=SENDERBIRTHCITY,proto3" json:"SENDER_BIRTH_CITY,omitempty"`                                    // "SENDER_BIRTH_CITY": "153",
	SENDER_POSITION               string                 `protobuf:"bytes,60,opt,name=SENDER_POSITION,json=SENDERPOSITION,proto3" json:"SENDER_POSITION,omitempty"`                                         // "SENDER_POSITION": "1",
	SENDER_BIRTH_COUNTRY          string                 `protobuf:"bytes,61,opt,name=SENDER_BIRTH_COUNTRY,json=SENDERBIRTHCOUNTRY,proto3" json:"SENDER_BIRTH_COUNTRY,omitempty"`                           // "SENDER_BIRTH_COUNTRY": "ID",
	SENDER_WORKING_STATUS         string                 `protobuf:"bytes,62,opt,name=SENDER_WORKING_STATUS,json=SENDERWORKINGSTATUS,proto3" json:"SENDER_WORKING_STATUS,omitempty"`                        // "SENDER_WORKING_STATUS": "1",
	SENDER_PROFESSION             string                 `protobuf:"bytes,63,opt,name=SENDER_PROFESSION,json=SENDERPROFESSION,proto3" json:"SENDER_PROFESSION,omitempty"`                                   // "SENDER_PROFESSION": "1",
	SENDER_CITIZENSHIP_COUNTRY    string                 `protobuf:"bytes,64,opt,name=SENDER_CITIZENSHIP_COUNTRY,json=SENDERCITIZENSHIPCOUNTRY,proto3" json:"SENDER_CITIZENSHIP_COUNTRY,omitempty"`         // "SENDER_CITIZENSHIP_COUNTRY": "ID",
	SENDER_GENDER                 string                 `protobuf:"bytes,65,opt,name=SENDER_GENDER,json=SENDERGENDER,proto3" json:"SENDER_GENDER,omitempty"`                                               // "SENDER_GENDER": "1",
	TRANSACTION_PURPOSE           string                 `protobuf:"bytes,66,opt,name=TRANSACTION_PURPOSE,json=TRANSACTIONPURPOSE,proto3" json:"TRANSACTION_PURPOSE,omitempty"`                             // "TRANSACTION_PURPOSE": "17",
	INTENDED_USE                  string                 `protobuf:"bytes,67,opt,name=INTENDED_USE,json=INTENDEDUSE,proto3" json:"INTENDED_USE,omitempty"`                                                  // "INTENDED_USE": "1"
	TICKET_NUMBER                 string                 `protobuf:"bytes,68,opt,name=TICKET_NUMBER,json=TICKETNUMBER,proto3" json:"TICKET_NUMBER,omitempty"`                                               // "TICKET_NUMBER"
	SendDate                      *timestamppb.Timestamp `protobuf:"bytes,69,opt,name=sendDate,proto3" json:"sendDate,omitempty"`
	CompanyID                     string                 `protobuf:"bytes,70,opt,name=companyID,proto3" json:"companyID,omitempty"`
	MakerRoleID                   uint64                 `protobuf:"varint,71,opt,name=makerRoleID,proto3" json:"makerRoleID,omitempty"`
	DebitAccountID                uint64                 `protobuf:"varint,72,opt,name=debitAccountID,proto3" json:"debitAccountID,omitempty"`
	DebitAccountAlias             string                 `protobuf:"bytes,75,opt,name=debitAccountAlias,proto3" json:"debitAccountAlias,omitempty"`
	DebitCurrencyID               string                 `protobuf:"bytes,73,opt,name=debitCurrencyID,proto3" json:"debitCurrencyID,omitempty"`
	FileAttachment                string                 `protobuf:"bytes,74,opt,name=fileAttachment,proto3" json:"fileAttachment,omitempty"`
	ScheduleTransaction           string                 `protobuf:"bytes,76,opt,name=scheduleTransaction,proto3" json:"scheduleTransaction,omitempty"`
	SelectedRoutePartner          string                 `protobuf:"bytes,77,opt,name=selectedRoutePartner,proto3" json:"selectedRoutePartner,omitempty"`
	BeneficiaryEmails             string                 `protobuf:"bytes,78,opt,name=beneficiaryEmails,proto3" json:"beneficiaryEmails,omitempty"`
	TransactionResponse           string                 `protobuf:"bytes,79,opt,name=transactionResponse,proto3" json:"transactionResponse,omitempty"`
	CompletedDate                 string                 `protobuf:"bytes,80,opt,name=completedDate,proto3" json:"completedDate,omitempty"`
	TransactionStatus             string                 `protobuf:"bytes,90,opt,name=transactionStatus,proto3" json:"transactionStatus,omitempty"`
	TaskID                        uint64                 `protobuf:"varint,91,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TransactionResponseMessage    string                 `protobuf:"bytes,92,opt,name=transactionResponseMessage,proto3" json:"transactionResponseMessage,omitempty"`
	CheckStatusResponse           string                 `protobuf:"bytes,93,opt,name=checkStatusResponse,proto3" json:"checkStatusResponse,omitempty"`
	LastChecked                   string                 `protobuf:"bytes,94,opt,name=lastChecked,proto3" json:"lastChecked,omitempty"`
	BeneficiaryCountryName        string                 `protobuf:"bytes,95,opt,name=beneficiaryCountryName,proto3" json:"beneficiaryCountryName,omitempty"`
	TransactionSvcId              uint64                 `protobuf:"varint,96,opt,name=transaction_svc_id,json=transactionSvcId,proto3" json:"transaction_svc_id,omitempty"`
	CreatedByName                 string                 `protobuf:"bytes,101,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	CreatedAt                     *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt                     *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *RemittanceTransaction) Reset() {
	*x = RemittanceTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swift_gorm_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemittanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemittanceTransaction) ProtoMessage() {}

func (x *RemittanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_swift_gorm_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemittanceTransaction.ProtoReflect.Descriptor instead.
func (*RemittanceTransaction) Descriptor() ([]byte, []int) {
	return file_swift_gorm_db_proto_rawDescGZIP(), []int{0}
}

func (x *RemittanceTransaction) GetDataID() uint64 {
	if x != nil {
		return x.DataID
	}
	return 0
}

func (x *RemittanceTransaction) GetAMOUNT_ORI() string {
	if x != nil {
		return x.AMOUNT_ORI
	}
	return ""
}

func (x *RemittanceTransaction) GetDEBIT_ACCOUNT() string {
	if x != nil {
		return x.DEBIT_ACCOUNT
	}
	return ""
}

func (x *RemittanceTransaction) GetDEBIT_AMOUNT() string {
	if x != nil {
		return x.DEBIT_AMOUNT
	}
	return ""
}

func (x *RemittanceTransaction) GetDEBIT_ACCOUNT_MAIN() string {
	if x != nil {
		return x.DEBIT_ACCOUNT_MAIN
	}
	return ""
}

func (x *RemittanceTransaction) GetFEE_ACCOUNT_CHANNEL() string {
	if x != nil {
		return x.FEE_ACCOUNT_CHANNEL
	}
	return ""
}

func (x *RemittanceTransaction) GetFEE_DEBIT_AMOUNT_CHANNEL() string {
	if x != nil {
		return x.FEE_DEBIT_AMOUNT_CHANNEL
	}
	return ""
}

func (x *RemittanceTransaction) GetFEE_CREDIT_AMOUNT_CHANNEL() string {
	if x != nil {
		return x.FEE_CREDIT_AMOUNT_CHANNEL
	}
	return ""
}

func (x *RemittanceTransaction) GetFEE_CURRENCY_CHANNEL() string {
	if x != nil {
		return x.FEE_CURRENCY_CHANNEL
	}
	return ""
}

func (x *RemittanceTransaction) GetTELLERID_KCBO() string {
	if x != nil {
		return x.TELLERID_KCBO
	}
	return ""
}

func (x *RemittanceTransaction) GetBOOK_RATE_BUY() string {
	if x != nil {
		return x.BOOK_RATE_BUY
	}
	return ""
}

func (x *RemittanceTransaction) GetBOOK_RATE_SELL() string {
	if x != nil {
		return x.BOOK_RATE_SELL
	}
	return ""
}

func (x *RemittanceTransaction) GetREMARK2() string {
	if x != nil {
		return x.REMARK2
	}
	return ""
}

func (x *RemittanceTransaction) GetREMARK3() string {
	if x != nil {
		return x.REMARK3
	}
	return ""
}

func (x *RemittanceTransaction) GetDEAL_CODE() string {
	if x != nil {
		return x.DEAL_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetCOUNTERPART() string {
	if x != nil {
		return x.COUNTERPART
	}
	return ""
}

func (x *RemittanceTransaction) GetROUTING() string {
	if x != nil {
		return x.ROUTING
	}
	return ""
}

func (x *RemittanceTransaction) GetTRANSACTION_ID() string {
	if x != nil {
		return x.TRANSACTION_ID
	}
	return ""
}

func (x *RemittanceTransaction) GetUSER_TRANSACTION() string {
	if x != nil {
		return x.USER_TRANSACTION
	}
	return ""
}

func (x *RemittanceTransaction) GetUSER_TRANSACTION_BRANCH_CODE() string {
	if x != nil {
		return x.USER_TRANSACTION_BRANCH_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *RemittanceTransaction) GetCHARGES_TYPE() string {
	if x != nil {
		return x.CHARGES_TYPE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_BANK_CODE() string {
	if x != nil {
		return x.BENEFICIARY_BANK_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_BANK_NAME() string {
	if x != nil {
		return x.BENEFICIARY_BANK_NAME
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_BANK_ADDRESS() string {
	if x != nil {
		return x.BENEFICIARY_BANK_ADDRESS
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_BANK_CITY() string {
	if x != nil {
		return x.BENEFICIARY_BANK_CITY
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_BANK_COUNTRY_CODE() string {
	if x != nil {
		return x.BENEFICIARY_BANK_COUNTRY_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_ID_TYPE() string {
	if x != nil {
		return x.BENEFICIARY_ID_TYPE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_ID_NUMBER() string {
	if x != nil {
		return x.BENEFICIARY_ID_NUMBER
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_NAME() string {
	if x != nil {
		return x.BENEFICIARY_NAME
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_ADDRESS() string {
	if x != nil {
		return x.BENEFICIARY_ADDRESS
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_CITY() string {
	if x != nil {
		return x.BENEFICIARY_CITY
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_STATE_PROVINCE() string {
	if x != nil {
		return x.BENEFICIARY_STATE_PROVINCE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_POSTCODE() string {
	if x != nil {
		return x.BENEFICIARY_POSTCODE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_COUNTRY_CODE() string {
	if x != nil {
		return x.BENEFICIARY_COUNTRY_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_PHONE_CODE() string {
	if x != nil {
		return x.BENEFICIARY_PHONE_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_PHONE() string {
	if x != nil {
		return x.BENEFICIARY_PHONE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_EMAIL() string {
	if x != nil {
		return x.BENEFICIARY_EMAIL
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_TYPE() string {
	if x != nil {
		return x.BENEFICIARY_TYPE
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_GENDER() string {
	if x != nil {
		return x.BENEFICIARY_GENDER
	}
	return ""
}

func (x *RemittanceTransaction) GetBENEFICIARY_RELATIONSHIP() string {
	if x != nil {
		return x.BENEFICIARY_RELATIONSHIP
	}
	return ""
}

func (x *RemittanceTransaction) GetCURRENCY_ORI() string {
	if x != nil {
		return x.CURRENCY_ORI
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_ID_TYPE() string {
	if x != nil {
		return x.SENDER_ID_TYPE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_ID_NUMBER() string {
	if x != nil {
		return x.SENDER_ID_NUMBER
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_ID_ISSUE_DATE() string {
	if x != nil {
		return x.SENDER_ID_ISSUE_DATE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_ID_EXPIRED_DATE() string {
	if x != nil {
		return x.SENDER_ID_EXPIRED_DATE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_NAME() string {
	if x != nil {
		return x.SENDER_NAME
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_ADDRESS() string {
	if x != nil {
		return x.SENDER_ADDRESS
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_CITY() string {
	if x != nil {
		return x.SENDER_CITY
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_STATE_PROVINCE() string {
	if x != nil {
		return x.SENDER_STATE_PROVINCE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_POSTCODE() string {
	if x != nil {
		return x.SENDER_POSTCODE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_COUNTRY_CODE() string {
	if x != nil {
		return x.SENDER_COUNTRY_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_DOB() string {
	if x != nil {
		return x.SENDER_DOB
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_PHONE_CODE() string {
	if x != nil {
		return x.SENDER_PHONE_CODE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_PHONE() string {
	if x != nil {
		return x.SENDER_PHONE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_EMAIL() string {
	if x != nil {
		return x.SENDER_EMAIL
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_TYPE() string {
	if x != nil {
		return x.SENDER_TYPE
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_SOURCE_OF_FUND() string {
	if x != nil {
		return x.SENDER_SOURCE_OF_FUND
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_BIRTH_CITY() string {
	if x != nil {
		return x.SENDER_BIRTH_CITY
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_POSITION() string {
	if x != nil {
		return x.SENDER_POSITION
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_BIRTH_COUNTRY() string {
	if x != nil {
		return x.SENDER_BIRTH_COUNTRY
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_WORKING_STATUS() string {
	if x != nil {
		return x.SENDER_WORKING_STATUS
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_PROFESSION() string {
	if x != nil {
		return x.SENDER_PROFESSION
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_CITIZENSHIP_COUNTRY() string {
	if x != nil {
		return x.SENDER_CITIZENSHIP_COUNTRY
	}
	return ""
}

func (x *RemittanceTransaction) GetSENDER_GENDER() string {
	if x != nil {
		return x.SENDER_GENDER
	}
	return ""
}

func (x *RemittanceTransaction) GetTRANSACTION_PURPOSE() string {
	if x != nil {
		return x.TRANSACTION_PURPOSE
	}
	return ""
}

func (x *RemittanceTransaction) GetINTENDED_USE() string {
	if x != nil {
		return x.INTENDED_USE
	}
	return ""
}

func (x *RemittanceTransaction) GetTICKET_NUMBER() string {
	if x != nil {
		return x.TICKET_NUMBER
	}
	return ""
}

func (x *RemittanceTransaction) GetSendDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SendDate
	}
	return nil
}

func (x *RemittanceTransaction) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *RemittanceTransaction) GetMakerRoleID() uint64 {
	if x != nil {
		return x.MakerRoleID
	}
	return 0
}

func (x *RemittanceTransaction) GetDebitAccountID() uint64 {
	if x != nil {
		return x.DebitAccountID
	}
	return 0
}

func (x *RemittanceTransaction) GetDebitAccountAlias() string {
	if x != nil {
		return x.DebitAccountAlias
	}
	return ""
}

func (x *RemittanceTransaction) GetDebitCurrencyID() string {
	if x != nil {
		return x.DebitCurrencyID
	}
	return ""
}

func (x *RemittanceTransaction) GetFileAttachment() string {
	if x != nil {
		return x.FileAttachment
	}
	return ""
}

func (x *RemittanceTransaction) GetScheduleTransaction() string {
	if x != nil {
		return x.ScheduleTransaction
	}
	return ""
}

func (x *RemittanceTransaction) GetSelectedRoutePartner() string {
	if x != nil {
		return x.SelectedRoutePartner
	}
	return ""
}

func (x *RemittanceTransaction) GetBeneficiaryEmails() string {
	if x != nil {
		return x.BeneficiaryEmails
	}
	return ""
}

func (x *RemittanceTransaction) GetTransactionResponse() string {
	if x != nil {
		return x.TransactionResponse
	}
	return ""
}

func (x *RemittanceTransaction) GetCompletedDate() string {
	if x != nil {
		return x.CompletedDate
	}
	return ""
}

func (x *RemittanceTransaction) GetTransactionStatus() string {
	if x != nil {
		return x.TransactionStatus
	}
	return ""
}

func (x *RemittanceTransaction) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *RemittanceTransaction) GetTransactionResponseMessage() string {
	if x != nil {
		return x.TransactionResponseMessage
	}
	return ""
}

func (x *RemittanceTransaction) GetCheckStatusResponse() string {
	if x != nil {
		return x.CheckStatusResponse
	}
	return ""
}

func (x *RemittanceTransaction) GetLastChecked() string {
	if x != nil {
		return x.LastChecked
	}
	return ""
}

func (x *RemittanceTransaction) GetBeneficiaryCountryName() string {
	if x != nil {
		return x.BeneficiaryCountryName
	}
	return ""
}

func (x *RemittanceTransaction) GetTransactionSvcId() uint64 {
	if x != nil {
		return x.TransactionSvcId
	}
	return 0
}

func (x *RemittanceTransaction) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *RemittanceTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RemittanceTransaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type NostroPriority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode string `protobuf:"bytes,1,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	OrderNumber  uint32 `protobuf:"varint,2,opt,name=orderNumber,proto3" json:"orderNumber,omitempty"`
}

func (x *NostroPriority) Reset() {
	*x = NostroPriority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swift_gorm_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NostroPriority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NostroPriority) ProtoMessage() {}

func (x *NostroPriority) ProtoReflect() protoreflect.Message {
	mi := &file_swift_gorm_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NostroPriority.ProtoReflect.Descriptor instead.
func (*NostroPriority) Descriptor() ([]byte, []int) {
	return file_swift_gorm_db_proto_rawDescGZIP(), []int{1}
}

func (x *NostroPriority) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *NostroPriority) GetOrderNumber() uint32 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

var File_swift_gorm_db_proto protoreflect.FileDescriptor

var file_swift_gorm_db_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x77, 0x69, 0x66, 0x74, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d,
	0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x2e, 0x0a, 0x15, 0x52,
	0x65, 0x6d, 0x69, 0x74, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28,
	0x01, 0x40, 0x01, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0a, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4f, 0x52, 0x49, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x09, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x4f, 0x52, 0x49,
	0x12, 0x39, 0x0a, 0x0d, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12,
	0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x44,
	0x45, 0x42, 0x49, 0x54, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x37, 0x0a, 0x0c, 0x44,
	0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0b, 0x44, 0x45, 0x42, 0x49, 0x54, 0x41, 0x4d,
	0x4f, 0x55, 0x4e, 0x54, 0x12, 0x42, 0x0a, 0x12, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x10, 0x44, 0x45, 0x42, 0x49, 0x54, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x4d, 0x41, 0x49, 0x4e, 0x12, 0x44, 0x0a, 0x13, 0x46, 0x45, 0x45, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x11, 0x46, 0x45, 0x45,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x12, 0x4d,
	0x0a, 0x18, 0x46, 0x45, 0x45, 0x5f, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x15, 0x46, 0x45, 0x45, 0x44, 0x45, 0x42, 0x49, 0x54,
	0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x12, 0x4f, 0x0a,
	0x19, 0x46, 0x45, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x16, 0x46, 0x45, 0x45, 0x43, 0x52, 0x45, 0x44, 0x49,
	0x54, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x12, 0x46,
	0x0a, 0x14, 0x46, 0x45, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9,
	0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x52, 0x12, 0x46, 0x45, 0x45, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x12, 0x39, 0x0a, 0x0d, 0x54, 0x45, 0x4c, 0x4c, 0x45, 0x52,
	0x49, 0x44, 0x5f, 0x4b, 0x43, 0x42, 0x4f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba,
	0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31,
	0x30, 0x30, 0x29, 0x52, 0x0c, 0x54, 0x45, 0x4c, 0x4c, 0x45, 0x52, 0x49, 0x44, 0x4b, 0x43, 0x42,
	0x4f, 0x12, 0x38, 0x0a, 0x0d, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x42,
	0x55, 0x59, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0b,
	0x42, 0x4f, 0x4f, 0x4b, 0x52, 0x41, 0x54, 0x45, 0x42, 0x55, 0x59, 0x12, 0x3a, 0x0a, 0x0e, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x42, 0x4f, 0x4f, 0x4b, 0x52,
	0x41, 0x54, 0x45, 0x53, 0x45, 0x4c, 0x4c, 0x12, 0x26, 0x0a, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52,
	0x4b, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xb9, 0x19, 0x08, 0x0a, 0x06,
	0x12, 0x04, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x32, 0x12,
	0x26, 0x0a, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xba, 0xb9, 0x19, 0x08, 0x0a, 0x06, 0x12, 0x04, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07,
	0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x33, 0x12, 0x31, 0x0a, 0x09, 0x44, 0x45, 0x41, 0x4c, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10,
	0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29,
	0x52, 0x08, 0x44, 0x45, 0x41, 0x4c, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x41, 0x52, 0x54, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x41,
	0x52, 0x54, 0x12, 0x2e, 0x0a, 0x07, 0x52, 0x4f, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x07, 0x52, 0x4f, 0x55, 0x54, 0x49,
	0x4e, 0x47, 0x12, 0x3b, 0x0a, 0x0e, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10,
	0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29,
	0x52, 0x0d, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x49, 0x44, 0x12,
	0x3f, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x0f, 0x55, 0x53, 0x45, 0x52, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x12, 0x55, 0x0a, 0x1c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x19, 0x55, 0x53,
	0x45, 0x52, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x42, 0x52, 0x41,
	0x4e, 0x43, 0x48, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x3b, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x53, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10,
	0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29,
	0x52, 0x0b, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x53, 0x54, 0x59, 0x50, 0x45, 0x12, 0x48, 0x0a,
	0x15, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x4e,
	0x4b, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9,
	0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x52, 0x13, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x42,
	0x41, 0x4e, 0x4b, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x48, 0x0a, 0x15, 0x42, 0x45, 0x4e, 0x45, 0x46,
	0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x42, 0x45,
	0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x42, 0x41, 0x4e, 0x4b, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x4e, 0x0a, 0x18, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59,
	0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x16, 0x42, 0x45, 0x4e, 0x45, 0x46,
	0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x42, 0x41, 0x4e, 0x4b, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x12, 0x48, 0x0a, 0x15, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59,
	0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x43, 0x49, 0x54, 0x59, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49,
	0x41, 0x52, 0x59, 0x42, 0x41, 0x4e, 0x4b, 0x43, 0x49, 0x54, 0x59, 0x12, 0x57, 0x0a, 0x1d, 0x42,
	0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x1a, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49,
	0x43, 0x49, 0x41, 0x52, 0x59, 0x42, 0x41, 0x4e, 0x4b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x43, 0x4f, 0x44, 0x45, 0x12, 0x44, 0x0a, 0x13, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49,
	0x41, 0x52, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x11, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43,
	0x49, 0x41, 0x52, 0x59, 0x49, 0x44, 0x54, 0x59, 0x50, 0x45, 0x12, 0x48, 0x0a, 0x15, 0x42, 0x45,
	0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x13, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x49, 0x44, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x12, 0x3f, 0x0a, 0x10, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49,
	0x41, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28,
	0x31, 0x30, 0x30, 0x29, 0x52, 0x0f, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52,
	0x59, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x45, 0x0a, 0x13, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43,
	0x49, 0x41, 0x52, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x12, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49,
	0x43, 0x49, 0x41, 0x52, 0x59, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x12, 0x3f, 0x0a, 0x10,
	0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x49, 0x54, 0x59,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0f, 0x42, 0x45,
	0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x43, 0x49, 0x54, 0x59, 0x12, 0x52, 0x0a,
	0x1a, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x18, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43,
	0x49, 0x41, 0x52, 0x59, 0x53, 0x54, 0x41, 0x54, 0x45, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43,
	0x45, 0x12, 0x47, 0x0a, 0x14, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59,
	0x5f, 0x50, 0x4f, 0x53, 0x54, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41,
	0x52, 0x59, 0x50, 0x4f, 0x53, 0x54, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x4e, 0x0a, 0x18, 0x42, 0x45,
	0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9,
	0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x52, 0x16, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x4a, 0x0a, 0x16, 0x42, 0x45,
	0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10,
	0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29,
	0x52, 0x14, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x50, 0x48, 0x4f,
	0x4e, 0x45, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x41, 0x0a, 0x11, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49,
	0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x10, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43,
	0x49, 0x41, 0x52, 0x59, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x12, 0x41, 0x0a, 0x11, 0x42, 0x45, 0x4e,
	0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x10, 0x42, 0x45, 0x4e, 0x45,
	0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x3f, 0x0a, 0x10,
	0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0f, 0x42, 0x45,
	0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x54, 0x59, 0x50, 0x45, 0x12, 0x43, 0x0a,
	0x12, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x47, 0x45, 0x4e,
	0x44, 0x45, 0x52, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x11, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x47, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x12, 0x4f, 0x0a, 0x18, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x17, 0x42, 0x45, 0x4e, 0x45,
	0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x48, 0x49, 0x50, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x4f, 0x52, 0x49, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x0b, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x4f, 0x52, 0x49, 0x12, 0x3a, 0x0a, 0x0e,
	0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x53, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x49, 0x44, 0x54, 0x59, 0x50, 0x45, 0x12, 0x3e, 0x0a, 0x10, 0x53, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0e, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x49, 0x44, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x45, 0x0a, 0x14, 0x53, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x11, 0x53, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x49, 0x44, 0x49, 0x53, 0x53, 0x55, 0x45, 0x44, 0x41, 0x54, 0x45, 0x12,
	0x49, 0x0a, 0x16, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x49, 0x44, 0x45,
	0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x44, 0x41, 0x54, 0x45, 0x12, 0x35, 0x0a, 0x0b, 0x53, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x3b, 0x0a, 0x0e, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x44, 0x52,
	0x45, 0x53, 0x53, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x0d, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x12, 0x35,
	0x0a, 0x0b, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x49, 0x54, 0x59, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x45,
	0x52, 0x43, 0x49, 0x54, 0x59, 0x12, 0x48, 0x0a, 0x15, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x53, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x45, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x12,
	0x3d, 0x0a, 0x0f, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x43, 0x4f,
	0x44, 0x45, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0e,
	0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x50, 0x4f, 0x53, 0x54, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x44,
	0x0a, 0x13, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19,
	0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30,
	0x29, 0x52, 0x11, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x43, 0x4f, 0x44, 0x45, 0x12, 0x33, 0x0a, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x44,
	0x4f, 0x42, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x09,
	0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x44, 0x4f, 0x42, 0x12, 0x40, 0x0a, 0x11, 0x53, 0x45, 0x4e,
	0x44, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0f, 0x53, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x37, 0x0a, 0x0c, 0x53,
	0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0b, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x50,
	0x48, 0x4f, 0x4e, 0x45, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10,
	0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29,
	0x52, 0x0b, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x35, 0x0a,
	0x0b, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x39, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x47, 0x0a, 0x15, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x12, 0x53, 0x45, 0x4e, 0x44, 0x45,
	0x52, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x4f, 0x46, 0x46, 0x55, 0x4e, 0x44, 0x12, 0x40, 0x0a,
	0x11, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x49, 0x52, 0x54, 0x48, 0x5f, 0x43, 0x49,
	0x54, 0x59, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0f,
	0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x42, 0x49, 0x52, 0x54, 0x48, 0x43, 0x49, 0x54, 0x59, 0x12,
	0x3d, 0x0a, 0x0f, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0e,
	0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x46,
	0x0a, 0x14, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x49, 0x52, 0x54, 0x48, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9,
	0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x52, 0x12, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x42, 0x49, 0x52, 0x54, 0x48, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x12, 0x48, 0x0a, 0x15, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x53, 0x45, 0x4e,
	0x44, 0x45, 0x52, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x12, 0x41, 0x0a, 0x11, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19,
	0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30,
	0x29, 0x52, 0x10, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x50, 0x52, 0x4f, 0x46, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x12, 0x52, 0x0a, 0x1a, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x49,
	0x54, 0x49, 0x5a, 0x45, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12,
	0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x18, 0x53,
	0x45, 0x4e, 0x44, 0x45, 0x52, 0x43, 0x49, 0x54, 0x49, 0x5a, 0x45, 0x4e, 0x53, 0x48, 0x49, 0x50,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x12, 0x39, 0x0a, 0x0d, 0x53, 0x45, 0x4e, 0x44, 0x45,
	0x52, 0x5f, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28,
	0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x47, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x12, 0x45, 0x0a, 0x13, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x12, 0x37, 0x0a, 0x0c, 0x49, 0x4e, 0x54,
	0x45, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x55,
	0x53, 0x45, 0x12, 0x39, 0x0a, 0x0d, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x0c, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x3e, 0x0a,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xba, 0xb9, 0x19,
	0x02, 0x0a, 0x00, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x40, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a,
	0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x40, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0e, 0x64, 0x65, 0x62, 0x69, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x48, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x40,
	0x01, 0x52, 0x0e, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0xb9,
	0x19, 0x12, 0x0a, 0x10, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x40, 0x01, 0x52, 0x11, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x65, 0x62, 0x69, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x49, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x40, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x4a, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x4c,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x13, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x41, 0x0a, 0x14, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba,
	0xb9, 0x19, 0x09, 0x0a, 0x07, 0x12, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x52, 0x14, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x11, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba,
	0xb9, 0x19, 0x09, 0x0a, 0x07, 0x12, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x52, 0x11, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3f, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0xb9,
	0x19, 0x09, 0x0a, 0x07, 0x12, 0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f, 0x12,
	0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x35, 0x30, 0x29, 0x40, 0x01, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f,
	0x12, 0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x35, 0x30, 0x29, 0x40, 0x01, 0x52,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x5b, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69,
	0x6e, 0x74, 0x40, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x1a,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xba, 0xb9, 0x19, 0x08, 0x0a, 0x06, 0x12, 0x04, 0x74, 0x65, 0x78, 0x74, 0x52, 0x1a,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0xb9, 0x19, 0x09, 0x0a, 0x07, 0x12,
	0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x52, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x12, 0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x35, 0x30, 0x29, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x5f, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x16, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x76, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x60, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0b, 0xba, 0xb9,
	0x19, 0x07, 0x0a, 0x05, 0x3a, 0x01, 0x30, 0x40, 0x01, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x63, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x17, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9,
	0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x43, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09,
	0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x3a, 0x1f, 0xba, 0xb9, 0x19, 0x1b, 0x08, 0x01, 0x1a, 0x17, 0x72, 0x65,
	0x6d, 0x69, 0x74, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x73, 0x74, 0x72, 0x6f,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16,
	0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x12, 0x0a, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28,
	0x35, 0x29, 0x28, 0x01, 0x40, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a,
	0x0b, 0x12, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x40, 0x01, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x19, 0xba, 0xb9, 0x19, 0x15, 0x08,
	0x01, 0x1a, 0x11, 0x6e, 0x6f, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_swift_gorm_db_proto_rawDescOnce sync.Once
	file_swift_gorm_db_proto_rawDescData = file_swift_gorm_db_proto_rawDesc
)

func file_swift_gorm_db_proto_rawDescGZIP() []byte {
	file_swift_gorm_db_proto_rawDescOnce.Do(func() {
		file_swift_gorm_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_swift_gorm_db_proto_rawDescData)
	})
	return file_swift_gorm_db_proto_rawDescData
}

var file_swift_gorm_db_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_swift_gorm_db_proto_goTypes = []interface{}{
	(*RemittanceTransaction)(nil), // 0: swift.service.v1.RemittanceTransaction
	(*NostroPriority)(nil),        // 1: swift.service.v1.NostroPriority
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_swift_gorm_db_proto_depIdxs = []int32{
	2, // 0: swift.service.v1.RemittanceTransaction.sendDate:type_name -> google.protobuf.Timestamp
	2, // 1: swift.service.v1.RemittanceTransaction.createdAt:type_name -> google.protobuf.Timestamp
	2, // 2: swift.service.v1.RemittanceTransaction.updatedAt:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_swift_gorm_db_proto_init() }
func file_swift_gorm_db_proto_init() {
	if File_swift_gorm_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_swift_gorm_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemittanceTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swift_gorm_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NostroPriority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swift_gorm_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_swift_gorm_db_proto_goTypes,
		DependencyIndexes: file_swift_gorm_db_proto_depIdxs,
		MessageInfos:      file_swift_gorm_db_proto_msgTypes,
	}.Build()
	File_swift_gorm_db_proto = out.File
	file_swift_gorm_db_proto_rawDesc = nil
	file_swift_gorm_db_proto_goTypes = nil
	file_swift_gorm_db_proto_depIdxs = nil
}
