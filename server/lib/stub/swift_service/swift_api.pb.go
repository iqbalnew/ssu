// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: swift_api.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swift_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swift_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_swift_api_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swift_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_swift_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_swift_api_proto_rawDescGZIP(), []int{1}
}

var File_swift_api_proto protoreflect.FileDescriptor

var file_swift_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74,
	0x74, 0x70, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x77,
	0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x57, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0xec, 0x1e, 0x0a, 0x0c, 0x53, 0x77, 0x69, 0x66, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xd3, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69,
	0x66, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x5d, 0x0a, 0x03, 0x41,
	0x6c, 0x6c, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x20, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x43, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x6e, 0x65,
	0x77, 0x20, 0x6f, 0x72, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x2c, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x69, 0x64, 0x20, 0x69,
	0x73, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x12, 0xe6, 0x01, 0x0a, 0x0a, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x68, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0f, 0x53, 0x65, 0x74, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x4a, 0x73, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73,
	0x6b, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x20, 0x27, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0xe2, 0x80, 0x99, 0x2c, 0x20, 0x27,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0xe2, 0x80, 0x99, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0xe2, 0x80, 0x99, 0x2c, 0x20, 0xe2, 0x80, 0x98, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0xe2, 0x80, 0x99, 0x12, 0x9e, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x29, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0d, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0xae, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x12, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77,
	0x69, 0x66, 0x74, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x2d, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0f, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x1a, 0x0f, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x99, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x29, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0d, 0x47, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x1a,
	0x0d, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xa8,
	0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x29, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x29,
	0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x47, 0x65, 0x74,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x0a, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2d, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x47, 0x65, 0x74, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x0f, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x53, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x13, 0x53,
	0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x45,
	0x53, 0x42, 0x12, 0x28, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x74,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73,
	0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x45, 0x53, 0x42, 0x12, 0x2f, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc4, 0x01,
	0x0a, 0x15, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x5f, 0x45, 0x53, 0x42, 0x12, 0x2a, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x77, 0x69, 0x66, 0x74, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2d, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2c, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x08, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x0a, 0x03, 0x45, 0x53, 0x42, 0x12, 0x13, 0x53, 0x57,
	0x49, 0x46, 0x54, 0x20, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x20, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45,
	0x52, 0x1a, 0x01, 0x2d, 0x12, 0xa5, 0x01, 0x0a, 0x0e, 0x4b, 0x75, 0x72, 0x73, 0x42, 0x52, 0x49,
	0x45, 0x46, 0x58, 0x5f, 0x45, 0x53, 0x42, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x72, 0x73, 0x42,
	0x52, 0x49, 0x45, 0x46, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73,
	0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x75, 0x72, 0x73, 0x42, 0x52, 0x49, 0x45, 0x46, 0x58, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x6b, 0x75, 0x72, 0x73, 0x2d, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x78, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x24, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x08, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x0a, 0x03, 0x45, 0x53, 0x42, 0x12, 0x0b, 0x4b, 0x55,
	0x52, 0x53, 0x20, 0x42, 0x52, 0x49, 0x45, 0x46, 0x58, 0x1a, 0x01, 0x2d, 0x12, 0xba, 0x01, 0x0a,
	0x12, 0x42, 0x52, 0x49, 0x47, 0x61, 0x74, 0x65, 0x5f, 0x4b, 0x75, 0x72, 0x73, 0x42, 0x52, 0x49,
	0x45, 0x46, 0x58, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x72, 0x73, 0x42, 0x52, 0x49, 0x45, 0x46,
	0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x52, 0x49, 0x47,
	0x61, 0x74, 0x65, 0x42, 0x52, 0x49, 0x65, 0x66, 0x78, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22,
	0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x67,
	0x61, 0x74, 0x65, 0x2f, 0x6b, 0x75, 0x72, 0x73, 0x2d, 0x62, 0x72, 0x69, 0x65, 0x66, 0x78, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x24, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x0a, 0x03, 0x45, 0x53, 0x42, 0x12, 0x0b, 0x4b, 0x55, 0x52, 0x53, 0x20,
	0x42, 0x52, 0x49, 0x45, 0x46, 0x58, 0x1a, 0x01, 0x2d, 0x12, 0xb3, 0x01, 0x0a, 0x0c, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x77, 0x69,
	0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75,
	0x72, 0x73, 0x42, 0x52, 0x49, 0x45, 0x46, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x75, 0x72, 0x73, 0x42, 0x52, 0x49, 0x45, 0x46, 0x58, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x32, 0x0a, 0x03, 0x41,
	0x6c, 0x6c, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x0a, 0x03, 0x45, 0x53,
	0x42, 0x12, 0x19, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x52, 0x61, 0x74, 0x65,
	0x20, 0x4b, 0x55, 0x52, 0x53, 0x20, 0x42, 0x52, 0x49, 0x45, 0x46, 0x58, 0x1a, 0x01, 0x2d, 0x12,
	0xaf, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x73, 0x74, 0x72, 0x6f, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x73, 0x74, 0x72, 0x6f, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x73, 0x74, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x6e, 0x6f, 0x73,
	0x74, 0x72, 0x6f, 0x2d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x1f, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x4e,
	0x6f, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x01,
	0x2d, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x53, 0x77, 0x69, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x45, 0x53, 0x42,
	0x12, 0x2f, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xf3, 0x01, 0x0a, 0x1a, 0x42, 0x52, 0x49, 0x47, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x52, 0x49, 0x47, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x52, 0x49,
	0x47, 0x61, 0x74, 0x65, 0x48, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77,
	0x69, 0x66, 0x74, 0x2f, 0x68, 0x61, 0x72, 0x64, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2d, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3c, 0x0a,
	0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x0a, 0x07,
	0x42, 0x52, 0x49, 0x47, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x42, 0x52, 0x49, 0x47, 0x41, 0x54, 0x45,
	0x20, 0x48, 0x41, 0x52, 0x44, 0x20, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x20, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x1a, 0x01, 0x2d, 0x62, 0x00, 0x12, 0xd9, 0x01, 0x0a, 0x19,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x6c, 0x12, 0x32, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x53, 0x69, 0x6e, 0x67, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x92, 0x41,
	0x26, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x20, 0x43, 0x48, 0x45, 0x43, 0x4b,
	0x45, 0x52, 0x1a, 0x01, 0x2d, 0x62, 0x00, 0x12, 0xd1, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x12, 0x30, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x26, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x20, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x45, 0x52, 0x1a, 0x01, 0x2d, 0x62, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x46, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x66, 0x74,
	0x2f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x2d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x92, 0x41, 0x21, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f,
	0x44, 0x45, 0x4c, 0x41, 0x59, 0x45, 0x44, 0x20, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x52, 0x1a,
	0x01, 0x2d, 0x62, 0x00, 0x12, 0x5f, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x77, 0x69, 0x66, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0xaa, 0x01, 0x0a, 0x0f, 0x49, 0x73, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x77, 0x69, 0x66,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x77, 0x69, 0x66, 0x74, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x28, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a,
	0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x1a,
	0x01, 0x2d, 0x42, 0xb0, 0x01, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x92, 0x41, 0xa6, 0x01, 0x12,
	0x14, 0x0a, 0x0d, 0x53, 0x57, 0x49, 0x46, 0x54, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x32, 0x03, 0x30, 0x2e, 0x31, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x59, 0x0a, 0x57,
	0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_swift_api_proto_rawDescOnce sync.Once
	file_swift_api_proto_rawDescData = file_swift_api_proto_rawDesc
)

func file_swift_api_proto_rawDescGZIP() []byte {
	file_swift_api_proto_rawDescOnce.Do(func() {
		file_swift_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_swift_api_proto_rawDescData)
	})
	return file_swift_api_proto_rawDescData
}

var file_swift_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_swift_api_proto_goTypes = []interface{}{
	(*ErrorBodyResponse)(nil),                  // 0: swift.service.v1.errorBodyResponse
	(*Empty)(nil),                              // 1: swift.service.v1.Empty
	(*TaskCreateRequest)(nil),                  // 2: swift.service.v1.TaskCreateRequest
	(*TaskActionRequest)(nil),                  // 3: swift.service.v1.TaskActionRequest
	(*TaskListRequest)(nil),                    // 4: swift.service.v1.TaskListRequest
	(*FileTaskListRequest)(nil),                // 5: swift.service.v1.FileTaskListRequest
	(*TaskDetailRequest)(nil),                  // 6: swift.service.v1.TaskDetailRequest
	(*DataListRequest)(nil),                    // 7: swift.service.v1.DataListRequest
	(*DataListDownloadRequest)(nil),            // 8: swift.service.v1.DataListDownloadRequest
	(*DataDetailRequest)(nil),                  // 9: swift.service.v1.DataDetailRequest
	(*SaveDataRequest)(nil),                    // 10: swift.service.v1.SaveDataRequest
	(*SwiftRemittanceRequest)(nil),             // 11: swift.service.v1.SwiftRemittanceRequest
	(*CounterpartTransactionRequest)(nil),      // 12: swift.service.v1.CounterpartTransactionRequest
	(*SwiftRoutePartnerRequest)(nil),           // 13: swift.service.v1.SwiftRoutePartnerRequest
	(*KursBRIEFXRequest)(nil),                  // 14: swift.service.v1.KursBRIEFXRequest
	(*NostroPriorityRequest)(nil),              // 15: swift.service.v1.NostroPriorityRequest
	(*SwiftStatusTransactionRequest)(nil),      // 16: swift.service.v1.SwiftStatusTransactionRequest
	(*BRIGateHardTokenValidationRequest)(nil),  // 17: swift.service.v1.BRIGateHardTokenValidationRequest
	(*TransactionsCheckerSingelRequest)(nil),   // 18: swift.service.v1.TransactionsCheckerSingelRequest
	(*TransactionsCheckerBulkRequest)(nil),     // 19: swift.service.v1.TransactionsCheckerBulkRequest
	(*ExecTransactionReq)(nil),                 // 20: swift.service.v1.ExecTransactionReq
	(*ApprovalCacheReq)(nil),                   // 21: swift.service.v1.ApprovalCacheReq
	(*TaskCreateResponse)(nil),                 // 22: swift.service.v1.TaskCreateResponse
	(*TaskActionResponse)(nil),                 // 23: swift.service.v1.TaskActionResponse
	(*TaskListResponse)(nil),                   // 24: swift.service.v1.TaskListResponse
	(*httpbody.HttpBody)(nil),                  // 25: google.api.HttpBody
	(*TaskDetailResponse)(nil),                 // 26: swift.service.v1.TaskDetailResponse
	(*DataListResponse)(nil),                   // 27: swift.service.v1.DataListResponse
	(*DataDetailResponse)(nil),                 // 28: swift.service.v1.DataDetailResponse
	(*SaveDataResponse)(nil),                   // 29: swift.service.v1.SaveDataResponse
	(*SwiftRemittanceResponse)(nil),            // 30: swift.service.v1.SwiftRemittanceResponse
	(*CounterpartTransactionResponse)(nil),     // 31: swift.service.v1.CounterpartTransactionResponse
	(*SwiftRoutePartnerResponse)(nil),          // 32: swift.service.v1.SwiftRoutePartnerResponse
	(*KursBRIEFXResponse)(nil),                 // 33: swift.service.v1.KursBRIEFXResponse
	(*BRIGateBRIefxAddonsResponse)(nil),        // 34: swift.service.v1.BRIGateBRIefxAddonsResponse
	(*NostroPriorityResponse)(nil),             // 35: swift.service.v1.NostroPriorityResponse
	(*SwiftStatusTransactionResponse)(nil),     // 36: swift.service.v1.SwiftStatusTransactionResponse
	(*BRIGateHardTokenValidationResponse)(nil), // 37: swift.service.v1.BRIGateHardTokenValidationResponse
	(*TransactionsCheckerSingelResponse)(nil),  // 38: swift.service.v1.TransactionsCheckerSingelResponse
	(*TransactionsCheckerBulkResponse)(nil),    // 39: swift.service.v1.TransactionsCheckerBulkResponse
	(*DelayedHandlerRes)(nil),                  // 40: swift.service.v1.DelayedHandlerRes
	(*ExecTransactionRes)(nil),                 // 41: swift.service.v1.ExecTransactionRes
	(*ApprovalCacheRes)(nil),                   // 42: swift.service.v1.ApprovalCacheRes
}
var file_swift_api_proto_depIdxs = []int32{
	2,  // 0: swift.service.v1.SwiftService.TaskCreate:input_type -> swift.service.v1.TaskCreateRequest
	3,  // 1: swift.service.v1.SwiftService.TaskAction:input_type -> swift.service.v1.TaskActionRequest
	4,  // 2: swift.service.v1.SwiftService.TaskList:input_type -> swift.service.v1.TaskListRequest
	5,  // 3: swift.service.v1.SwiftService.DownloadTaskList:input_type -> swift.service.v1.FileTaskListRequest
	6,  // 4: swift.service.v1.SwiftService.TaskDetail:input_type -> swift.service.v1.TaskDetailRequest
	7,  // 5: swift.service.v1.SwiftService.DataList:input_type -> swift.service.v1.DataListRequest
	8,  // 6: swift.service.v1.SwiftService.DataListDownload:input_type -> swift.service.v1.DataListDownloadRequest
	9,  // 7: swift.service.v1.SwiftService.DataDetail:input_type -> swift.service.v1.DataDetailRequest
	10, // 8: swift.service.v1.SwiftService.SaveData:input_type -> swift.service.v1.SaveDataRequest
	11, // 9: swift.service.v1.SwiftService.SwiftRemittance_ESB:input_type -> swift.service.v1.SwiftRemittanceRequest
	12, // 10: swift.service.v1.SwiftService.CounterpartTransaction_ESB:input_type -> swift.service.v1.CounterpartTransactionRequest
	13, // 11: swift.service.v1.SwiftService.SwiftRoutePartner_ESB:input_type -> swift.service.v1.SwiftRoutePartnerRequest
	14, // 12: swift.service.v1.SwiftService.KursBRIEFX_ESB:input_type -> swift.service.v1.KursBRIEFXRequest
	14, // 13: swift.service.v1.SwiftService.BRIGate_KursBRIEFX:input_type -> swift.service.v1.KursBRIEFXRequest
	14, // 14: swift.service.v1.SwiftService.ExchangeRate:input_type -> swift.service.v1.KursBRIEFXRequest
	15, // 15: swift.service.v1.SwiftService.GetNostroPriority:input_type -> swift.service.v1.NostroPriorityRequest
	16, // 16: swift.service.v1.SwiftService.SwiftStatusTransaction_ESB:input_type -> swift.service.v1.SwiftStatusTransactionRequest
	17, // 17: swift.service.v1.SwiftService.BRIGateHardTokenValidation:input_type -> swift.service.v1.BRIGateHardTokenValidationRequest
	18, // 18: swift.service.v1.SwiftService.TransactionsCheckerSingel:input_type -> swift.service.v1.TransactionsCheckerSingelRequest
	19, // 19: swift.service.v1.SwiftService.TransactionsCheckers:input_type -> swift.service.v1.TransactionsCheckerBulkRequest
	1,  // 20: swift.service.v1.SwiftService.DelayedHandler:input_type -> swift.service.v1.Empty
	20, // 21: swift.service.v1.SwiftService.ExecTransaction:input_type -> swift.service.v1.ExecTransactionReq
	21, // 22: swift.service.v1.SwiftService.IsApprovalExist:input_type -> swift.service.v1.ApprovalCacheReq
	22, // 23: swift.service.v1.SwiftService.TaskCreate:output_type -> swift.service.v1.TaskCreateResponse
	23, // 24: swift.service.v1.SwiftService.TaskAction:output_type -> swift.service.v1.TaskActionResponse
	24, // 25: swift.service.v1.SwiftService.TaskList:output_type -> swift.service.v1.TaskListResponse
	25, // 26: swift.service.v1.SwiftService.DownloadTaskList:output_type -> google.api.HttpBody
	26, // 27: swift.service.v1.SwiftService.TaskDetail:output_type -> swift.service.v1.TaskDetailResponse
	27, // 28: swift.service.v1.SwiftService.DataList:output_type -> swift.service.v1.DataListResponse
	25, // 29: swift.service.v1.SwiftService.DataListDownload:output_type -> google.api.HttpBody
	28, // 30: swift.service.v1.SwiftService.DataDetail:output_type -> swift.service.v1.DataDetailResponse
	29, // 31: swift.service.v1.SwiftService.SaveData:output_type -> swift.service.v1.SaveDataResponse
	30, // 32: swift.service.v1.SwiftService.SwiftRemittance_ESB:output_type -> swift.service.v1.SwiftRemittanceResponse
	31, // 33: swift.service.v1.SwiftService.CounterpartTransaction_ESB:output_type -> swift.service.v1.CounterpartTransactionResponse
	32, // 34: swift.service.v1.SwiftService.SwiftRoutePartner_ESB:output_type -> swift.service.v1.SwiftRoutePartnerResponse
	33, // 35: swift.service.v1.SwiftService.KursBRIEFX_ESB:output_type -> swift.service.v1.KursBRIEFXResponse
	34, // 36: swift.service.v1.SwiftService.BRIGate_KursBRIEFX:output_type -> swift.service.v1.BRIGateBRIefxAddonsResponse
	33, // 37: swift.service.v1.SwiftService.ExchangeRate:output_type -> swift.service.v1.KursBRIEFXResponse
	35, // 38: swift.service.v1.SwiftService.GetNostroPriority:output_type -> swift.service.v1.NostroPriorityResponse
	36, // 39: swift.service.v1.SwiftService.SwiftStatusTransaction_ESB:output_type -> swift.service.v1.SwiftStatusTransactionResponse
	37, // 40: swift.service.v1.SwiftService.BRIGateHardTokenValidation:output_type -> swift.service.v1.BRIGateHardTokenValidationResponse
	38, // 41: swift.service.v1.SwiftService.TransactionsCheckerSingel:output_type -> swift.service.v1.TransactionsCheckerSingelResponse
	39, // 42: swift.service.v1.SwiftService.TransactionsCheckers:output_type -> swift.service.v1.TransactionsCheckerBulkResponse
	40, // 43: swift.service.v1.SwiftService.DelayedHandler:output_type -> swift.service.v1.DelayedHandlerRes
	41, // 44: swift.service.v1.SwiftService.ExecTransaction:output_type -> swift.service.v1.ExecTransactionRes
	42, // 45: swift.service.v1.SwiftService.IsApprovalExist:output_type -> swift.service.v1.ApprovalCacheRes
	23, // [23:46] is the sub-list for method output_type
	0,  // [0:23] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_swift_api_proto_init() }
func file_swift_api_proto_init() {
	if File_swift_api_proto != nil {
		return
	}
	file_swift_payload_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_swift_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swift_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swift_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_swift_api_proto_goTypes,
		DependencyIndexes: file_swift_api_proto_depIdxs,
		MessageInfos:      file_swift_api_proto_msgTypes,
	}.Build()
	File_swift_api_proto = out.File
	file_swift_api_proto_rawDesc = nil
	file_swift_api_proto_goTypes = nil
	file_swift_api_proto_depIdxs = nil
}
