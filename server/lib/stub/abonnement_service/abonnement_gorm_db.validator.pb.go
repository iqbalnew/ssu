// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: abonnement_gorm_db.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *User) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.DeletedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeletedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeletedAt", err)
		}
	}
	return nil
}
func (this *Abonnement) Validate() error {
	if this.DeadlineDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeadlineDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeadlineDate", err)
		}
	}
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	for _, item := range this.AbonnementAccounts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AbonnementAccounts", err)
			}
		}
	}
	for _, item := range this.AbonnementInvoices {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AbonnementInvoices", err)
			}
		}
	}
	for _, item := range this.AbonnementRetries {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AbonnementRetries", err)
			}
		}
	}
	return nil
}
func (this *AbonnementRetry) Validate() error {
	if this.Abonnement != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Abonnement); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Abonnement", err)
		}
	}
	if this.RetryDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RetryDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RetryDate", err)
		}
	}
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *AbonnementAccount) Validate() error {
	if this.Abonnement != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Abonnement); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Abonnement", err)
		}
	}
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *AbonnementInvoice) Validate() error {
	if this.Abonnement != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Abonnement); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Abonnement", err)
		}
	}
	if this.DeadlineDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeadlineDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeadlineDate", err)
		}
	}
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	return nil
}
