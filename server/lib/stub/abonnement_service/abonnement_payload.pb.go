// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: abonnement_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAbonnementRequestDirection int32

const (
	ListAbonnementRequest_DESC ListAbonnementRequestDirection = 0
	ListAbonnementRequest_ASC  ListAbonnementRequestDirection = 1
)

// Enum value maps for ListAbonnementRequestDirection.
var (
	ListAbonnementRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAbonnementRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAbonnementRequestDirection) Enum() *ListAbonnementRequestDirection {
	p := new(ListAbonnementRequestDirection)
	*p = x
	return p
}

func (x ListAbonnementRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAbonnementRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[0].Descriptor()
}

func (ListAbonnementRequestDirection) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[0]
}

func (x ListAbonnementRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAbonnementRequestDirection.Descriptor instead.
func (ListAbonnementRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{11, 0}
}

type ListFilterAbannomentStatuses int32

const (
	ListFilterAbannoment_NullStatus ListFilterAbannomentStatuses = 0
	ListFilterAbannoment_Pending    ListFilterAbannomentStatuses = 1
	ListFilterAbannoment_Draft      ListFilterAbannomentStatuses = 2
	ListFilterAbannoment_Returned   ListFilterAbannomentStatuses = 3
	ListFilterAbannoment_Approved   ListFilterAbannomentStatuses = 4
	ListFilterAbannoment_Rejected   ListFilterAbannomentStatuses = 5
)

// Enum value maps for ListFilterAbannomentStatuses.
var (
	ListFilterAbannomentStatuses_name = map[int32]string{
		0: "NullStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	ListFilterAbannomentStatuses_value = map[string]int32{
		"NullStatus": 0,
		"Pending":    1,
		"Draft":      2,
		"Returned":   3,
		"Approved":   4,
		"Rejected":   5,
	}
)

func (x ListFilterAbannomentStatuses) Enum() *ListFilterAbannomentStatuses {
	p := new(ListFilterAbannomentStatuses)
	*p = x
	return p
}

func (x ListFilterAbannomentStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFilterAbannomentStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[1].Descriptor()
}

func (ListFilterAbannomentStatuses) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[1]
}

func (x ListFilterAbannomentStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFilterAbannomentStatuses.Descriptor instead.
func (ListFilterAbannomentStatuses) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{18, 0}
}

type ListAbonnementTaskRequestStatuses int32

const (
	ListAbonnementTaskRequest_AllStatus ListAbonnementTaskRequestStatuses = 0
	ListAbonnementTaskRequest_Pending   ListAbonnementTaskRequestStatuses = 1
	ListAbonnementTaskRequest_Draft     ListAbonnementTaskRequestStatuses = 2
	ListAbonnementTaskRequest_Returned  ListAbonnementTaskRequestStatuses = 3
	ListAbonnementTaskRequest_Approved  ListAbonnementTaskRequestStatuses = 4
	ListAbonnementTaskRequest_Rejected  ListAbonnementTaskRequestStatuses = 5
)

// Enum value maps for ListAbonnementTaskRequestStatuses.
var (
	ListAbonnementTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	ListAbonnementTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x ListAbonnementTaskRequestStatuses) Enum() *ListAbonnementTaskRequestStatuses {
	p := new(ListAbonnementTaskRequestStatuses)
	*p = x
	return p
}

func (x ListAbonnementTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAbonnementTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[2].Descriptor()
}

func (ListAbonnementTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[2]
}

func (x ListAbonnementTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAbonnementTaskRequestStatuses.Descriptor instead.
func (ListAbonnementTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{19, 0}
}

type ListAbonnementTaskRequestSteps int32

const (
	ListAbonnementTaskRequest_AllStep  ListAbonnementTaskRequestSteps = 0
	ListAbonnementTaskRequest_Maker    ListAbonnementTaskRequestSteps = 1
	ListAbonnementTaskRequest_Checker  ListAbonnementTaskRequestSteps = 2
	ListAbonnementTaskRequest_Signer   ListAbonnementTaskRequestSteps = 3
	ListAbonnementTaskRequest_Releaser ListAbonnementTaskRequestSteps = 4
)

// Enum value maps for ListAbonnementTaskRequestSteps.
var (
	ListAbonnementTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListAbonnementTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListAbonnementTaskRequestSteps) Enum() *ListAbonnementTaskRequestSteps {
	p := new(ListAbonnementTaskRequestSteps)
	*p = x
	return p
}

func (x ListAbonnementTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAbonnementTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[3].Descriptor()
}

func (ListAbonnementTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[3]
}

func (x ListAbonnementTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAbonnementTaskRequestSteps.Descriptor instead.
func (ListAbonnementTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{19, 1}
}

type ListAbonnementTaskRequestDirection int32

const (
	ListAbonnementTaskRequest_DESC ListAbonnementTaskRequestDirection = 0
	ListAbonnementTaskRequest_ASC  ListAbonnementTaskRequestDirection = 1
)

// Enum value maps for ListAbonnementTaskRequestDirection.
var (
	ListAbonnementTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAbonnementTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAbonnementTaskRequestDirection) Enum() *ListAbonnementTaskRequestDirection {
	p := new(ListAbonnementTaskRequestDirection)
	*p = x
	return p
}

func (x ListAbonnementTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAbonnementTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[4].Descriptor()
}

func (ListAbonnementTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[4]
}

func (x ListAbonnementTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAbonnementTaskRequestDirection.Descriptor instead.
func (ListAbonnementTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{19, 2}
}

type DownloadListAbonnementTaskRequestStatuses int32

const (
	DownloadListAbonnementTaskRequest_AllStatus DownloadListAbonnementTaskRequestStatuses = 0
	DownloadListAbonnementTaskRequest_Pending   DownloadListAbonnementTaskRequestStatuses = 1
	DownloadListAbonnementTaskRequest_Draft     DownloadListAbonnementTaskRequestStatuses = 2
	DownloadListAbonnementTaskRequest_Returned  DownloadListAbonnementTaskRequestStatuses = 3
	DownloadListAbonnementTaskRequest_Approved  DownloadListAbonnementTaskRequestStatuses = 4
	DownloadListAbonnementTaskRequest_Rejected  DownloadListAbonnementTaskRequestStatuses = 5
)

// Enum value maps for DownloadListAbonnementTaskRequestStatuses.
var (
	DownloadListAbonnementTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	DownloadListAbonnementTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x DownloadListAbonnementTaskRequestStatuses) Enum() *DownloadListAbonnementTaskRequestStatuses {
	p := new(DownloadListAbonnementTaskRequestStatuses)
	*p = x
	return p
}

func (x DownloadListAbonnementTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListAbonnementTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[5].Descriptor()
}

func (DownloadListAbonnementTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[5]
}

func (x DownloadListAbonnementTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListAbonnementTaskRequestStatuses.Descriptor instead.
func (DownloadListAbonnementTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{21, 0}
}

type DownloadListAbonnementTaskRequestSteps int32

const (
	DownloadListAbonnementTaskRequest_AllStep  DownloadListAbonnementTaskRequestSteps = 0
	DownloadListAbonnementTaskRequest_Maker    DownloadListAbonnementTaskRequestSteps = 1
	DownloadListAbonnementTaskRequest_Checker  DownloadListAbonnementTaskRequestSteps = 2
	DownloadListAbonnementTaskRequest_Signer   DownloadListAbonnementTaskRequestSteps = 3
	DownloadListAbonnementTaskRequest_Releaser DownloadListAbonnementTaskRequestSteps = 4
)

// Enum value maps for DownloadListAbonnementTaskRequestSteps.
var (
	DownloadListAbonnementTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	DownloadListAbonnementTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x DownloadListAbonnementTaskRequestSteps) Enum() *DownloadListAbonnementTaskRequestSteps {
	p := new(DownloadListAbonnementTaskRequestSteps)
	*p = x
	return p
}

func (x DownloadListAbonnementTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListAbonnementTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[6].Descriptor()
}

func (DownloadListAbonnementTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[6]
}

func (x DownloadListAbonnementTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListAbonnementTaskRequestSteps.Descriptor instead.
func (DownloadListAbonnementTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{21, 1}
}

type DownloadListAbonnementTaskRequestDirection int32

const (
	DownloadListAbonnementTaskRequest_DESC DownloadListAbonnementTaskRequestDirection = 0
	DownloadListAbonnementTaskRequest_ASC  DownloadListAbonnementTaskRequestDirection = 1
)

// Enum value maps for DownloadListAbonnementTaskRequestDirection.
var (
	DownloadListAbonnementTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	DownloadListAbonnementTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x DownloadListAbonnementTaskRequestDirection) Enum() *DownloadListAbonnementTaskRequestDirection {
	p := new(DownloadListAbonnementTaskRequestDirection)
	*p = x
	return p
}

func (x DownloadListAbonnementTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListAbonnementTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[7].Descriptor()
}

func (DownloadListAbonnementTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[7]
}

func (x DownloadListAbonnementTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListAbonnementTaskRequestDirection.Descriptor instead.
func (DownloadListAbonnementTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{21, 2}
}

type DownloadListAbonnementTaskRequest_Formats int32

const (
	DownloadListAbonnementTaskRequest_null DownloadListAbonnementTaskRequest_Formats = 0
	DownloadListAbonnementTaskRequest_pdf  DownloadListAbonnementTaskRequest_Formats = 1
	DownloadListAbonnementTaskRequest_xls  DownloadListAbonnementTaskRequest_Formats = 2
	DownloadListAbonnementTaskRequest_csv  DownloadListAbonnementTaskRequest_Formats = 3
)

// Enum value maps for DownloadListAbonnementTaskRequest_Formats.
var (
	DownloadListAbonnementTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	DownloadListAbonnementTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x DownloadListAbonnementTaskRequest_Formats) Enum() *DownloadListAbonnementTaskRequest_Formats {
	p := new(DownloadListAbonnementTaskRequest_Formats)
	*p = x
	return p
}

func (x DownloadListAbonnementTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListAbonnementTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[8].Descriptor()
}

func (DownloadListAbonnementTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[8]
}

func (x DownloadListAbonnementTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListAbonnementTaskRequest_Formats.Descriptor instead.
func (DownloadListAbonnementTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{21, 3}
}

type ListAbonnementInvoiceRequestDirection int32

const (
	ListAbonnementInvoiceRequest_DESC ListAbonnementInvoiceRequestDirection = 0
	ListAbonnementInvoiceRequest_ASC  ListAbonnementInvoiceRequestDirection = 1
)

// Enum value maps for ListAbonnementInvoiceRequestDirection.
var (
	ListAbonnementInvoiceRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAbonnementInvoiceRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAbonnementInvoiceRequestDirection) Enum() *ListAbonnementInvoiceRequestDirection {
	p := new(ListAbonnementInvoiceRequestDirection)
	*p = x
	return p
}

func (x ListAbonnementInvoiceRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAbonnementInvoiceRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[9].Descriptor()
}

func (ListAbonnementInvoiceRequestDirection) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[9]
}

func (x ListAbonnementInvoiceRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAbonnementInvoiceRequestDirection.Descriptor instead.
func (ListAbonnementInvoiceRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{35, 0}
}

type DownloadListAbonnementInvoiceRequestDirection int32

const (
	DownloadListAbonnementInvoiceRequest_DESC DownloadListAbonnementInvoiceRequestDirection = 0
	DownloadListAbonnementInvoiceRequest_ASC  DownloadListAbonnementInvoiceRequestDirection = 1
)

// Enum value maps for DownloadListAbonnementInvoiceRequestDirection.
var (
	DownloadListAbonnementInvoiceRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	DownloadListAbonnementInvoiceRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x DownloadListAbonnementInvoiceRequestDirection) Enum() *DownloadListAbonnementInvoiceRequestDirection {
	p := new(DownloadListAbonnementInvoiceRequestDirection)
	*p = x
	return p
}

func (x DownloadListAbonnementInvoiceRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListAbonnementInvoiceRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[10].Descriptor()
}

func (DownloadListAbonnementInvoiceRequestDirection) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[10]
}

func (x DownloadListAbonnementInvoiceRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListAbonnementInvoiceRequestDirection.Descriptor instead.
func (DownloadListAbonnementInvoiceRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{36, 0}
}

type DownloadListAbonnementInvoiceRequest_Formats int32

const (
	DownloadListAbonnementInvoiceRequest_null DownloadListAbonnementInvoiceRequest_Formats = 0
	DownloadListAbonnementInvoiceRequest_pdf  DownloadListAbonnementInvoiceRequest_Formats = 1
	DownloadListAbonnementInvoiceRequest_xls  DownloadListAbonnementInvoiceRequest_Formats = 2
	DownloadListAbonnementInvoiceRequest_csv  DownloadListAbonnementInvoiceRequest_Formats = 3
)

// Enum value maps for DownloadListAbonnementInvoiceRequest_Formats.
var (
	DownloadListAbonnementInvoiceRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	DownloadListAbonnementInvoiceRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x DownloadListAbonnementInvoiceRequest_Formats) Enum() *DownloadListAbonnementInvoiceRequest_Formats {
	p := new(DownloadListAbonnementInvoiceRequest_Formats)
	*p = x
	return p
}

func (x DownloadListAbonnementInvoiceRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListAbonnementInvoiceRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_abonnement_payload_proto_enumTypes[11].Descriptor()
}

func (DownloadListAbonnementInvoiceRequest_Formats) Type() protoreflect.EnumType {
	return &file_abonnement_payload_proto_enumTypes[11]
}

func (x DownloadListAbonnementInvoiceRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListAbonnementInvoiceRequest_Formats.Descriptor instead.
func (DownloadListAbonnementInvoiceRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{36, 1}
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    structpb.NullValue `protobuf:"varint,4,opt,name=data,proto3,enum=google.protobuf.NullValue" json:"data,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorBodyResponse) GetData() structpb.NullValue {
	if x != nil {
		return x.Data
	}
	return structpb.NullValue(0)
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{2}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{4}
}

type InvalidKeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidKeyError) Reset() {
	*x = InvalidKeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyError) ProtoMessage() {}

func (x *InvalidKeyError) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyError.ProtoReflect.Descriptor instead.
func (*InvalidKeyError) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{5}
}

func (x *InvalidKeyError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InvalidKeyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *JWTTokenResponse) Reset() {
	*x = JWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokenResponse) ProtoMessage() {}

func (x *JWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokenResponse.ProtoReflect.Descriptor instead.
func (*JWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{6}
}

func (x *JWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTTokenResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{7}
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{8}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{9}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *Task) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{10}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type ListAbonnementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abonnement *Abonnement                    `protobuf:"bytes,1,opt,name=abonnement,proto3" json:"abonnement,omitempty"`
	Limit      int32                          `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                         `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        ListAbonnementRequestDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=abonnement.service.v1.ListAbonnementRequestDirection" json:"dir,omitempty"`
	Filter     string                         `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query      string                         `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListAbonnementRequest) Reset() {
	*x = ListAbonnementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAbonnementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAbonnementRequest) ProtoMessage() {}

func (x *ListAbonnementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAbonnementRequest.ProtoReflect.Descriptor instead.
func (*ListAbonnementRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{11}
}

func (x *ListAbonnementRequest) GetAbonnement() *Abonnement {
	if x != nil {
		return x.Abonnement
	}
	return nil
}

func (x *ListAbonnementRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAbonnementRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAbonnementRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAbonnementRequest) GetDir() ListAbonnementRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAbonnementRequest_DESC
}

func (x *ListAbonnementRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAbonnementRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListAbonnementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*Abonnement       `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAbonnementResponse) Reset() {
	*x = ListAbonnementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAbonnementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAbonnementResponse) ProtoMessage() {}

func (x *ListAbonnementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAbonnementResponse.ProtoReflect.Descriptor instead.
func (*ListAbonnementResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{12}
}

func (x *ListAbonnementResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAbonnementResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAbonnementResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAbonnementResponse) GetData() []*Abonnement {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAbonnementResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateAbonnementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateAbonnementTaskReq `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64                   `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateAbonnementRequest) Reset() {
	*x = CreateAbonnementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAbonnementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonnementRequest) ProtoMessage() {}

func (x *CreateAbonnementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonnementRequest.ProtoReflect.Descriptor instead.
func (*CreateAbonnementRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{13}
}

func (x *CreateAbonnementRequest) GetData() *CreateAbonnementTaskReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAbonnementRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateAbonnementTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *CreateAbonnementTaskReq `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64                   `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool                     `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateAbonnementTaskRequest) Reset() {
	*x = CreateAbonnementTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAbonnementTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonnementTaskRequest) ProtoMessage() {}

func (x *CreateAbonnementTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonnementTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateAbonnementTaskRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAbonnementTaskRequest) GetData() *CreateAbonnementTaskReq {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateAbonnementTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateAbonnementTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type CreateAbonnementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // Abonnement data = 4;
}

func (x *CreateAbonnementResponse) Reset() {
	*x = CreateAbonnementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAbonnementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonnementResponse) ProtoMessage() {}

func (x *CreateAbonnementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonnementResponse.ProtoReflect.Descriptor instead.
func (*CreateAbonnementResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{15}
}

func (x *CreateAbonnementResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateAbonnementResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAbonnementResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AbonnementTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abonnement *ListTaskAbonnementRes `protobuf:"bytes,1,opt,name=abonnement,proto3" json:"abonnement,omitempty"`
	Task       *Task                  `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"` // repeated Abonnement abonnements = 3;
}

func (x *AbonnementTask) Reset() {
	*x = AbonnementTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbonnementTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonnementTask) ProtoMessage() {}

func (x *AbonnementTask) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonnementTask.ProtoReflect.Descriptor instead.
func (*AbonnementTask) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{16}
}

func (x *AbonnementTask) GetAbonnement() *ListTaskAbonnementRes {
	if x != nil {
		return x.Abonnement
	}
	return nil
}

func (x *AbonnementTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type CreateAbonnementTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TaskID  uint64 `protobuf:"varint,4,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateAbonnementTaskResponse) Reset() {
	*x = CreateAbonnementTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAbonnementTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonnementTaskResponse) ProtoMessage() {}

func (x *CreateAbonnementTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonnementTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateAbonnementTaskResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAbonnementTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateAbonnementTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAbonnementTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAbonnementTaskResponse) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ListFilterAbannoment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company           string                       `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Plan              string                       `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	StartDateCreated  string                       `protobuf:"bytes,3,opt,name=startDateCreated,proto3" json:"startDateCreated,omitempty"`
	EndDateCreated    string                       `protobuf:"bytes,4,opt,name=endDateCreated,proto3" json:"endDateCreated,omitempty"`
	StartDateModified string                       `protobuf:"bytes,5,opt,name=startDateModified,proto3" json:"startDateModified,omitempty"`
	EndDateModified   string                       `protobuf:"bytes,6,opt,name=endDateModified,proto3" json:"endDateModified,omitempty"`
	CreatedBy         string                       `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	ReviewBy          string                       `protobuf:"bytes,8,opt,name=reviewBy,proto3" json:"reviewBy,omitempty"`
	StartDateApproved string                       `protobuf:"bytes,9,opt,name=startDateApproved,proto3" json:"startDateApproved,omitempty"`
	EndDateApproved   string                       `protobuf:"bytes,10,opt,name=endDateApproved,proto3" json:"endDateApproved,omitempty"`
	BillingStatus     string                       `protobuf:"bytes,11,opt,name=billingStatus,proto3" json:"billingStatus,omitempty"`
	Status            ListFilterAbannomentStatuses `protobuf:"varint,12,opt,name=status,proto3,enum=abonnement.service.v1.ListFilterAbannomentStatuses" json:"status,omitempty"`
}

func (x *ListFilterAbannoment) Reset() {
	*x = ListFilterAbannoment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilterAbannoment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilterAbannoment) ProtoMessage() {}

func (x *ListFilterAbannoment) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilterAbannoment.ProtoReflect.Descriptor instead.
func (*ListFilterAbannoment) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{18}
}

func (x *ListFilterAbannoment) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ListFilterAbannoment) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

func (x *ListFilterAbannoment) GetStartDateCreated() string {
	if x != nil {
		return x.StartDateCreated
	}
	return ""
}

func (x *ListFilterAbannoment) GetEndDateCreated() string {
	if x != nil {
		return x.EndDateCreated
	}
	return ""
}

func (x *ListFilterAbannoment) GetStartDateModified() string {
	if x != nil {
		return x.StartDateModified
	}
	return ""
}

func (x *ListFilterAbannoment) GetEndDateModified() string {
	if x != nil {
		return x.EndDateModified
	}
	return ""
}

func (x *ListFilterAbannoment) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ListFilterAbannoment) GetReviewBy() string {
	if x != nil {
		return x.ReviewBy
	}
	return ""
}

func (x *ListFilterAbannoment) GetStartDateApproved() string {
	if x != nil {
		return x.StartDateApproved
	}
	return ""
}

func (x *ListFilterAbannoment) GetEndDateApproved() string {
	if x != nil {
		return x.EndDateApproved
	}
	return ""
}

func (x *ListFilterAbannoment) GetBillingStatus() string {
	if x != nil {
		return x.BillingStatus
	}
	return ""
}

func (x *ListFilterAbannoment) GetStatus() ListFilterAbannomentStatuses {
	if x != nil {
		return x.Status
	}
	return ListFilterAbannoment_NullStatus
}

type ListAbonnementTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListAbonnementTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=abonnement.service.v1.ListAbonnementTaskRequestStatuses" json:"status,omitempty"`
	Step   ListAbonnementTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=abonnement.service.v1.ListAbonnementTaskRequestSteps" json:"step,omitempty"`
	Limit  int32                              `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                              `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                             `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListAbonnementTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=abonnement.service.v1.ListAbonnementTaskRequestDirection" json:"dir,omitempty"`
	Filter *ListFilterAbannoment              `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search string                             `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *ListAbonnementTaskRequest) Reset() {
	*x = ListAbonnementTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAbonnementTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAbonnementTaskRequest) ProtoMessage() {}

func (x *ListAbonnementTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAbonnementTaskRequest.ProtoReflect.Descriptor instead.
func (*ListAbonnementTaskRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{19}
}

func (x *ListAbonnementTaskRequest) GetStatus() ListAbonnementTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListAbonnementTaskRequest_AllStatus
}

func (x *ListAbonnementTaskRequest) GetStep() ListAbonnementTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListAbonnementTaskRequest_AllStep
}

func (x *ListAbonnementTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAbonnementTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAbonnementTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAbonnementTaskRequest) GetDir() ListAbonnementTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAbonnementTaskRequest_DESC
}

func (x *ListAbonnementTaskRequest) GetFilter() *ListFilterAbannoment {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAbonnementTaskRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type ListAbonnementTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*AbonnementTask   `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAbonnementTaskResponse) Reset() {
	*x = ListAbonnementTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAbonnementTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAbonnementTaskResponse) ProtoMessage() {}

func (x *ListAbonnementTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAbonnementTaskResponse.ProtoReflect.Descriptor instead.
func (*ListAbonnementTaskResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{20}
}

func (x *ListAbonnementTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAbonnementTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAbonnementTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAbonnementTaskResponse) GetData() []*AbonnementTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAbonnementTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type DownloadListAbonnementTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     DownloadListAbonnementTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=abonnement.service.v1.DownloadListAbonnementTaskRequestStatuses" json:"status,omitempty"`
	Step       DownloadListAbonnementTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=abonnement.service.v1.DownloadListAbonnementTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                                      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                      `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                     `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        DownloadListAbonnementTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=abonnement.service.v1.DownloadListAbonnementTaskRequestDirection" json:"dir,omitempty"`
	Filter     *ListFilterAbannoment                      `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                                     `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	FileFormat DownloadListAbonnementTaskRequest_Formats  `protobuf:"varint,15,opt,name=fileFormat,proto3,enum=abonnement.service.v1.DownloadListAbonnementTaskRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *DownloadListAbonnementTaskRequest) Reset() {
	*x = DownloadListAbonnementTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadListAbonnementTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadListAbonnementTaskRequest) ProtoMessage() {}

func (x *DownloadListAbonnementTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadListAbonnementTaskRequest.ProtoReflect.Descriptor instead.
func (*DownloadListAbonnementTaskRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{21}
}

func (x *DownloadListAbonnementTaskRequest) GetStatus() DownloadListAbonnementTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return DownloadListAbonnementTaskRequest_AllStatus
}

func (x *DownloadListAbonnementTaskRequest) GetStep() DownloadListAbonnementTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return DownloadListAbonnementTaskRequest_AllStep
}

func (x *DownloadListAbonnementTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DownloadListAbonnementTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DownloadListAbonnementTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DownloadListAbonnementTaskRequest) GetDir() DownloadListAbonnementTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return DownloadListAbonnementTaskRequest_DESC
}

func (x *DownloadListAbonnementTaskRequest) GetFilter() *ListFilterAbannoment {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DownloadListAbonnementTaskRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *DownloadListAbonnementTaskRequest) GetFileFormat() DownloadListAbonnementTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return DownloadListAbonnementTaskRequest_null
}

type AbonnementTaskDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *AbonnementTaskDetailRequest) Reset() {
	*x = AbonnementTaskDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbonnementTaskDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonnementTaskDetailRequest) ProtoMessage() {}

func (x *AbonnementTaskDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonnementTaskDetailRequest.ProtoReflect.Descriptor instead.
func (*AbonnementTaskDetailRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{22}
}

func (x *AbonnementTaskDetailRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type AbonnementTaskDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool            `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *AbonnementTask `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AbonnementTaskDetailResponse) Reset() {
	*x = AbonnementTaskDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbonnementTaskDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonnementTaskDetailResponse) ProtoMessage() {}

func (x *AbonnementTaskDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonnementTaskDetailResponse.ProtoReflect.Descriptor instead.
func (*AbonnementTaskDetailResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{23}
}

func (x *AbonnementTaskDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *AbonnementTaskDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AbonnementTaskDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AbonnementTaskDetailResponse) GetData() *AbonnementTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateAbonnementTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyID    uint64  `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Amount       float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	DeadlineDate string  `protobuf:"bytes,4,opt,name=deadlineDate,proto3" json:"deadlineDate,omitempty"`
	Period       string  `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// string mechanismType = 6;
	// float mechanismValue = 7;
	// uint64 mechanismAccountID = 8;
	MechanismTransaction []*Mechanism `protobuf:"bytes,6,rep,name=MechanismTransaction,proto3" json:"MechanismTransaction,omitempty"`
	MechanismFrequency   []*Mechanism `protobuf:"bytes,7,rep,name=MechanismFrequency,proto3" json:"MechanismFrequency,omitempty"`
	MechanismBalance     []*Mechanism `protobuf:"bytes,8,rep,name=MechanismBalance,proto3" json:"MechanismBalance,omitempty"`
	// mechanism Mechanism = 9;
	BillingStatus      string                         `protobuf:"bytes,11,opt,name=billingStatus,proto3" json:"billingStatus,omitempty"`
	Company            *CompanyCreateTask             `protobuf:"bytes,10,opt,name=company,proto3" json:"company,omitempty"`
	AbonnementAccounts []*AbonnementAccountCreateTask `protobuf:"bytes,12,rep,name=abonnementAccounts,proto3" json:"abonnementAccounts,omitempty"`
	AbonnementRetries  []*AbonnementRetry             `protobuf:"bytes,13,rep,name=abonnementRetries,proto3" json:"abonnementRetries,omitempty"`
	AbonnementInvoices []*AbonnementInvoice           `protobuf:"bytes,14,rep,name=abonnementInvoices,proto3" json:"abonnementInvoices,omitempty"`
	CustomAbonnements  []*CustomAbonnementCreateTask  `protobuf:"bytes,15,rep,name=customAbonnements,proto3" json:"customAbonnements,omitempty"`
	IsCustom           bool                           `protobuf:"varint,16,opt,name=isCustom,proto3" json:"isCustom,omitempty"`
}

func (x *CreateAbonnementTaskReq) Reset() {
	*x = CreateAbonnementTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAbonnementTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonnementTaskReq) ProtoMessage() {}

func (x *CreateAbonnementTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonnementTaskReq.ProtoReflect.Descriptor instead.
func (*CreateAbonnementTaskReq) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{24}
}

func (x *CreateAbonnementTaskReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateAbonnementTaskReq) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CreateAbonnementTaskReq) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateAbonnementTaskReq) GetDeadlineDate() string {
	if x != nil {
		return x.DeadlineDate
	}
	return ""
}

func (x *CreateAbonnementTaskReq) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CreateAbonnementTaskReq) GetMechanismTransaction() []*Mechanism {
	if x != nil {
		return x.MechanismTransaction
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetMechanismFrequency() []*Mechanism {
	if x != nil {
		return x.MechanismFrequency
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetMechanismBalance() []*Mechanism {
	if x != nil {
		return x.MechanismBalance
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetBillingStatus() string {
	if x != nil {
		return x.BillingStatus
	}
	return ""
}

func (x *CreateAbonnementTaskReq) GetCompany() *CompanyCreateTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetAbonnementAccounts() []*AbonnementAccountCreateTask {
	if x != nil {
		return x.AbonnementAccounts
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetAbonnementRetries() []*AbonnementRetry {
	if x != nil {
		return x.AbonnementRetries
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetAbonnementInvoices() []*AbonnementInvoice {
	if x != nil {
		return x.AbonnementInvoices
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetCustomAbonnements() []*CustomAbonnementCreateTask {
	if x != nil {
		return x.CustomAbonnements
	}
	return nil
}

func (x *CreateAbonnementTaskReq) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

type DetailTaskAbonnementRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonnementID       uint64                 `protobuf:"varint,1,opt,name=abonnementID,proto3" json:"abonnementID,omitempty"`
	CompanyID          uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Amount             uint64                 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	DeadlineDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadlineDate,proto3" json:"deadlineDate,omitempty"`
	Period             string                 `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	MechanismType      string                 `protobuf:"bytes,6,opt,name=mechanismType,proto3" json:"mechanismType,omitempty"`
	MechanismValue     uint64                 `protobuf:"varint,7,opt,name=mechanismValue,proto3" json:"mechanismValue,omitempty"`
	MechanismAccountID uint64                 `protobuf:"varint,8,opt,name=mechanismAccountID,proto3" json:"mechanismAccountID,omitempty"`
	BillingStatus      string                 `protobuf:"bytes,9,opt,name=billingStatus,proto3" json:"billingStatus,omitempty"`
	CreatedByID        uint64                 `protobuf:"varint,10,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID        uint64                 `protobuf:"varint,11,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	Company            *CompanyListTask       `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
	AbonnementAccounts []*AbonnmentAccountRes `protobuf:"bytes,12,rep,name=abonnementAccounts,proto3" json:"abonnementAccounts,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Task               *TaskListTask          `protobuf:"bytes,15,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DetailTaskAbonnementRes) Reset() {
	*x = DetailTaskAbonnementRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTaskAbonnementRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTaskAbonnementRes) ProtoMessage() {}

func (x *DetailTaskAbonnementRes) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTaskAbonnementRes.ProtoReflect.Descriptor instead.
func (*DetailTaskAbonnementRes) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{25}
}

func (x *DetailTaskAbonnementRes) GetAbonnementID() uint64 {
	if x != nil {
		return x.AbonnementID
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetDeadlineDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeadlineDate
	}
	return nil
}

func (x *DetailTaskAbonnementRes) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *DetailTaskAbonnementRes) GetMechanismType() string {
	if x != nil {
		return x.MechanismType
	}
	return ""
}

func (x *DetailTaskAbonnementRes) GetMechanismValue() uint64 {
	if x != nil {
		return x.MechanismValue
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetMechanismAccountID() uint64 {
	if x != nil {
		return x.MechanismAccountID
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetBillingStatus() string {
	if x != nil {
		return x.BillingStatus
	}
	return ""
}

func (x *DetailTaskAbonnementRes) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *DetailTaskAbonnementRes) GetCompany() *CompanyListTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *DetailTaskAbonnementRes) GetAbonnementAccounts() []*AbonnmentAccountRes {
	if x != nil {
		return x.AbonnementAccounts
	}
	return nil
}

func (x *DetailTaskAbonnementRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DetailTaskAbonnementRes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DetailTaskAbonnementRes) GetTask() *TaskListTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type Mechanism struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  uint64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *Mechanism) Reset() {
	*x = Mechanism{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mechanism) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mechanism) ProtoMessage() {}

func (x *Mechanism) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mechanism.ProtoReflect.Descriptor instead.
func (*Mechanism) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{26}
}

func (x *Mechanism) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Mechanism) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ListTaskAbonnementRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonnementID uint64                 `protobuf:"varint,1,opt,name=abonnementID,proto3" json:"abonnementID,omitempty"`
	CompanyID    uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Amount       uint64                 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	DeadlineDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadlineDate,proto3" json:"deadlineDate,omitempty"`
	Period       string                 `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// string mechanismType = 6;
	// uint64 mechanismValue = 7;
	// uint64 mechanismAccountID = 8;
	MechanismTransaction []*Mechanism           `protobuf:"bytes,6,rep,name=MechanismTransaction,proto3" json:"MechanismTransaction,omitempty"`
	MechanismFrequency   []*Mechanism           `protobuf:"bytes,7,rep,name=MechanismFrequency,proto3" json:"MechanismFrequency,omitempty"`
	MechanismBalance     []*Mechanism           `protobuf:"bytes,8,rep,name=MechanismBalance,proto3" json:"MechanismBalance,omitempty"`
	Mechanism            *Mechanism             `protobuf:"bytes,9,opt,name=Mechanism,proto3" json:"Mechanism,omitempty"`
	BillingStatus        string                 `protobuf:"bytes,10,opt,name=billingStatus,proto3" json:"billingStatus,omitempty"`
	CreatedByID          uint64                 `protobuf:"varint,11,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID          uint64                 `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	Company              *CompanyListTask       `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
	AbonnementAccounts   []*AbonnmentAccountRes `protobuf:"bytes,14,rep,name=abonnementAccounts,proto3" json:"abonnementAccounts,omitempty"`
	AbonnementRetries    []*AbonnementRetry     `protobuf:"bytes,16,rep,name=abonnementRetries,proto3" json:"abonnementRetries,omitempty"`
	AbonnementInvoices   []*AbonnementInvoice   `protobuf:"bytes,17,rep,name=abonnementInvoices,proto3" json:"abonnementInvoices,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ListTaskAbonnementRes) Reset() {
	*x = ListTaskAbonnementRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskAbonnementRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskAbonnementRes) ProtoMessage() {}

func (x *ListTaskAbonnementRes) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskAbonnementRes.ProtoReflect.Descriptor instead.
func (*ListTaskAbonnementRes) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{27}
}

func (x *ListTaskAbonnementRes) GetAbonnementID() uint64 {
	if x != nil {
		return x.AbonnementID
	}
	return 0
}

func (x *ListTaskAbonnementRes) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *ListTaskAbonnementRes) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ListTaskAbonnementRes) GetDeadlineDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeadlineDate
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *ListTaskAbonnementRes) GetMechanismTransaction() []*Mechanism {
	if x != nil {
		return x.MechanismTransaction
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetMechanismFrequency() []*Mechanism {
	if x != nil {
		return x.MechanismFrequency
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetMechanismBalance() []*Mechanism {
	if x != nil {
		return x.MechanismBalance
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetMechanism() *Mechanism {
	if x != nil {
		return x.Mechanism
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetBillingStatus() string {
	if x != nil {
		return x.BillingStatus
	}
	return ""
}

func (x *ListTaskAbonnementRes) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *ListTaskAbonnementRes) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *ListTaskAbonnementRes) GetCompany() *CompanyListTask {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetAbonnementAccounts() []*AbonnmentAccountRes {
	if x != nil {
		return x.AbonnementAccounts
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetAbonnementRetries() []*AbonnementRetry {
	if x != nil {
		return x.AbonnementRetries
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetAbonnementInvoices() []*AbonnementInvoice {
	if x != nil {
		return x.AbonnementInvoices
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListTaskAbonnementRes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TaskListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	CreatedByID        uint64                 `protobuf:"varint,10,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,11,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TaskListTask) Reset() {
	*x = TaskListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListTask) ProtoMessage() {}

func (x *TaskListTask) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListTask.ProtoReflect.Descriptor instead.
func (*TaskListTask) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{28}
}

func (x *TaskListTask) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskListTask) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskListTask) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskListTask) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *TaskListTask) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *TaskListTask) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *TaskListTask) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *TaskListTask) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *TaskListTask) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *TaskListTask) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *TaskListTask) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *TaskListTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskListTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AbonnmentAccountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonnementAccountID uint64                 `protobuf:"varint,1,opt,name=abonnementAccountID,proto3" json:"abonnementAccountID,omitempty"`
	AbonnementID        uint64                 `protobuf:"varint,2,opt,name=abonnementID,proto3" json:"abonnementID,omitempty"`
	Abonnement          string                 `protobuf:"bytes,3,opt,name=abonnement,proto3" json:"abonnement,omitempty"`
	AccountID           uint64                 `protobuf:"varint,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountAlias        string                 `protobuf:"bytes,5,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountNumber       string                 `protobuf:"bytes,9,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	Order               uint64                 `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
	CreatedByID         uint64                 `protobuf:"varint,7,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID         uint64                 `protobuf:"varint,8,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *AbonnmentAccountRes) Reset() {
	*x = AbonnmentAccountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbonnmentAccountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonnmentAccountRes) ProtoMessage() {}

func (x *AbonnmentAccountRes) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonnmentAccountRes.ProtoReflect.Descriptor instead.
func (*AbonnmentAccountRes) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{29}
}

func (x *AbonnmentAccountRes) GetAbonnementAccountID() uint64 {
	if x != nil {
		return x.AbonnementAccountID
	}
	return 0
}

func (x *AbonnmentAccountRes) GetAbonnementID() uint64 {
	if x != nil {
		return x.AbonnementID
	}
	return 0
}

func (x *AbonnmentAccountRes) GetAbonnement() string {
	if x != nil {
		return x.Abonnement
	}
	return ""
}

func (x *AbonnmentAccountRes) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *AbonnmentAccountRes) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *AbonnmentAccountRes) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AbonnmentAccountRes) GetOrder() uint64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *AbonnmentAccountRes) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *AbonnmentAccountRes) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *AbonnmentAccountRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AbonnmentAccountRes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AbonnementAccountCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountAlias  string `protobuf:"bytes,2,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountNumber string `protobuf:"bytes,3,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	Order         uint64 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *AbonnementAccountCreateTask) Reset() {
	*x = AbonnementAccountCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbonnementAccountCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonnementAccountCreateTask) ProtoMessage() {}

func (x *AbonnementAccountCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonnementAccountCreateTask.ProtoReflect.Descriptor instead.
func (*AbonnementAccountCreateTask) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{30}
}

func (x *AbonnementAccountCreateTask) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *AbonnementAccountCreateTask) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *AbonnementAccountCreateTask) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AbonnementAccountCreateTask) GetOrder() uint64 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CustomAbonnementCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value  uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CustomAbonnementCreateTask) Reset() {
	*x = CustomAbonnementCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAbonnementCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAbonnementCreateTask) ProtoMessage() {}

func (x *CustomAbonnementCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAbonnementCreateTask.ProtoReflect.Descriptor instead.
func (*CustomAbonnementCreateTask) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{31}
}

func (x *CustomAbonnementCreateTask) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CustomAbonnementCreateTask) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *CustomAbonnementCreateTask) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CompanyCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyCreateTask) Reset() {
	*x = CompanyCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyCreateTask) ProtoMessage() {}

func (x *CompanyCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyCreateTask.ProtoReflect.Descriptor instead.
func (*CompanyCreateTask) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{32}
}

func (x *CompanyCreateTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanyCreateTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyListTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompanyListTask) Reset() {
	*x = CompanyListTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyListTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyListTask) ProtoMessage() {}

func (x *CompanyListTask) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyListTask.ProtoReflect.Descriptor instead.
func (*CompanyListTask) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{33}
}

func (x *CompanyListTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *CompanyListTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListFilterAbannomentInvoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status    string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListFilterAbannomentInvoice) Reset() {
	*x = ListFilterAbannomentInvoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilterAbannomentInvoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilterAbannomentInvoice) ProtoMessage() {}

func (x *ListFilterAbannomentInvoice) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilterAbannomentInvoice.ProtoReflect.Descriptor instead.
func (*ListFilterAbannomentInvoice) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{34}
}

func (x *ListFilterAbannomentInvoice) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListFilterAbannomentInvoice) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListFilterAbannomentInvoice) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListFilterAbannomentInvoice) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ListFilterAbannomentInvoice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListAbonnementInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32                                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                                `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListAbonnementInvoiceRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=abonnement.service.v1.ListAbonnementInvoiceRequestDirection" json:"dir,omitempty"`
	Filter *ListFilterAbannomentInvoice          `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search string                                `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *ListAbonnementInvoiceRequest) Reset() {
	*x = ListAbonnementInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAbonnementInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAbonnementInvoiceRequest) ProtoMessage() {}

func (x *ListAbonnementInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAbonnementInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ListAbonnementInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{35}
}

func (x *ListAbonnementInvoiceRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAbonnementInvoiceRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAbonnementInvoiceRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListAbonnementInvoiceRequest) GetDir() ListAbonnementInvoiceRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListAbonnementInvoiceRequest_DESC
}

func (x *ListAbonnementInvoiceRequest) GetFilter() *ListFilterAbannomentInvoice {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAbonnementInvoiceRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type DownloadListAbonnementInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32                                         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                         `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                        `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        DownloadListAbonnementInvoiceRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=abonnement.service.v1.DownloadListAbonnementInvoiceRequestDirection" json:"dir,omitempty"`
	Filter     *ListFilterAbannomentInvoice                  `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                                        `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	FileFormat DownloadListAbonnementInvoiceRequest_Formats  `protobuf:"varint,15,opt,name=fileFormat,proto3,enum=abonnement.service.v1.DownloadListAbonnementInvoiceRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *DownloadListAbonnementInvoiceRequest) Reset() {
	*x = DownloadListAbonnementInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadListAbonnementInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadListAbonnementInvoiceRequest) ProtoMessage() {}

func (x *DownloadListAbonnementInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadListAbonnementInvoiceRequest.ProtoReflect.Descriptor instead.
func (*DownloadListAbonnementInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{36}
}

func (x *DownloadListAbonnementInvoiceRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DownloadListAbonnementInvoiceRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DownloadListAbonnementInvoiceRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DownloadListAbonnementInvoiceRequest) GetDir() DownloadListAbonnementInvoiceRequestDirection {
	if x != nil {
		return x.Dir
	}
	return DownloadListAbonnementInvoiceRequest_DESC
}

func (x *DownloadListAbonnementInvoiceRequest) GetFilter() *ListFilterAbannomentInvoice {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DownloadListAbonnementInvoiceRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *DownloadListAbonnementInvoiceRequest) GetFileFormat() DownloadListAbonnementInvoiceRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return DownloadListAbonnementInvoiceRequest_null
}

type ListAbonnementInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*AbonnementInvoice `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse  `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAbonnementInvoiceResponse) Reset() {
	*x = ListAbonnementInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAbonnementInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAbonnementInvoiceResponse) ProtoMessage() {}

func (x *ListAbonnementInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAbonnementInvoiceResponse.ProtoReflect.Descriptor instead.
func (*ListAbonnementInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{37}
}

func (x *ListAbonnementInvoiceResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListAbonnementInvoiceResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAbonnementInvoiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAbonnementInvoiceResponse) GetData() []*AbonnementInvoice {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListAbonnementInvoiceResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AbonnementInvoiceDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonnementID uint64 `protobuf:"varint,1,opt,name=abonnementID,proto3" json:"abonnementID,omitempty"`
}

func (x *AbonnementInvoiceDetailRequest) Reset() {
	*x = AbonnementInvoiceDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbonnementInvoiceDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonnementInvoiceDetailRequest) ProtoMessage() {}

func (x *AbonnementInvoiceDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonnementInvoiceDetailRequest.ProtoReflect.Descriptor instead.
func (*AbonnementInvoiceDetailRequest) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{38}
}

func (x *AbonnementInvoiceDetailRequest) GetAbonnementID() uint64 {
	if x != nil {
		return x.AbonnementID
	}
	return 0
}

type CekAvaibilityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *CekAvaibilityReq) Reset() {
	*x = CekAvaibilityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekAvaibilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekAvaibilityReq) ProtoMessage() {}

func (x *CekAvaibilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekAvaibilityReq.ProtoReflect.Descriptor instead.
func (*CekAvaibilityReq) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{39}
}

func (x *CekAvaibilityReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type CekAvaibilityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available bool   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CekAvaibilityRes) Reset() {
	*x = CekAvaibilityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_abonnement_payload_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CekAvaibilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CekAvaibilityRes) ProtoMessage() {}

func (x *CekAvaibilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_abonnement_payload_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CekAvaibilityRes.ProtoReflect.Descriptor instead.
func (*CekAvaibilityRes) Descriptor() ([]byte, []int) {
	return file_abonnement_payload_proto_rawDescGZIP(), []int{40}
}

func (x *CekAvaibilityRes) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *CekAvaibilityRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_abonnement_payload_proto protoreflect.FileDescriptor

var file_abonnement_payload_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x18, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f,
	0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69,
	0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f,
	0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x4b, 0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x4a, 0x57, 0x54, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c,
	0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x03, 0x0a,
	0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0xd3, 0x03, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0a, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92,
	0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62,
	0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x48, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x1e, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xde, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x49, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x22, 0xb8, 0x03, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x3a, 0xa2, 0x02, 0x92, 0x41, 0x9e, 0x02,
	0x32, 0x9b, 0x02, 0x7b, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x7b, 0x22, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x3a,
	0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x31, 0x2d, 0x30,
	0x31, 0x22, 0x2c, 0x22, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x30,
	0x7d, 0x5d, 0x2c, 0x22, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x30, 0x2c, 0x22, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x30, 0x7d, 0x5d,
	0x2c, 0x22, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x30, 0x2c,
	0x22, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x2c, 0x22, 0x61, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x3a, 0x30, 0x7d, 0x5d, 0x7d, 0x2c, 0x22,
	0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x7d, 0x22, 0x5e,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x0e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0x7a, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xd4, 0x04, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x62, 0x61, 0x6e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x62, 0x61, 0x6e, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x10, 0x05, 0x22, 0xe8, 0x04, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x39, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4c,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x43, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41,
	0x62, 0x61, 0x6e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xe6,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x06, 0x0a, 0x21, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x54, 0x0a, 0x03, 0x64, 0x69,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x12, 0x43, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x41, 0x62, 0x61, 0x6e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x60, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x40, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x53, 0x43, 0x10, 0x01, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12,
	0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63,
	0x73, 0x76, 0x10, 0x03, 0x22, 0x35, 0x0a, 0x1b, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x9d, 0x01, 0x0a, 0x1c,
	0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x07, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x54, 0x0a, 0x14, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x14, 0x4d, 0x65, 0x63, 0x68, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x50, 0x0a, 0x12, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x12, 0x4d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x4c, 0x0a, 0x10, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x10, 0x4d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x62,
	0x0a, 0x12, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x12,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x52, 0x11, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x12, 0x61, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x12,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x5f, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22,
	0xfe, 0x05, 0x0a, 0x17, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x5a, 0x0a, 0x12, 0x61, 0x62, 0x6f, 0x6e, 0x6e,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x52,
	0x12, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0x39, 0x0a, 0x09, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xab, 0x08, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3e, 0x0a, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x54, 0x0a, 0x14, 0x4d, 0x65, 0x63, 0x68, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x14, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a,
	0x12, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x12, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x4c, 0x0a, 0x10, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x10, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x09, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x52, 0x09, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x24, 0x0a,
	0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x5a, 0x0a, 0x12, 0x61, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62,
	0x6f, 0x6e, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x52, 0x12, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x52, 0x11, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x12, 0x61,
	0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x12, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf8, 0x03, 0x0a, 0x0c, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xc1, 0x03, 0x0a, 0x13, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x61, 0x62, 0x6f, 0x6e, 0x6e,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x1b, 0x41, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x29, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x5e, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x45, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x62, 0x61, 0x6e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4f, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x4a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x62, 0x61, 0x6e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x1e, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53,
	0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xd6, 0x03, 0x0a,
	0x24, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f,
	0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x57, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x45, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x4a, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61,
	0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41,
	0x62, 0x61, 0x6e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x63, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64,
	0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0xec, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x62, 0x6f, 0x6e,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x1e, 0x41, 0x62, 0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x62,
	0x6f, 0x6e, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x10, 0x43, 0x65,
	0x6b, 0x41, 0x76, 0x61, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x10,
	0x43, 0x65, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_abonnement_payload_proto_rawDescOnce sync.Once
	file_abonnement_payload_proto_rawDescData = file_abonnement_payload_proto_rawDesc
)

func file_abonnement_payload_proto_rawDescGZIP() []byte {
	file_abonnement_payload_proto_rawDescOnce.Do(func() {
		file_abonnement_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_abonnement_payload_proto_rawDescData)
	})
	return file_abonnement_payload_proto_rawDescData
}

var file_abonnement_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_abonnement_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_abonnement_payload_proto_goTypes = []interface{}{
	(ListAbonnementRequestDirection)(0),                // 0: abonnement.service.v1.ListAbonnementRequest.direction
	(ListFilterAbannomentStatuses)(0),                  // 1: abonnement.service.v1.ListFilterAbannoment.statuses
	(ListAbonnementTaskRequestStatuses)(0),             // 2: abonnement.service.v1.ListAbonnementTaskRequest.statuses
	(ListAbonnementTaskRequestSteps)(0),                // 3: abonnement.service.v1.ListAbonnementTaskRequest.steps
	(ListAbonnementTaskRequestDirection)(0),            // 4: abonnement.service.v1.ListAbonnementTaskRequest.direction
	(DownloadListAbonnementTaskRequestStatuses)(0),     // 5: abonnement.service.v1.DownloadListAbonnementTaskRequest.statuses
	(DownloadListAbonnementTaskRequestSteps)(0),        // 6: abonnement.service.v1.DownloadListAbonnementTaskRequest.steps
	(DownloadListAbonnementTaskRequestDirection)(0),    // 7: abonnement.service.v1.DownloadListAbonnementTaskRequest.direction
	(DownloadListAbonnementTaskRequest_Formats)(0),     // 8: abonnement.service.v1.DownloadListAbonnementTaskRequest.Formats
	(ListAbonnementInvoiceRequestDirection)(0),         // 9: abonnement.service.v1.ListAbonnementInvoiceRequest.direction
	(DownloadListAbonnementInvoiceRequestDirection)(0), // 10: abonnement.service.v1.DownloadListAbonnementInvoiceRequest.direction
	(DownloadListAbonnementInvoiceRequest_Formats)(0),  // 11: abonnement.service.v1.DownloadListAbonnementInvoiceRequest.Formats
	(*ErrorBodyResponse)(nil),                          // 12: abonnement.service.v1.errorBodyResponse
	(*LoginRequest)(nil),                               // 13: abonnement.service.v1.LoginRequest
	(*LoginResponse)(nil),                              // 14: abonnement.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                        // 15: abonnement.service.v1.HealthCheckResponse
	(*Empty)(nil),                                      // 16: abonnement.service.v1.Empty
	(*InvalidKeyError)(nil),                            // 17: abonnement.service.v1.InvalidKeyError
	(*JWTTokenResponse)(nil),                           // 18: abonnement.service.v1.JWTTokenResponse
	(*ListRequest)(nil),                                // 19: abonnement.service.v1.ListRequest
	(*Sort)(nil),                                       // 20: abonnement.service.v1.Sort
	(*Task)(nil),                                       // 21: abonnement.service.v1.Task
	(*PaginationResponse)(nil),                         // 22: abonnement.service.v1.PaginationResponse
	(*ListAbonnementRequest)(nil),                      // 23: abonnement.service.v1.ListAbonnementRequest
	(*ListAbonnementResponse)(nil),                     // 24: abonnement.service.v1.ListAbonnementResponse
	(*CreateAbonnementRequest)(nil),                    // 25: abonnement.service.v1.CreateAbonnementRequest
	(*CreateAbonnementTaskRequest)(nil),                // 26: abonnement.service.v1.CreateAbonnementTaskRequest
	(*CreateAbonnementResponse)(nil),                   // 27: abonnement.service.v1.CreateAbonnementResponse
	(*AbonnementTask)(nil),                             // 28: abonnement.service.v1.AbonnementTask
	(*CreateAbonnementTaskResponse)(nil),               // 29: abonnement.service.v1.CreateAbonnementTaskResponse
	(*ListFilterAbannoment)(nil),                       // 30: abonnement.service.v1.ListFilterAbannoment
	(*ListAbonnementTaskRequest)(nil),                  // 31: abonnement.service.v1.ListAbonnementTaskRequest
	(*ListAbonnementTaskResponse)(nil),                 // 32: abonnement.service.v1.ListAbonnementTaskResponse
	(*DownloadListAbonnementTaskRequest)(nil),          // 33: abonnement.service.v1.DownloadListAbonnementTaskRequest
	(*AbonnementTaskDetailRequest)(nil),                // 34: abonnement.service.v1.AbonnementTaskDetailRequest
	(*AbonnementTaskDetailResponse)(nil),               // 35: abonnement.service.v1.AbonnementTaskDetailResponse
	(*CreateAbonnementTaskReq)(nil),                    // 36: abonnement.service.v1.CreateAbonnementTaskReq
	(*DetailTaskAbonnementRes)(nil),                    // 37: abonnement.service.v1.DetailTaskAbonnementRes
	(*Mechanism)(nil),                                  // 38: abonnement.service.v1.mechanism
	(*ListTaskAbonnementRes)(nil),                      // 39: abonnement.service.v1.ListTaskAbonnementRes
	(*TaskListTask)(nil),                               // 40: abonnement.service.v1.TaskListTask
	(*AbonnmentAccountRes)(nil),                        // 41: abonnement.service.v1.AbonnmentAccountRes
	(*AbonnementAccountCreateTask)(nil),                // 42: abonnement.service.v1.AbonnementAccountCreateTask
	(*CustomAbonnementCreateTask)(nil),                 // 43: abonnement.service.v1.CustomAbonnementCreateTask
	(*CompanyCreateTask)(nil),                          // 44: abonnement.service.v1.CompanyCreateTask
	(*CompanyListTask)(nil),                            // 45: abonnement.service.v1.CompanyListTask
	(*ListFilterAbannomentInvoice)(nil),                // 46: abonnement.service.v1.ListFilterAbannomentInvoice
	(*ListAbonnementInvoiceRequest)(nil),               // 47: abonnement.service.v1.ListAbonnementInvoiceRequest
	(*DownloadListAbonnementInvoiceRequest)(nil),       // 48: abonnement.service.v1.DownloadListAbonnementInvoiceRequest
	(*ListAbonnementInvoiceResponse)(nil),              // 49: abonnement.service.v1.ListAbonnementInvoiceResponse
	(*AbonnementInvoiceDetailRequest)(nil),             // 50: abonnement.service.v1.AbonnementInvoiceDetailRequest
	(*CekAvaibilityReq)(nil),                           // 51: abonnement.service.v1.CekAvaibilityReq
	(*CekAvaibilityRes)(nil),                           // 52: abonnement.service.v1.CekAvaibilityRes
	(structpb.NullValue)(0),                            // 53: google.protobuf.NullValue
	(*timestamppb.Timestamp)(nil),                      // 54: google.protobuf.Timestamp
	(*Abonnement)(nil),                                 // 55: abonnement.service.v1.Abonnement
	(*AbonnementRetry)(nil),                            // 56: abonnement.service.v1.AbonnementRetry
	(*AbonnementInvoice)(nil),                          // 57: abonnement.service.v1.AbonnementInvoice
}
var file_abonnement_payload_proto_depIdxs = []int32{
	53, // 0: abonnement.service.v1.errorBodyResponse.data:type_name -> google.protobuf.NullValue
	54, // 1: abonnement.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	54, // 2: abonnement.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	55, // 3: abonnement.service.v1.ListAbonnementRequest.abonnement:type_name -> abonnement.service.v1.Abonnement
	0,  // 4: abonnement.service.v1.ListAbonnementRequest.dir:type_name -> abonnement.service.v1.ListAbonnementRequest.direction
	55, // 5: abonnement.service.v1.ListAbonnementResponse.data:type_name -> abonnement.service.v1.Abonnement
	22, // 6: abonnement.service.v1.ListAbonnementResponse.pagination:type_name -> abonnement.service.v1.PaginationResponse
	36, // 7: abonnement.service.v1.CreateAbonnementRequest.data:type_name -> abonnement.service.v1.CreateAbonnementTaskReq
	36, // 8: abonnement.service.v1.CreateAbonnementTaskRequest.data:type_name -> abonnement.service.v1.CreateAbonnementTaskReq
	39, // 9: abonnement.service.v1.AbonnementTask.abonnement:type_name -> abonnement.service.v1.ListTaskAbonnementRes
	21, // 10: abonnement.service.v1.AbonnementTask.task:type_name -> abonnement.service.v1.Task
	1,  // 11: abonnement.service.v1.ListFilterAbannoment.status:type_name -> abonnement.service.v1.ListFilterAbannoment.statuses
	2,  // 12: abonnement.service.v1.ListAbonnementTaskRequest.status:type_name -> abonnement.service.v1.ListAbonnementTaskRequest.statuses
	3,  // 13: abonnement.service.v1.ListAbonnementTaskRequest.step:type_name -> abonnement.service.v1.ListAbonnementTaskRequest.steps
	4,  // 14: abonnement.service.v1.ListAbonnementTaskRequest.dir:type_name -> abonnement.service.v1.ListAbonnementTaskRequest.direction
	30, // 15: abonnement.service.v1.ListAbonnementTaskRequest.filter:type_name -> abonnement.service.v1.ListFilterAbannoment
	28, // 16: abonnement.service.v1.ListAbonnementTaskResponse.data:type_name -> abonnement.service.v1.AbonnementTask
	22, // 17: abonnement.service.v1.ListAbonnementTaskResponse.pagination:type_name -> abonnement.service.v1.PaginationResponse
	5,  // 18: abonnement.service.v1.DownloadListAbonnementTaskRequest.status:type_name -> abonnement.service.v1.DownloadListAbonnementTaskRequest.statuses
	6,  // 19: abonnement.service.v1.DownloadListAbonnementTaskRequest.step:type_name -> abonnement.service.v1.DownloadListAbonnementTaskRequest.steps
	7,  // 20: abonnement.service.v1.DownloadListAbonnementTaskRequest.dir:type_name -> abonnement.service.v1.DownloadListAbonnementTaskRequest.direction
	30, // 21: abonnement.service.v1.DownloadListAbonnementTaskRequest.filter:type_name -> abonnement.service.v1.ListFilterAbannoment
	8,  // 22: abonnement.service.v1.DownloadListAbonnementTaskRequest.fileFormat:type_name -> abonnement.service.v1.DownloadListAbonnementTaskRequest.Formats
	28, // 23: abonnement.service.v1.AbonnementTaskDetailResponse.data:type_name -> abonnement.service.v1.AbonnementTask
	38, // 24: abonnement.service.v1.CreateAbonnementTaskReq.MechanismTransaction:type_name -> abonnement.service.v1.mechanism
	38, // 25: abonnement.service.v1.CreateAbonnementTaskReq.MechanismFrequency:type_name -> abonnement.service.v1.mechanism
	38, // 26: abonnement.service.v1.CreateAbonnementTaskReq.MechanismBalance:type_name -> abonnement.service.v1.mechanism
	44, // 27: abonnement.service.v1.CreateAbonnementTaskReq.company:type_name -> abonnement.service.v1.CompanyCreateTask
	42, // 28: abonnement.service.v1.CreateAbonnementTaskReq.abonnementAccounts:type_name -> abonnement.service.v1.AbonnementAccountCreateTask
	56, // 29: abonnement.service.v1.CreateAbonnementTaskReq.abonnementRetries:type_name -> abonnement.service.v1.AbonnementRetry
	57, // 30: abonnement.service.v1.CreateAbonnementTaskReq.abonnementInvoices:type_name -> abonnement.service.v1.AbonnementInvoice
	43, // 31: abonnement.service.v1.CreateAbonnementTaskReq.customAbonnements:type_name -> abonnement.service.v1.CustomAbonnementCreateTask
	54, // 32: abonnement.service.v1.DetailTaskAbonnementRes.deadlineDate:type_name -> google.protobuf.Timestamp
	45, // 33: abonnement.service.v1.DetailTaskAbonnementRes.company:type_name -> abonnement.service.v1.CompanyListTask
	41, // 34: abonnement.service.v1.DetailTaskAbonnementRes.abonnementAccounts:type_name -> abonnement.service.v1.AbonnmentAccountRes
	54, // 35: abonnement.service.v1.DetailTaskAbonnementRes.createdAt:type_name -> google.protobuf.Timestamp
	54, // 36: abonnement.service.v1.DetailTaskAbonnementRes.updatedAt:type_name -> google.protobuf.Timestamp
	40, // 37: abonnement.service.v1.DetailTaskAbonnementRes.task:type_name -> abonnement.service.v1.TaskListTask
	54, // 38: abonnement.service.v1.ListTaskAbonnementRes.deadlineDate:type_name -> google.protobuf.Timestamp
	38, // 39: abonnement.service.v1.ListTaskAbonnementRes.MechanismTransaction:type_name -> abonnement.service.v1.mechanism
	38, // 40: abonnement.service.v1.ListTaskAbonnementRes.MechanismFrequency:type_name -> abonnement.service.v1.mechanism
	38, // 41: abonnement.service.v1.ListTaskAbonnementRes.MechanismBalance:type_name -> abonnement.service.v1.mechanism
	38, // 42: abonnement.service.v1.ListTaskAbonnementRes.Mechanism:type_name -> abonnement.service.v1.mechanism
	45, // 43: abonnement.service.v1.ListTaskAbonnementRes.company:type_name -> abonnement.service.v1.CompanyListTask
	41, // 44: abonnement.service.v1.ListTaskAbonnementRes.abonnementAccounts:type_name -> abonnement.service.v1.AbonnmentAccountRes
	56, // 45: abonnement.service.v1.ListTaskAbonnementRes.abonnementRetries:type_name -> abonnement.service.v1.AbonnementRetry
	57, // 46: abonnement.service.v1.ListTaskAbonnementRes.abonnementInvoices:type_name -> abonnement.service.v1.AbonnementInvoice
	54, // 47: abonnement.service.v1.ListTaskAbonnementRes.createdAt:type_name -> google.protobuf.Timestamp
	54, // 48: abonnement.service.v1.ListTaskAbonnementRes.updatedAt:type_name -> google.protobuf.Timestamp
	54, // 49: abonnement.service.v1.TaskListTask.createdAt:type_name -> google.protobuf.Timestamp
	54, // 50: abonnement.service.v1.TaskListTask.updatedAt:type_name -> google.protobuf.Timestamp
	54, // 51: abonnement.service.v1.AbonnmentAccountRes.createdAt:type_name -> google.protobuf.Timestamp
	54, // 52: abonnement.service.v1.AbonnmentAccountRes.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 53: abonnement.service.v1.ListAbonnementInvoiceRequest.dir:type_name -> abonnement.service.v1.ListAbonnementInvoiceRequest.direction
	46, // 54: abonnement.service.v1.ListAbonnementInvoiceRequest.filter:type_name -> abonnement.service.v1.ListFilterAbannomentInvoice
	10, // 55: abonnement.service.v1.DownloadListAbonnementInvoiceRequest.dir:type_name -> abonnement.service.v1.DownloadListAbonnementInvoiceRequest.direction
	46, // 56: abonnement.service.v1.DownloadListAbonnementInvoiceRequest.filter:type_name -> abonnement.service.v1.ListFilterAbannomentInvoice
	11, // 57: abonnement.service.v1.DownloadListAbonnementInvoiceRequest.fileFormat:type_name -> abonnement.service.v1.DownloadListAbonnementInvoiceRequest.Formats
	57, // 58: abonnement.service.v1.ListAbonnementInvoiceResponse.data:type_name -> abonnement.service.v1.AbonnementInvoice
	22, // 59: abonnement.service.v1.ListAbonnementInvoiceResponse.pagination:type_name -> abonnement.service.v1.PaginationResponse
	60, // [60:60] is the sub-list for method output_type
	60, // [60:60] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_abonnement_payload_proto_init() }
func file_abonnement_payload_proto_init() {
	if File_abonnement_payload_proto != nil {
		return
	}
	file_abonnement_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_abonnement_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAbonnementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAbonnementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAbonnementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAbonnementTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAbonnementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbonnementTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAbonnementTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilterAbannoment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAbonnementTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAbonnementTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadListAbonnementTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbonnementTaskDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbonnementTaskDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAbonnementTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTaskAbonnementRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mechanism); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskAbonnementRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbonnmentAccountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbonnementAccountCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAbonnementCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyListTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilterAbannomentInvoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAbonnementInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadListAbonnementInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAbonnementInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbonnementInvoiceDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekAvaibilityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_abonnement_payload_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CekAvaibilityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_abonnement_payload_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_abonnement_payload_proto_goTypes,
		DependencyIndexes: file_abonnement_payload_proto_depIdxs,
		EnumInfos:         file_abonnement_payload_proto_enumTypes,
		MessageInfos:      file_abonnement_payload_proto_msgTypes,
	}.Build()
	File_abonnement_payload_proto = out.File
	file_abonnement_payload_proto_rawDesc = nil
	file_abonnement_payload_proto_goTypes = nil
	file_abonnement_payload_proto_depIdxs = nil
}
