// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: deposito_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_AllStatus        TaskStatus = 0
	TaskStatus_Pending          TaskStatus = 1
	TaskStatus_Draft            TaskStatus = 2
	TaskStatus_Returned         TaskStatus = 3
	TaskStatus_Approved         TaskStatus = 4
	TaskStatus_Rejected         TaskStatus = 5
	TaskStatus_RequestForDelete TaskStatus = 6
	TaskStatus_Deleted          TaskStatus = 7
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "RequestForDelete",
		7: "Deleted",
	}
	TaskStatus_value = map[string]int32{
		"AllStatus":        0,
		"Pending":          1,
		"Draft":            2,
		"Returned":         3,
		"Approved":         4,
		"Rejected":         5,
		"RequestForDelete": 6,
		"Deleted":          7,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_deposito_payload_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_deposito_payload_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{0}
}

type TaskStep int32

const (
	TaskStep_AllStep  TaskStep = 0
	TaskStep_Maker    TaskStep = 1
	TaskStep_Checker  TaskStep = 2
	TaskStep_Signer   TaskStep = 3
	TaskStep_Releaser TaskStep = 4
)

// Enum value maps for TaskStep.
var (
	TaskStep_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	TaskStep_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x TaskStep) Enum() *TaskStep {
	p := new(TaskStep)
	*p = x
	return p
}

func (x TaskStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStep) Descriptor() protoreflect.EnumDescriptor {
	return file_deposito_payload_proto_enumTypes[1].Descriptor()
}

func (TaskStep) Type() protoreflect.EnumType {
	return &file_deposito_payload_proto_enumTypes[1]
}

func (x TaskStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStep.Descriptor instead.
func (TaskStep) EnumDescriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{1}
}

type SortDirection int32

const (
	SortDirection_DESC SortDirection = 0
	SortDirection_ASC  SortDirection = 1
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	SortDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_deposito_payload_proto_enumTypes[2].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_deposito_payload_proto_enumTypes[2]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{2}
}

type FileTaskListRequest_Formats int32

const (
	FileTaskListRequest_null FileTaskListRequest_Formats = 0
	FileTaskListRequest_pdf  FileTaskListRequest_Formats = 1
	FileTaskListRequest_xls  FileTaskListRequest_Formats = 2
	FileTaskListRequest_csv  FileTaskListRequest_Formats = 3
)

// Enum value maps for FileTaskListRequest_Formats.
var (
	FileTaskListRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileTaskListRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileTaskListRequest_Formats) Enum() *FileTaskListRequest_Formats {
	p := new(FileTaskListRequest_Formats)
	*p = x
	return p
}

func (x FileTaskListRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileTaskListRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_deposito_payload_proto_enumTypes[3].Descriptor()
}

func (FileTaskListRequest_Formats) Type() protoreflect.EnumType {
	return &file_deposito_payload_proto_enumTypes[3]
}

func (x FileTaskListRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileTaskListRequest_Formats.Descriptor instead.
func (FileTaskListRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{16, 0}
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,11,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,12,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	Workflow           string                 `protobuf:"bytes,14,opt,name=workflow,proto3" json:"workflow,omitempty"`
	CompanyID          uint64                 `protobuf:"varint,15,opt,name=companyID,proto3" json:"companyID,omitempty"`
	DataBak            string                 `protobuf:"bytes,16,opt,name=dataBak,proto3" json:"dataBak,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *Task) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Task) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *Task) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Task) GetDataBak() string {
	if x != nil {
		return x.DataBak
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DepositoDataTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositoID       uint64                 `protobuf:"varint,1,opt,name=depositoID,proto3" json:"depositoID,omitempty"`
	CompanyID        uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccNo_Deposito   string                 `protobuf:"bytes,3,opt,name=accNo_Deposito,json=accNoDeposito,proto3" json:"accNo_Deposito,omitempty"`
	AccTDID          uint64                 `protobuf:"varint,7,opt,name=accTDID,proto3" json:"accTDID,omitempty"`
	AccInterestID    uint64                 `protobuf:"varint,8,opt,name=accInterestID,proto3" json:"accInterestID,omitempty"`
	AccPrincipalID   uint64                 `protobuf:"varint,9,opt,name=accPrincipalID,proto3" json:"accPrincipalID,omitempty"`
	DepositoName     string                 `protobuf:"bytes,10,opt,name=depositoName,proto3" json:"depositoName,omitempty"`
	DepositType      string                 `protobuf:"bytes,11,opt,name=depositType,proto3" json:"depositType,omitempty"`
	Tenor            string                 `protobuf:"bytes,12,opt,name=tenor,proto3" json:"tenor,omitempty"`
	Amount           string                 `protobuf:"bytes,13,opt,name=amount,proto3" json:"amount,omitempty"`
	InterestRate     string                 `protobuf:"bytes,14,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	Currency         string                 `protobuf:"bytes,15,opt,name=currency,proto3" json:"currency,omitempty"`
	WithdrawAt       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=withdrawAt,proto3" json:"withdrawAt,omitempty"`
	Status           string                 `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	Penalty          string                 `protobuf:"bytes,18,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Interest         string                 `protobuf:"bytes,19,opt,name=interest,proto3" json:"interest,omitempty"`
	CreatedById      uint64                 `protobuf:"varint,25,opt,name=createdById,proto3" json:"createdById,omitempty"`
	UpdatedById      uint64                 `protobuf:"varint,26,opt,name=updatedById,proto3" json:"updatedById,omitempty"`
	Code             string                 `protobuf:"bytes,27,opt,name=code,proto3" json:"code,omitempty"`
	Voucher          string                 `protobuf:"bytes,28,opt,name=voucher,proto3" json:"voucher,omitempty"`
	IsWithdraw       bool                   `protobuf:"varint,29,opt,name=isWithdraw,proto3" json:"isWithdraw,omitempty"`
	OpenDate         *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=openDate,proto3" json:"openDate,omitempty"`
	LastRenewalDate  *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=lastRenewalDate,proto3" json:"lastRenewalDate,omitempty"`
	TransactionSvcId uint64                 `protobuf:"varint,96,opt,name=transaction_svc_id,json=transactionSvcId,proto3" json:"transaction_svc_id,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DepositoDataTask) Reset() {
	*x = DepositoDataTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataTask) ProtoMessage() {}

func (x *DepositoDataTask) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataTask.ProtoReflect.Descriptor instead.
func (*DepositoDataTask) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{2}
}

func (x *DepositoDataTask) GetDepositoID() uint64 {
	if x != nil {
		return x.DepositoID
	}
	return 0
}

func (x *DepositoDataTask) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *DepositoDataTask) GetAccNo_Deposito() string {
	if x != nil {
		return x.AccNo_Deposito
	}
	return ""
}

func (x *DepositoDataTask) GetAccTDID() uint64 {
	if x != nil {
		return x.AccTDID
	}
	return 0
}

func (x *DepositoDataTask) GetAccInterestID() uint64 {
	if x != nil {
		return x.AccInterestID
	}
	return 0
}

func (x *DepositoDataTask) GetAccPrincipalID() uint64 {
	if x != nil {
		return x.AccPrincipalID
	}
	return 0
}

func (x *DepositoDataTask) GetDepositoName() string {
	if x != nil {
		return x.DepositoName
	}
	return ""
}

func (x *DepositoDataTask) GetDepositType() string {
	if x != nil {
		return x.DepositType
	}
	return ""
}

func (x *DepositoDataTask) GetTenor() string {
	if x != nil {
		return x.Tenor
	}
	return ""
}

func (x *DepositoDataTask) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositoDataTask) GetInterestRate() string {
	if x != nil {
		return x.InterestRate
	}
	return ""
}

func (x *DepositoDataTask) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DepositoDataTask) GetWithdrawAt() *timestamppb.Timestamp {
	if x != nil {
		return x.WithdrawAt
	}
	return nil
}

func (x *DepositoDataTask) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DepositoDataTask) GetPenalty() string {
	if x != nil {
		return x.Penalty
	}
	return ""
}

func (x *DepositoDataTask) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *DepositoDataTask) GetCreatedById() uint64 {
	if x != nil {
		return x.CreatedById
	}
	return 0
}

func (x *DepositoDataTask) GetUpdatedById() uint64 {
	if x != nil {
		return x.UpdatedById
	}
	return 0
}

func (x *DepositoDataTask) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DepositoDataTask) GetVoucher() string {
	if x != nil {
		return x.Voucher
	}
	return ""
}

func (x *DepositoDataTask) GetIsWithdraw() bool {
	if x != nil {
		return x.IsWithdraw
	}
	return false
}

func (x *DepositoDataTask) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *DepositoDataTask) GetLastRenewalDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRenewalDate
	}
	return nil
}

func (x *DepositoDataTask) GetTransactionSvcId() uint64 {
	if x != nil {
		return x.TransactionSvcId
	}
	return 0
}

func (x *DepositoDataTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DepositoDataTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ManageDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenor        string `protobuf:"bytes,1,opt,name=tenor,proto3" json:"tenor,omitempty"`
	DepositType  string `protobuf:"bytes,2,opt,name=depositType,proto3" json:"depositType,omitempty"`
	InterestRate string `protobuf:"bytes,3,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	Voucher      string `protobuf:"bytes,4,opt,name=voucher,proto3" json:"voucher,omitempty"`
}

func (x *ManageDeposit) Reset() {
	*x = ManageDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageDeposit) ProtoMessage() {}

func (x *ManageDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageDeposit.ProtoReflect.Descriptor instead.
func (*ManageDeposit) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{3}
}

func (x *ManageDeposit) GetTenor() string {
	if x != nil {
		return x.Tenor
	}
	return ""
}

func (x *ManageDeposit) GetDepositType() string {
	if x != nil {
		return x.DepositType
	}
	return ""
}

func (x *ManageDeposit) GetInterestRate() string {
	if x != nil {
		return x.InterestRate
	}
	return ""
}

func (x *ManageDeposit) GetVoucher() string {
	if x != nil {
		return x.Voucher
	}
	return ""
}

type ManageDepositTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *ManageDeposit `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID   uint64         `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft  bool           `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	PassCode string         `protobuf:"bytes,30,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *ManageDepositTaskRequest) Reset() {
	*x = ManageDepositTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageDepositTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageDepositTaskRequest) ProtoMessage() {}

func (x *ManageDepositTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageDepositTaskRequest.ProtoReflect.Descriptor instead.
func (*ManageDepositTaskRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{4}
}

func (x *ManageDepositTaskRequest) GetData() *ManageDeposit {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ManageDepositTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *ManageDepositTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *ManageDepositTaskRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type WithdrawDepositTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWithdraw bool   `protobuf:"varint,1,opt,name=isWithdraw,proto3" json:"isWithdraw,omitempty"`
	TaskID     uint64 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	PassCode   string `protobuf:"bytes,30,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *WithdrawDepositTaskRequest) Reset() {
	*x = WithdrawDepositTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawDepositTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawDepositTaskRequest) ProtoMessage() {}

func (x *WithdrawDepositTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawDepositTaskRequest.ProtoReflect.Descriptor instead.
func (*WithdrawDepositTaskRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{5}
}

func (x *WithdrawDepositTaskRequest) GetIsWithdraw() bool {
	if x != nil {
		return x.IsWithdraw
	}
	return false
}

func (x *WithdrawDepositTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *WithdrawDepositTaskRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type CreateDepositoTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *DepositoDataTask `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID   uint64            `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft  bool              `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	PassCode string            `protobuf:"bytes,30,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *CreateDepositoTaskRequest) Reset() {
	*x = CreateDepositoTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoTaskRequest) ProtoMessage() {}

func (x *CreateDepositoTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateDepositoTaskRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDepositoTaskRequest) GetData() *DepositoDataTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateDepositoTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateDepositoTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *CreateDepositoTaskRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type TaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task            *Task                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Deposito        *DepositoDataTask     `protobuf:"bytes,2,opt,name=Deposito,proto3" json:"Deposito,omitempty"`
	Company         *Company              `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Account         *Accounts             `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	WorkflowHistory []*WorkflowDataStatus `protobuf:"bytes,5,rep,name=workflowHistory,proto3" json:"workflowHistory,omitempty"`
	DepositoPrev    *DepositoDataTask     `protobuf:"bytes,6,opt,name=DepositoPrev,proto3" json:"DepositoPrev,omitempty"`
	DepositoNew     *DepositoDataTask     `protobuf:"bytes,7,opt,name=DepositoNew,proto3" json:"DepositoNew,omitempty"`
}

func (x *TaskData) Reset() {
	*x = TaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskData) ProtoMessage() {}

func (x *TaskData) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskData.ProtoReflect.Descriptor instead.
func (*TaskData) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{7}
}

func (x *TaskData) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskData) GetDeposito() *DepositoDataTask {
	if x != nil {
		return x.Deposito
	}
	return nil
}

func (x *TaskData) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *TaskData) GetAccount() *Accounts {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *TaskData) GetWorkflowHistory() []*WorkflowDataStatus {
	if x != nil {
		return x.WorkflowHistory
	}
	return nil
}

func (x *TaskData) GetDepositoPrev() *DepositoDataTask {
	if x != nil {
		return x.DepositoPrev
	}
	return nil
}

func (x *TaskData) GetDepositoNew() *DepositoDataTask {
	if x != nil {
		return x.DepositoNew
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber string `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName   string `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias  string `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	Cif           string `protobuf:"bytes,4,opt,name=cif,proto3" json:"cif,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{8}
}

func (x *Account) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *Account) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *Account) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *Account) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

type Accounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccTD        *Account `protobuf:"bytes,21,opt,name=accTD,proto3" json:"accTD,omitempty"`
	AccPrincipal *Account `protobuf:"bytes,22,opt,name=accPrincipal,proto3" json:"accPrincipal,omitempty"`
	AccInterest  *Account `protobuf:"bytes,23,opt,name=accInterest,proto3" json:"accInterest,omitempty"`
}

func (x *Accounts) Reset() {
	*x = Accounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accounts) ProtoMessage() {}

func (x *Accounts) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accounts.ProtoReflect.Descriptor instead.
func (*Accounts) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{9}
}

func (x *Accounts) GetAccTD() *Account {
	if x != nil {
		return x.AccTD
	}
	return nil
}

func (x *Accounts) GetAccPrincipal() *Account {
	if x != nil {
		return x.AccPrincipal
	}
	return nil
}

func (x *Accounts) GetAccInterest() *Account {
	if x != nil {
		return x.AccInterest
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID          uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName        string `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	HoldingID          uint64 `protobuf:"varint,3,opt,name=holdingID,proto3" json:"holdingID,omitempty"`
	GroupName          string `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	HoldingCompanyName string `protobuf:"bytes,5,opt,name=holdingCompanyName,proto3" json:"holdingCompanyName,omitempty"` //  string subsidiaries = 6;
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{10}
}

func (x *Company) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Company) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Company) GetHoldingID() uint64 {
	if x != nil {
		return x.HoldingID
	}
	return 0
}

func (x *Company) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Company) GetHoldingCompanyName() string {
	if x != nil {
		return x.HoldingCompanyName
	}
	return ""
}

type TaskActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID   uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Action   string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Comment  string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Reasons  string `protobuf:"bytes,4,opt,name=reasons,proto3" json:"reasons,omitempty"`
	PassCode string `protobuf:"bytes,30,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *TaskActionRequest) Reset() {
	*x = TaskActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActionRequest) ProtoMessage() {}

func (x *TaskActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActionRequest.ProtoReflect.Descriptor instead.
func (*TaskActionRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{11}
}

func (x *TaskActionRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskActionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *TaskActionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TaskActionRequest) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *TaskActionRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type TaskActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskActionResponse) Reset() {
	*x = TaskActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActionResponse) ProtoMessage() {}

func (x *TaskActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActionResponse.ProtoReflect.Descriptor instead.
func (*TaskActionResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{12}
}

func (x *TaskActionResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *TaskActionResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskActionResponse) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDepositoTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepositoTaskResponse) Reset() {
	*x = CreateDepositoTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoTaskResponse) ProtoMessage() {}

func (x *CreateDepositoTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateDepositoTaskResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDepositoTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateDepositoTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateDepositoTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDepositoTaskResponse) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoListTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     TaskStatus    `protobuf:"varint,1,opt,name=status,proto3,enum=deposito.service.v1.TaskStatus" json:"status,omitempty"`
	Step       TaskStep      `protobuf:"varint,2,opt,name=step,proto3,enum=deposito.service.v1.TaskStep" json:"step,omitempty"`
	Limit      int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32         `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string        `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        SortDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter     string        `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query      string        `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	MyTaskOnly bool          `protobuf:"varint,9,opt,name=myTaskOnly,proto3" json:"myTaskOnly,omitempty"`
}

func (x *DepositoListTaskRequest) Reset() {
	*x = DepositoListTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoListTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoListTaskRequest) ProtoMessage() {}

func (x *DepositoListTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoListTaskRequest.ProtoReflect.Descriptor instead.
func (*DepositoListTaskRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{14}
}

func (x *DepositoListTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_AllStatus
}

func (x *DepositoListTaskRequest) GetStep() TaskStep {
	if x != nil {
		return x.Step
	}
	return TaskStep_AllStep
}

func (x *DepositoListTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DepositoListTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositoListTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DepositoListTaskRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *DepositoListTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DepositoListTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DepositoListTaskRequest) GetMyTaskOnly() bool {
	if x != nil {
		return x.MyTaskOnly
	}
	return false
}

type DepositoListTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*TaskData         `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *DepositoListTaskResponse) Reset() {
	*x = DepositoListTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoListTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoListTaskResponse) ProtoMessage() {}

func (x *DepositoListTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoListTaskResponse.ProtoReflect.Descriptor instead.
func (*DepositoListTaskResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{15}
}

func (x *DepositoListTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoListTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoListTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoListTaskResponse) GetData() []*TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositoListTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type FileTaskListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     TaskStatus                  `protobuf:"varint,1,opt,name=status,proto3,enum=deposito.service.v1.TaskStatus" json:"status,omitempty"`
	Step       TaskStep                    `protobuf:"varint,2,opt,name=step,proto3,enum=deposito.service.v1.TaskStep" json:"step,omitempty"`
	Limit      int32                       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                       `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                      `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        SortDirection               `protobuf:"varint,6,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter     string                      `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                      `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	MyTaskOnly bool                        `protobuf:"varint,9,opt,name=myTaskOnly,proto3" json:"myTaskOnly,omitempty"`
	FileFormat FileTaskListRequest_Formats `protobuf:"varint,25,opt,name=fileFormat,proto3,enum=deposito.service.v1.FileTaskListRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *FileTaskListRequest) Reset() {
	*x = FileTaskListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTaskListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTaskListRequest) ProtoMessage() {}

func (x *FileTaskListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTaskListRequest.ProtoReflect.Descriptor instead.
func (*FileTaskListRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{16}
}

func (x *FileTaskListRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_AllStatus
}

func (x *FileTaskListRequest) GetStep() TaskStep {
	if x != nil {
		return x.Step
	}
	return TaskStep_AllStep
}

func (x *FileTaskListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileTaskListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileTaskListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *FileTaskListRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *FileTaskListRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FileTaskListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FileTaskListRequest) GetMyTaskOnly() bool {
	if x != nil {
		return x.MyTaskOnly
	}
	return false
}

func (x *FileTaskListRequest) GetFileFormat() FileTaskListRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileTaskListRequest_null
}

type GetDepositoTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetDepositoTaskByIDRequest) Reset() {
	*x = GetDepositoTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositoTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositoTaskByIDRequest) ProtoMessage() {}

func (x *GetDepositoTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositoTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDepositoTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{17}
}

func (x *GetDepositoTaskByIDRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetDepositoTaskByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDepositoTaskByIDResponse) Reset() {
	*x = GetDepositoTaskByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositoTaskByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositoTaskByIDResponse) ProtoMessage() {}

func (x *GetDepositoTaskByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositoTaskByIDResponse.ProtoReflect.Descriptor instead.
func (*GetDepositoTaskByIDResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{18}
}

func (x *GetDepositoTaskByIDResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetDepositoTaskByIDResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDepositoTaskByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDepositoTaskByIDResponse) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoDataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32                                   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                                   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                                  `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    SortDirection                           `protobuf:"varint,4,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter *DepositoDataListRequest_DataListFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Search string                                  `protobuf:"bytes,6,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *DepositoDataListRequest) Reset() {
	*x = DepositoDataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataListRequest) ProtoMessage() {}

func (x *DepositoDataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataListRequest.ProtoReflect.Descriptor instead.
func (*DepositoDataListRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{19}
}

func (x *DepositoDataListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DepositoDataListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositoDataListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DepositoDataListRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *DepositoDataListRequest) GetFilter() *DepositoDataListRequest_DataListFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DepositoDataListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type DepositoDataks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deposito *Deposito `protobuf:"bytes,1,opt,name=deposito,proto3" json:"deposito,omitempty"`
	Accounts *Accounts `protobuf:"bytes,2,opt,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *DepositoDataks) Reset() {
	*x = DepositoDataks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataks) ProtoMessage() {}

func (x *DepositoDataks) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataks.ProtoReflect.Descriptor instead.
func (*DepositoDataks) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{20}
}

func (x *DepositoDataks) GetDeposito() *Deposito {
	if x != nil {
		return x.Deposito
	}
	return nil
}

func (x *DepositoDataks) GetAccounts() *Accounts {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type DepositoDataListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*DepositoDataks   `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *DepositoDataListResponse) Reset() {
	*x = DepositoDataListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataListResponse) ProtoMessage() {}

func (x *DepositoDataListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataListResponse.ProtoReflect.Descriptor instead.
func (*DepositoDataListResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{21}
}

func (x *DepositoDataListResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoDataListResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoDataListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoDataListResponse) GetData() []*DepositoDataks {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositoDataListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type DepositoDataDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositoID uint64 `protobuf:"varint,1,opt,name=depositoID,proto3" json:"depositoID,omitempty"`
}

func (x *DepositoDataDetailRequest) Reset() {
	*x = DepositoDataDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataDetailRequest) ProtoMessage() {}

func (x *DepositoDataDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataDetailRequest.ProtoReflect.Descriptor instead.
func (*DepositoDataDetailRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{22}
}

func (x *DepositoDataDetailRequest) GetDepositoID() uint64 {
	if x != nil {
		return x.DepositoID
	}
	return 0
}

type DepositoDataDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool            `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoDataks `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoDataDetailResponse) Reset() {
	*x = DepositoDataDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataDetailResponse) ProtoMessage() {}

func (x *DepositoDataDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataDetailResponse.ProtoReflect.Descriptor instead.
func (*DepositoDataDetailResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{23}
}

func (x *DepositoDataDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoDataDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoDataDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoDataDetailResponse) GetData() *DepositoDataks {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDepositoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TaskData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepositoRequest) Reset() {
	*x = CreateDepositoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoRequest) ProtoMessage() {}

func (x *CreateDepositoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoRequest.ProtoReflect.Descriptor instead.
func (*CreateDepositoRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{24}
}

func (x *CreateDepositoRequest) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDepositoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Deposito `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepositoResponse) Reset() {
	*x = CreateDepositoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoResponse) ProtoMessage() {}

func (x *CreateDepositoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoResponse.ProtoReflect.Descriptor instead.
func (*CreateDepositoResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{25}
}

func (x *CreateDepositoResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateDepositoResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateDepositoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDepositoResponse) GetData() *Deposito {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProductDepositoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *Deposito_Product                         `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Limit   int32                                     `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page    int32                                     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort    string                                    `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir     SortDirection                             `protobuf:"varint,5,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter  *GetProductDepositoRequest_DataListFilter `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Search  string                                    `protobuf:"bytes,7,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetProductDepositoRequest) Reset() {
	*x = GetProductDepositoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductDepositoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductDepositoRequest) ProtoMessage() {}

func (x *GetProductDepositoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductDepositoRequest.ProtoReflect.Descriptor instead.
func (*GetProductDepositoRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{26}
}

func (x *GetProductDepositoRequest) GetProduct() *Deposito_Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *GetProductDepositoRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetProductDepositoRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetProductDepositoRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetProductDepositoRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *GetProductDepositoRequest) GetFilter() *GetProductDepositoRequest_DataListFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetProductDepositoRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetProductDepositoRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Deposito_Product `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetProductDepositoRespons) Reset() {
	*x = GetProductDepositoRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductDepositoRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductDepositoRespons) ProtoMessage() {}

func (x *GetProductDepositoRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductDepositoRespons.ProtoReflect.Descriptor instead.
func (*GetProductDepositoRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{27}
}

func (x *GetProductDepositoRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetProductDepositoRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProductDepositoRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductDepositoRespons) GetData() []*Deposito_Product {
	if x != nil {
		return x.Data
	}
	return nil
}

// ========== exec transaction ===========
type ExecTransactionDepositoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExecTransactionDepositoReq) Reset() {
	*x = ExecTransactionDepositoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecTransactionDepositoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecTransactionDepositoReq) ProtoMessage() {}

func (x *ExecTransactionDepositoReq) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecTransactionDepositoReq.ProtoReflect.Descriptor instead.
func (*ExecTransactionDepositoReq) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{28}
}

func (x *ExecTransactionDepositoReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExecTransactionDepositoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JurnalSeq      []string `protobuf:"bytes,1,rep,name=jurnal_seq,json=jurnalSeq,proto3" json:"jurnal_seq,omitempty"`
	Status         string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ResponseDetail string   `protobuf:"bytes,3,opt,name=response_detail,json=responseDetail,proto3" json:"response_detail,omitempty"`
	IsRetry        bool     `protobuf:"varint,4,opt,name=is_retry,json=isRetry,proto3" json:"is_retry,omitempty"`
	RetryNumber    uint32   `protobuf:"varint,5,opt,name=retryNumber,proto3" json:"retryNumber,omitempty"`
	// string debit_amount = 5;
	// string credit_amount = 6;
	// string debit_account = 7;
	// string credit_account = 8;
	TransactionId uint64 `protobuf:"varint,9,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *ExecTransactionDepositoRes) Reset() {
	*x = ExecTransactionDepositoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecTransactionDepositoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecTransactionDepositoRes) ProtoMessage() {}

func (x *ExecTransactionDepositoRes) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecTransactionDepositoRes.ProtoReflect.Descriptor instead.
func (*ExecTransactionDepositoRes) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{29}
}

func (x *ExecTransactionDepositoRes) GetJurnalSeq() []string {
	if x != nil {
		return x.JurnalSeq
	}
	return nil
}

func (x *ExecTransactionDepositoRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExecTransactionDepositoRes) GetResponseDetail() string {
	if x != nil {
		return x.ResponseDetail
	}
	return ""
}

func (x *ExecTransactionDepositoRes) GetIsRetry() bool {
	if x != nil {
		return x.IsRetry
	}
	return false
}

func (x *ExecTransactionDepositoRes) GetRetryNumber() uint32 {
	if x != nil {
		return x.RetryNumber
	}
	return 0
}

func (x *ExecTransactionDepositoRes) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type DepositInquiryRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RATE_CURRENCY string `protobuf:"bytes,1,opt,name=RATE_CURRENCY,proto3" json:"RATE_CURRENCY,omitempty"` //  "RATE_CURRENCY": "IDR",
	PROD_TYPE     string `protobuf:"bytes,2,opt,name=PROD_TYPE,proto3" json:"PROD_TYPE,omitempty"`         // "PROD_TYPE": "DQ"
}

func (x *DepositInquiryRateRequest) Reset() {
	*x = DepositInquiryRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateRequest) ProtoMessage() {}

func (x *DepositInquiryRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateRequest.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{30}
}

func (x *DepositInquiryRateRequest) GetRATE_CURRENCY() string {
	if x != nil {
		return x.RATE_CURRENCY
	}
	return ""
}

func (x *DepositInquiryRateRequest) GetPROD_TYPE() string {
	if x != nil {
		return x.PROD_TYPE
	}
	return ""
}

type DepositInquiryRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	RATE_NUMBER      string `protobuf:"bytes,4,opt,name=RATE_NUMBER,proto3" json:"RATE_NUMBER,omitempty"`           // "RATE_NUMBER": "702",
	RATE_CURRENCY    string `protobuf:"bytes,5,opt,name=RATE_CURRENCY,proto3" json:"RATE_CURRENCY,omitempty"`       // "RATE_CURRENCY": "IDR",
	CURRENT_RATE     string `protobuf:"bytes,6,opt,name=CURRENT_RATE,proto3" json:"CURRENT_RATE,omitempty"`         // "CURRENT_RATE": "0.042500",
	MAXIMUM_RATE     string `protobuf:"bytes,7,opt,name=MAXIMUM_RATE,proto3" json:"MAXIMUM_RATE,omitempty"`         // "MAXIMUM_RATE": "0.075000",
	MINIMUM_RATE     string `protobuf:"bytes,8,opt,name=MINIMUM_RATE,proto3" json:"MINIMUM_RATE,omitempty"`         // "MINIMUM_RATE": "0.042500"
}

func (x *DepositInquiryRate) Reset() {
	*x = DepositInquiryRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRate) ProtoMessage() {}

func (x *DepositInquiryRate) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRate.ProtoReflect.Descriptor instead.
func (*DepositInquiryRate) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{31}
}

func (x *DepositInquiryRate) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositInquiryRate) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositInquiryRate) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositInquiryRate) GetRATE_NUMBER() string {
	if x != nil {
		return x.RATE_NUMBER
	}
	return ""
}

func (x *DepositInquiryRate) GetRATE_CURRENCY() string {
	if x != nil {
		return x.RATE_CURRENCY
	}
	return ""
}

func (x *DepositInquiryRate) GetCURRENT_RATE() string {
	if x != nil {
		return x.CURRENT_RATE
	}
	return ""
}

func (x *DepositInquiryRate) GetMAXIMUM_RATE() string {
	if x != nil {
		return x.MAXIMUM_RATE
	}
	return ""
}

func (x *DepositInquiryRate) GetMINIMUM_RATE() string {
	if x != nil {
		return x.MINIMUM_RATE
	}
	return ""
}

type DepositInquiryRateRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositInquiryRate `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositInquiryRateRespons) Reset() {
	*x = DepositInquiryRateRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateRespons) ProtoMessage() {}

func (x *DepositInquiryRateRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateRespons.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{32}
}

func (x *DepositInquiryRateRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositInquiryRateRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositInquiryRateRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositInquiryRateRespons) GetData() *DepositInquiryRate {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoMaintananceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ACCOUNT_NUMBER     string `protobuf:"bytes,1,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`         // "ACCOUNT_NUMBER": "020601056922400",
	ACCOUNT_TYPE       string `protobuf:"bytes,2,opt,name=ACCOUNT_TYPE,proto3" json:"ACCOUNT_TYPE,omitempty"`             // "ACCOUNT_TYPE": "DQ",
	AUTORENEWAL        string `protobuf:"bytes,3,opt,name=AUTORENEWAL,proto3" json:"AUTORENEWAL,omitempty"`               //"AUTORENEWAL": "N",
	RATE_VARIANCE      string `protobuf:"bytes,4,opt,name=RATE_VARIANCE,proto3" json:"RATE_VARIANCE,omitempty"`           //"RATE_VARIANCE": "0",
	RATE_VARIANCE_CODE string `protobuf:"bytes,5,opt,name=RATE_VARIANCE_CODE,proto3" json:"RATE_VARIANCE_CODE,omitempty"` //"RATE_VARIANCE_CODE": ""
}

func (x *DepositoMaintananceRequest) Reset() {
	*x = DepositoMaintananceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoMaintananceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoMaintananceRequest) ProtoMessage() {}

func (x *DepositoMaintananceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoMaintananceRequest.ProtoReflect.Descriptor instead.
func (*DepositoMaintananceRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{33}
}

func (x *DepositoMaintananceRequest) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetACCOUNT_TYPE() string {
	if x != nil {
		return x.ACCOUNT_TYPE
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetAUTORENEWAL() string {
	if x != nil {
		return x.AUTORENEWAL
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetRATE_VARIANCE() string {
	if x != nil {
		return x.RATE_VARIANCE
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetRATE_VARIANCE_CODE() string {
	if x != nil {
		return x.RATE_VARIANCE_CODE
	}
	return ""
}

type DepositoMaintanance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE          string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`                   // "ERROR_CODE": "AS-000",
	RESPONSE_CODE       string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`             // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE    string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"`       // "RESPONSE_MESSAGE": "Transaction Successfully",
	ACCOUNT_NUMBER      string `protobuf:"bytes,4,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`           // "ACCOUNT_NUMBER": "0000001901000061441",
	ACCOUNT_TYPE        string `protobuf:"bytes,5,opt,name=ACCOUNT_TYPE,proto3" json:"ACCOUNT_TYPE,omitempty"`               // "ACCOUNT_TYPE": "E",
	AUTORENEWAL_CODE    string `protobuf:"bytes,6,opt,name=AUTORENEWAL_CODE,proto3" json:"AUTORENEWAL_CODE,omitempty"`       // "AUTORENEWAL_CODE": "A",
	RATE_VARIANCE       string `protobuf:"bytes,7,opt,name=RATE_VARIANCE,proto3" json:"RATE_VARIANCE,omitempty"`             // "RATE_VARIANCE": "0.000000",
	RATE_VARIANCE_CODE  string `protobuf:"bytes,8,opt,name=RATE_VARIANCE_CODE,proto3" json:"RATE_VARIANCE_CODE,omitempty"`   // "RATE_VARIANCE_CODE": "1",
	STATUS_KODE_VOUCHER string `protobuf:"bytes,9,opt,name=STATUS_KODE_VOUCHER,proto3" json:"STATUS_KODE_VOUCHER,omitempty"` // "STATUS_KODE_VOUCHER": "Kode Nego 180511Q1K7 sudah dipakai"
}

func (x *DepositoMaintanance) Reset() {
	*x = DepositoMaintanance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoMaintanance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoMaintanance) ProtoMessage() {}

func (x *DepositoMaintanance) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoMaintanance.ProtoReflect.Descriptor instead.
func (*DepositoMaintanance) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{34}
}

func (x *DepositoMaintanance) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoMaintanance) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *DepositoMaintanance) GetACCOUNT_TYPE() string {
	if x != nil {
		return x.ACCOUNT_TYPE
	}
	return ""
}

func (x *DepositoMaintanance) GetAUTORENEWAL_CODE() string {
	if x != nil {
		return x.AUTORENEWAL_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetRATE_VARIANCE() string {
	if x != nil {
		return x.RATE_VARIANCE
	}
	return ""
}

func (x *DepositoMaintanance) GetRATE_VARIANCE_CODE() string {
	if x != nil {
		return x.RATE_VARIANCE_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetSTATUS_KODE_VOUCHER() string {
	if x != nil {
		return x.STATUS_KODE_VOUCHER
	}
	return ""
}

type DepositoMaintananceRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoMaintanance `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoMaintananceRespons) Reset() {
	*x = DepositoMaintananceRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoMaintananceRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoMaintananceRespons) ProtoMessage() {}

func (x *DepositoMaintananceRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoMaintananceRespons.ProtoReflect.Descriptor instead.
func (*DepositoMaintananceRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{35}
}

func (x *DepositoMaintananceRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoMaintananceRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoMaintananceRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoMaintananceRespons) GetData() *DepositoMaintanance {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoCreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ACCOUNT_PEMBAYARAN_POKOK string `protobuf:"bytes,1,opt,name=ACCOUNT_PEMBAYARAN_POKOK,json=ACCOUNT_PEMBAYRAN_SEC_ACCOUNT_NUMBER,proto3" json:"ACCOUNT_PEMBAYARAN_POKOK,omitempty"` // "ACCOUNT_NO_PEMBAYRAN_BUNGA":"",
	BRANCH                   string `protobuf:"bytes,2,opt,name=BRANCH,proto3" json:"BRANCH,omitempty"`                                                                               // "BRANCH": "0019",
	CIF_NO                   string `protobuf:"bytes,3,opt,name=CIF_NO,proto3" json:"CIF_NO,omitempty"`                                                                               // "CIF_NO": "SY04223",
	CURRENCY                 string `protobuf:"bytes,4,opt,name=CURRENCY,proto3" json:"CURRENCY,omitempty"`                                                                           // "CURRENCY": "IDR",
	CUSTOMER_NAME            string `protobuf:"bytes,5,opt,name=CUSTOMER_NAME,proto3" json:"CUSTOMER_NAME,omitempty"`                                                                 // "CUSTOMER_NAME": "Domba - Domba Tersesat",
	// dikurangin
	DATE_ISSEUD           string `protobuf:"bytes,6,opt,name=DATE_ISSEUD,proto3" json:"DATE_ISSEUD,omitempty"`                     // "DATE_ISSEUD": "221221",
	INTEREST_RATE         string `protobuf:"bytes,7,opt,name=INTEREST_RATE,proto3" json:"INTEREST_RATE,omitempty"`                 // "INTEREST_RATE": "0.042500",
	JANGKA_WAKTU_DEPOSITO string `protobuf:"bytes,8,opt,name=JANGKA_WAKTU_DEPOSITO,proto3" json:"JANGKA_WAKTU_DEPOSITO,omitempty"` // "JANGKA_WAKTU_DEPOSITO": "1",
	POKOK_DEPOSITO        string `protobuf:"bytes,9,opt,name=POKOK_DEPOSITO,proto3" json:"POKOK_DEPOSITO,omitempty"`               // "POKOK_DEPOSITO": "5123123.00",
	PRODUCT_TYPE          string `protobuf:"bytes,10,opt,name=PRODUCT_TYPE,proto3" json:"PRODUCT_TYPE,omitempty"`                  // "PRODUCT_TYPE": "EE",
	RELATIONSHIP_CODE     string `protobuf:"bytes,11,opt,name=RELATIONSHIP_CODE,proto3" json:"RELATIONSHIP_CODE,omitempty"`        // "RELATIONSHIP_CODE": "042",
	RENEW                 string `protobuf:"bytes,12,opt,name=RENEW,proto3" json:"RENEW,omitempty"`                                // "RENEW": "YES",
	REPORTING_BRANCH      string `protobuf:"bytes,13,opt,name=REPORTING_BRANCH,proto3" json:"REPORTING_BRANCH,omitempty"`          // "REPORTING_BRANCH": "0019"
	VARIANCE_CODE         string `protobuf:"bytes,14,opt,name=VARIANCE_CODE,proto3" json:"VARIANCE_CODE,omitempty"`                //"VARIANCE_CODE":"180511Q1K7"
	SEC_ACCOUNT_NUMBER    string `protobuf:"bytes,15,opt,name=SEC_ACCOUNT_NUMBER,proto3" json:"SEC_ACCOUNT_NUMBER,omitempty"`      //"VARIANCE_CODE":"180511Q1K7"
}

func (x *DepositoCreateAccountRequest) Reset() {
	*x = DepositoCreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoCreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoCreateAccountRequest) ProtoMessage() {}

func (x *DepositoCreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoCreateAccountRequest.ProtoReflect.Descriptor instead.
func (*DepositoCreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{36}
}

func (x *DepositoCreateAccountRequest) GetACCOUNT_PEMBAYARAN_POKOK() string {
	if x != nil {
		return x.ACCOUNT_PEMBAYARAN_POKOK
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetBRANCH() string {
	if x != nil {
		return x.BRANCH
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetCIF_NO() string {
	if x != nil {
		return x.CIF_NO
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetCURRENCY() string {
	if x != nil {
		return x.CURRENCY
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetCUSTOMER_NAME() string {
	if x != nil {
		return x.CUSTOMER_NAME
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetDATE_ISSEUD() string {
	if x != nil {
		return x.DATE_ISSEUD
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetINTEREST_RATE() string {
	if x != nil {
		return x.INTEREST_RATE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetJANGKA_WAKTU_DEPOSITO() string {
	if x != nil {
		return x.JANGKA_WAKTU_DEPOSITO
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetPOKOK_DEPOSITO() string {
	if x != nil {
		return x.POKOK_DEPOSITO
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetPRODUCT_TYPE() string {
	if x != nil {
		return x.PRODUCT_TYPE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetRELATIONSHIP_CODE() string {
	if x != nil {
		return x.RELATIONSHIP_CODE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetRENEW() string {
	if x != nil {
		return x.RENEW
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetREPORTING_BRANCH() string {
	if x != nil {
		return x.REPORTING_BRANCH
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetVARIANCE_CODE() string {
	if x != nil {
		return x.VARIANCE_CODE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetSEC_ACCOUNT_NUMBER() string {
	if x != nil {
		return x.SEC_ACCOUNT_NUMBER
	}
	return ""
}

type DepositoCreateAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	ACCOUNT_NUMBER   string `protobuf:"bytes,4,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`     // "ACCOUNT_NUMBER": "0000001901000032442",
	CIF_NUMBER       string `protobuf:"bytes,5,opt,name=CIF_NUMBER,proto3" json:"CIF_NUMBER,omitempty"`             // "CIF_NUMBER": "SY04223",
	OPEN_DATE        string `protobuf:"bytes,6,opt,name=OPEN_DATE,proto3" json:"OPEN_DATE,omitempty"`               // "OPEN_DATE": "0221221",
	TGL_JATUH_TEMPO  string `protobuf:"bytes,7,opt,name=TGL_JATUH_TEMPO,proto3" json:"TGL_JATUH_TEMPO,omitempty"`   // "TGL_JATUH_TEMPO": "0220122"
}

func (x *DepositoCreateAccount) Reset() {
	*x = DepositoCreateAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoCreateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoCreateAccount) ProtoMessage() {}

func (x *DepositoCreateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoCreateAccount.ProtoReflect.Descriptor instead.
func (*DepositoCreateAccount) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{37}
}

func (x *DepositoCreateAccount) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoCreateAccount) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositoCreateAccount) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoCreateAccount) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *DepositoCreateAccount) GetCIF_NUMBER() string {
	if x != nil {
		return x.CIF_NUMBER
	}
	return ""
}

func (x *DepositoCreateAccount) GetOPEN_DATE() string {
	if x != nil {
		return x.OPEN_DATE
	}
	return ""
}

func (x *DepositoCreateAccount) GetTGL_JATUH_TEMPO() string {
	if x != nil {
		return x.TGL_JATUH_TEMPO
	}
	return ""
}

type DepositoCreateAccountRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoCreateAccount `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoCreateAccountRespons) Reset() {
	*x = DepositoCreateAccountRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoCreateAccountRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoCreateAccountRespons) ProtoMessage() {}

func (x *DepositoCreateAccountRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoCreateAccountRespons.ProtoReflect.Descriptor instead.
func (*DepositoCreateAccountRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{38}
}

func (x *DepositoCreateAccountRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoCreateAccountRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoCreateAccountRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoCreateAccountRespons) GetData() *DepositoCreateAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoPlacementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DEBIT_ACCOUNT   string `protobuf:"bytes,1,opt,name=DEBIT_ACCOUNT,proto3" json:"DEBIT_ACCOUNT,omitempty"`      // "DEBIT_ACCOUNT": "001901000162530",
	DEBIT_AMOUNT    string `protobuf:"bytes,2,opt,name=DEBIT_AMOUNT,proto3" json:"DEBIT_AMOUNT,omitempty"`        // "DEBIT_AMOUNT": "1222",
	SELL_RATE       string `protobuf:"bytes,3,opt,name=SELL_RATE,proto3" json:"SELL_RATE,omitempty"`              // "SELL_RATE": "10000",
	BUY_RATE        string `protobuf:"bytes,4,opt,name=BUY_RATE,proto3" json:"BUY_RATE,omitempty"`                // "BUY_RATE": "10000",
	CHARGE_AMOUNT   string `protobuf:"bytes,5,opt,name=CHARGE_AMOUNT,proto3" json:"CHARGE_AMOUNT,omitempty"`      // "CHARGE_AMOUNT": "100",
	CREDIT_ACCOUNT  string `protobuf:"bytes,6,opt,name=CREDIT_ACCOUNT,proto3" json:"CREDIT_ACCOUNT,omitempty"`    // "CREDIT_ACCOUNT": "0000020601056987400",
	CREDIT_AMOUNT   string `protobuf:"bytes,7,opt,name=CREDIT_AMOUNT,proto3" json:"CREDIT_AMOUNT,omitempty"`      // "CREDIT_AMOUNT": "1000",
	NUM_LEMBAR      string `protobuf:"bytes,8,opt,name=NUM_LEMBAR,proto3" json:"NUM_LEMBAR,omitempty"`            // "NUM_LEMBAR": "1",
	DEBIT_CURRENCY  string `protobuf:"bytes,9,opt,name=DEBIT_CURRENCY,proto3" json:"DEBIT_CURRENCY,omitempty"`    // "DEBIT_CURRENCY": "IDR",
	CREDIT_CURRENCY string `protobuf:"bytes,10,opt,name=CREDIT_CURRENCY,proto3" json:"CREDIT_CURRENCY,omitempty"` // "CREDIT_CURRENCY": "IDR",
	NOBILYET        string `protobuf:"bytes,11,opt,name=NOBILYET,proto3" json:"NOBILYET,omitempty"`               // "NOBILYET": ""
}

func (x *DepositoPlacementRequest) Reset() {
	*x = DepositoPlacementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoPlacementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoPlacementRequest) ProtoMessage() {}

func (x *DepositoPlacementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoPlacementRequest.ProtoReflect.Descriptor instead.
func (*DepositoPlacementRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{39}
}

func (x *DepositoPlacementRequest) GetDEBIT_ACCOUNT() string {
	if x != nil {
		return x.DEBIT_ACCOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetDEBIT_AMOUNT() string {
	if x != nil {
		return x.DEBIT_AMOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetSELL_RATE() string {
	if x != nil {
		return x.SELL_RATE
	}
	return ""
}

func (x *DepositoPlacementRequest) GetBUY_RATE() string {
	if x != nil {
		return x.BUY_RATE
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCHARGE_AMOUNT() string {
	if x != nil {
		return x.CHARGE_AMOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCREDIT_ACCOUNT() string {
	if x != nil {
		return x.CREDIT_ACCOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCREDIT_AMOUNT() string {
	if x != nil {
		return x.CREDIT_AMOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetNUM_LEMBAR() string {
	if x != nil {
		return x.NUM_LEMBAR
	}
	return ""
}

func (x *DepositoPlacementRequest) GetDEBIT_CURRENCY() string {
	if x != nil {
		return x.DEBIT_CURRENCY
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCREDIT_CURRENCY() string {
	if x != nil {
		return x.CREDIT_CURRENCY
	}
	return ""
}

func (x *DepositoPlacementRequest) GetNOBILYET() string {
	if x != nil {
		return x.NOBILYET
	}
	return ""
}

type DepositoPlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	JOURNAL_SEQ      string `protobuf:"bytes,4,opt,name=JOURNAL_SEQ,proto3" json:"JOURNAL_SEQ,omitempty"`           // "JOURNAL_SEQ": "7126648"
}

func (x *DepositoPlacement) Reset() {
	*x = DepositoPlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoPlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoPlacement) ProtoMessage() {}

func (x *DepositoPlacement) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoPlacement.ProtoReflect.Descriptor instead.
func (*DepositoPlacement) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{40}
}

func (x *DepositoPlacement) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoPlacement) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositoPlacement) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoPlacement) GetJOURNAL_SEQ() string {
	if x != nil {
		return x.JOURNAL_SEQ
	}
	return ""
}

type DepositoPlacementRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoPlacement `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoPlacementRespons) Reset() {
	*x = DepositoPlacementRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoPlacementRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoPlacementRespons) ProtoMessage() {}

func (x *DepositoPlacementRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoPlacementRespons.ProtoReflect.Descriptor instead.
func (*DepositoPlacementRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{41}
}

func (x *DepositoPlacementRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoPlacementRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoPlacementRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoPlacementRespons) GetData() *DepositoPlacement {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositVoucherNegoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoucherCode   string `protobuf:"bytes,1,opt,name=voucherCode,proto3" json:"voucherCode,omitempty"`     // "kodeNego":"180514QBFG",
	Amount        string `protobuf:"bytes,2,opt,name=amount,json=nominal,proto3" json:"amount,omitempty"`  // "nominal":"1000",
	Rate          string `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"`                   // "rate":"10,25"
	AccountNumber string `protobuf:"bytes,4,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"` // "rate":"10,25"
	TaskID        uint64 `protobuf:"varint,5,opt,name=taskID,proto3" json:"taskID,omitempty"`              // "rate":"10,25"
}

func (x *DepositVoucherNegoRequest) Reset() {
	*x = DepositVoucherNegoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositVoucherNegoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositVoucherNegoRequest) ProtoMessage() {}

func (x *DepositVoucherNegoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositVoucherNegoRequest.ProtoReflect.Descriptor instead.
func (*DepositVoucherNegoRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{42}
}

func (x *DepositVoucherNegoRequest) GetVoucherCode() string {
	if x != nil {
		return x.VoucherCode
	}
	return ""
}

func (x *DepositVoucherNegoRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DepositVoucherNegoRequest) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *DepositVoucherNegoRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *DepositVoucherNegoRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type DepositInquiryRateNegoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KodeNego string `protobuf:"bytes,1,opt,name=kodeNego,proto3" json:"kodeNego,omitempty"` // "kodeNego":"180514QBFG",
	Nominal  string `protobuf:"bytes,2,opt,name=nominal,proto3" json:"nominal,omitempty"`   // "nominal":"1000",
	Rate     string `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"`         // "rate":"10,25"
}

func (x *DepositInquiryRateNegoRequest) Reset() {
	*x = DepositInquiryRateNegoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateNegoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateNegoRequest) ProtoMessage() {}

func (x *DepositInquiryRateNegoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateNegoRequest.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateNegoRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{43}
}

func (x *DepositInquiryRateNegoRequest) GetKodeNego() string {
	if x != nil {
		return x.KodeNego
	}
	return ""
}

func (x *DepositInquiryRateNegoRequest) GetNominal() string {
	if x != nil {
		return x.Nominal
	}
	return ""
}

func (x *DepositInquiryRateNegoRequest) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

type DepositInquiryRateNego struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseStatus   string `protobuf:"bytes,1,opt,name=responseStatus,proto3" json:"responseStatus,omitempty"`     // "responseStatus": "Success",
	NamaDeposan      string `protobuf:"bytes,2,opt,name=namaDeposan,proto3" json:"namaDeposan,omitempty"`           // "namaDeposan": "Drake",
	KodeNego         string `protobuf:"bytes,3,opt,name=kodeNego,proto3" json:"kodeNego,omitempty"`                 // "kodeNego": "180514QBFG",
	Currency         string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                 // "currency": "IDR",
	Nominal          string `protobuf:"bytes,5,opt,name=nominal,proto3" json:"nominal,omitempty"`                   // "nominal": "1000",
	Rate             string `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`                         // "rate": "10.25",
	JangkaWaktu      string `protobuf:"bytes,7,opt,name=jangkaWaktu,proto3" json:"jangkaWaktu,omitempty"`           // "jangkaWaktu": "6 Bulan",
	TanggalNegosiasi string `protobuf:"bytes,8,opt,name=tanggalNegosiasi,proto3" json:"tanggalNegosiasi,omitempty"` // "tanggalNegosiasi": "2018-05-14",
	NamaPemutus      string `protobuf:"bytes,9,opt,name=namaPemutus,proto3" json:"namaPemutus,omitempty"`           // "namaPemutus": "Yoga Arnindita"
	ResponseDesc     string `protobuf:"bytes,20,opt,name=responseDesc,proto3" json:"responseDesc,omitempty"`        // "responseDesc\":\"Kode Nego tidak ditemukan\"}
}

func (x *DepositInquiryRateNego) Reset() {
	*x = DepositInquiryRateNego{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateNego) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateNego) ProtoMessage() {}

func (x *DepositInquiryRateNego) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateNego.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateNego) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{44}
}

func (x *DepositInquiryRateNego) GetResponseStatus() string {
	if x != nil {
		return x.ResponseStatus
	}
	return ""
}

func (x *DepositInquiryRateNego) GetNamaDeposan() string {
	if x != nil {
		return x.NamaDeposan
	}
	return ""
}

func (x *DepositInquiryRateNego) GetKodeNego() string {
	if x != nil {
		return x.KodeNego
	}
	return ""
}

func (x *DepositInquiryRateNego) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DepositInquiryRateNego) GetNominal() string {
	if x != nil {
		return x.Nominal
	}
	return ""
}

func (x *DepositInquiryRateNego) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *DepositInquiryRateNego) GetJangkaWaktu() string {
	if x != nil {
		return x.JangkaWaktu
	}
	return ""
}

func (x *DepositInquiryRateNego) GetTanggalNegosiasi() string {
	if x != nil {
		return x.TanggalNegosiasi
	}
	return ""
}

func (x *DepositInquiryRateNego) GetNamaPemutus() string {
	if x != nil {
		return x.NamaPemutus
	}
	return ""
}

func (x *DepositInquiryRateNego) GetResponseDesc() string {
	if x != nil {
		return x.ResponseDesc
	}
	return ""
}

type DepositInquiryTDPinaltiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ACCT_NO      string `protobuf:"bytes,1,opt,name=ACCT_NO,proto3" json:"ACCT_NO,omitempty"`           // "ACCT_NO":"001901000191408",
	PENALTY_TYPE string `protobuf:"bytes,2,opt,name=PENALTY_TYPE,proto3" json:"PENALTY_TYPE,omitempty"` // "PENALTY_TYPE":"1",
	ADMIN_FEE    string `protobuf:"bytes,3,opt,name=ADMIN_FEE,proto3" json:"ADMIN_FEE,omitempty"`       // "ADMIN_FEE":"1.00",
	KURS_JUAL    string `protobuf:"bytes,4,opt,name=KURS_JUAL,proto3" json:"KURS_JUAL,omitempty"`       // "KURS_JUAL":"2.00",
	KURS_BELI    string `protobuf:"bytes,5,opt,name=KURS_BELI,proto3" json:"KURS_BELI,omitempty"`       // "KURS_BELI":"2.00"
}

func (x *DepositInquiryTDPinaltiRequest) Reset() {
	*x = DepositInquiryTDPinaltiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryTDPinaltiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryTDPinaltiRequest) ProtoMessage() {}

func (x *DepositInquiryTDPinaltiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryTDPinaltiRequest.ProtoReflect.Descriptor instead.
func (*DepositInquiryTDPinaltiRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{45}
}

func (x *DepositInquiryTDPinaltiRequest) GetACCT_NO() string {
	if x != nil {
		return x.ACCT_NO
	}
	return ""
}

func (x *DepositInquiryTDPinaltiRequest) GetPENALTY_TYPE() string {
	if x != nil {
		return x.PENALTY_TYPE
	}
	return ""
}

func (x *DepositInquiryTDPinaltiRequest) GetADMIN_FEE() string {
	if x != nil {
		return x.ADMIN_FEE
	}
	return ""
}

func (x *DepositInquiryTDPinaltiRequest) GetKURS_JUAL() string {
	if x != nil {
		return x.KURS_JUAL
	}
	return ""
}

func (x *DepositInquiryTDPinaltiRequest) GetKURS_BELI() string {
	if x != nil {
		return x.KURS_BELI
	}
	return ""
}

type DepositInquiryTDPinalti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE                      string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`                                           // "ERROR_CODE": "DP-00",
	RESPONSE_CODE                   string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`                                     //     "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE                string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"`                               //     "RESPONSE_MESSAGE": "Success",
	BUNGA_BELUM_DIBAYAR             string `protobuf:"bytes,4,opt,name=BUNGA_BELUM_DIBAYAR,proto3" json:"BUNGA_BELUM_DIBAYAR,omitempty"`                         //     "BUNGA_BELUM_DIBAYAR": "0.00",
	PAJAK_ATAS_BUNGA_BULAN_BERJALAN string `protobuf:"bytes,5,opt,name=PAJAK_ATAS_BUNGA_BULAN_BERJALAN,proto3" json:"PAJAK_ATAS_BUNGA_BULAN_BERJALAN,omitempty"` //     "PAJAK_ATAS_BUNGA_BULAN_BERJALAN": "0.00",
	PEMBAYARAN_BUNGA_NET            string `protobuf:"bytes,6,opt,name=PEMBAYARAN_BUNGA_NET,proto3" json:"PEMBAYARAN_BUNGA_NET,omitempty"`                       //     "PEMBAYARAN_BUNGA_NET": "0.00",
	DENDA                           string `protobuf:"bytes,7,opt,name=DENDA,proto3" json:"DENDA,omitempty"`                                                     //     "DENDA": "0.00",
	PELUNASAN_NET                   string `protobuf:"bytes,8,opt,name=PELUNASAN_NET,proto3" json:"PELUNASAN_NET,omitempty"`                                     //     "PELUNASAN_NET": "-1.00",
	BIAYA                           string `protobuf:"bytes,9,opt,name=BIAYA,proto3" json:"BIAYA,omitempty"`                                                     //     "BIAYA": "1.00",
	PELUNASAN                       string `protobuf:"bytes,10,opt,name=PELUNASAN,proto3" json:"PELUNASAN,omitempty"`                                            //     "PELUNASAN": "0.00",
	AMT_CREDIT                      string `protobuf:"bytes,11,opt,name=AMT_CREDIT,proto3" json:"AMT_CREDIT,omitempty"`                                          //     "AMT_CREDIT": "-1.00",
	PENALTY_ADJUSTMENT              string `protobuf:"bytes,12,opt,name=PENALTY_ADJUSTMENT,proto3" json:"PENALTY_ADJUSTMENT,omitempty"`                          //     "PENALTY_ADJUSTMENT": "0.00",
	TAX_ADJUSTMENT                  string `protobuf:"bytes,13,opt,name=TAX_ADJUSTMENT,proto3" json:"TAX_ADJUSTMENT,omitempty"`                                  //     "TAX_ADJUSTMENT": "0.00",
	REMARK2                         string `protobuf:"bytes,14,opt,name=REMARK2,proto3" json:"REMARK2,omitempty"`                                                //     "REMARK2": "InquiryLNTest2",
	CUST_NAME                       string `protobuf:"bytes,15,opt,name=CUST_NAME,proto3" json:"CUST_NAME,omitempty"`                                            //     "CUST_NAME": "SARNO",
	ACCT_CURR                       string `protobuf:"bytes,16,opt,name=ACCT_CURR,proto3" json:"ACCT_CURR,omitempty"`                                            //     "ACCT_CURR": "IDR"
}

func (x *DepositInquiryTDPinalti) Reset() {
	*x = DepositInquiryTDPinalti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryTDPinalti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryTDPinalti) ProtoMessage() {}

func (x *DepositInquiryTDPinalti) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryTDPinalti.ProtoReflect.Descriptor instead.
func (*DepositInquiryTDPinalti) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{46}
}

func (x *DepositInquiryTDPinalti) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetBUNGA_BELUM_DIBAYAR() string {
	if x != nil {
		return x.BUNGA_BELUM_DIBAYAR
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetPAJAK_ATAS_BUNGA_BULAN_BERJALAN() string {
	if x != nil {
		return x.PAJAK_ATAS_BUNGA_BULAN_BERJALAN
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetPEMBAYARAN_BUNGA_NET() string {
	if x != nil {
		return x.PEMBAYARAN_BUNGA_NET
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetDENDA() string {
	if x != nil {
		return x.DENDA
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetPELUNASAN_NET() string {
	if x != nil {
		return x.PELUNASAN_NET
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetBIAYA() string {
	if x != nil {
		return x.BIAYA
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetPELUNASAN() string {
	if x != nil {
		return x.PELUNASAN
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetAMT_CREDIT() string {
	if x != nil {
		return x.AMT_CREDIT
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetPENALTY_ADJUSTMENT() string {
	if x != nil {
		return x.PENALTY_ADJUSTMENT
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetTAX_ADJUSTMENT() string {
	if x != nil {
		return x.TAX_ADJUSTMENT
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetREMARK2() string {
	if x != nil {
		return x.REMARK2
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetCUST_NAME() string {
	if x != nil {
		return x.CUST_NAME
	}
	return ""
}

func (x *DepositInquiryTDPinalti) GetACCT_CURR() string {
	if x != nil {
		return x.ACCT_CURR
	}
	return ""
}

type DepositInquiryTDPinaltiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositInquiryTDPinalti `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositInquiryTDPinaltiResponse) Reset() {
	*x = DepositInquiryTDPinaltiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryTDPinaltiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryTDPinaltiResponse) ProtoMessage() {}

func (x *DepositInquiryTDPinaltiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryTDPinaltiResponse.ProtoReflect.Descriptor instead.
func (*DepositInquiryTDPinaltiResponse) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{47}
}

func (x *DepositInquiryTDPinaltiResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositInquiryTDPinaltiResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositInquiryTDPinaltiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositInquiryTDPinaltiResponse) GetData() *DepositInquiryTDPinalti {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositInquiryRateNegoRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositInquiryRateNego `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositInquiryRateNegoRespons) Reset() {
	*x = DepositInquiryRateNegoRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateNegoRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateNegoRespons) ProtoMessage() {}

func (x *DepositInquiryRateNegoRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateNegoRespons.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateNegoRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{48}
}

func (x *DepositInquiryRateNegoRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositInquiryRateNegoRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositInquiryRateNegoRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositInquiryRateNegoRespons) GetData() *DepositInquiryRateNego {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositInquiryCIFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ACCT_NO string `protobuf:"bytes,1,opt,name=ACCT_NO,proto3" json:"ACCT_NO,omitempty"`
}

func (x *DepositInquiryCIFRequest) Reset() {
	*x = DepositInquiryCIFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryCIFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryCIFRequest) ProtoMessage() {}

func (x *DepositInquiryCIFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryCIFRequest.ProtoReflect.Descriptor instead.
func (*DepositInquiryCIFRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{49}
}

func (x *DepositInquiryCIFRequest) GetACCT_NO() string {
	if x != nil {
		return x.ACCT_NO
	}
	return ""
}

type DepositInquiryCIFRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	ACCT_NO          string `protobuf:"bytes,4,opt,name=ACCT_NO,proto3" json:"ACCT_NO,omitempty"`                   // "ACCT_NO": "020601500741152",
	NIK              string `protobuf:"bytes,5,opt,name=NIK,proto3" json:"NIK,omitempty"`                           // "NIK": "025342742017000",
	CIF              string `protobuf:"bytes,6,opt,name=CIF,proto3" json:"CIF,omitempty"`                           // "CIF": "B707113",
	BRANCH           string `protobuf:"bytes,7,opt,name=BRANCH,proto3" json:"BRANCH,omitempty"`                     // "BRANCH": "0230",
	CUST_NAME        string `protobuf:"bytes,8,opt,name=CUST_NAME,proto3" json:"CUST_NAME,omitempty"`               // "CUST_NAME": "PT  BIMA PALMA NUGRAHA",
	HP_NO            string `protobuf:"bytes,9,opt,name=HP_NO,proto3" json:"HP_NO,omitempty"`                       // "HP_NO": "0217996139",
	EMAIL            string `protobuf:"bytes,10,opt,name=EMAIL,proto3" json:"EMAIL,omitempty"`                      // "EMAIL": "",
	ADDRESS1         string `protobuf:"bytes,11,opt,name=ADDRESS1,proto3" json:"ADDRESS1,omitempty"`                // "ADDRESS1": "JL WARUNG BUNCIT RAYA NO 49",
	ADDRESS2         string `protobuf:"bytes,12,opt,name=ADDRESS2,proto3" json:"ADDRESS2,omitempty"`                // "ADDRESS2": "MAMPANG PRAPATAN JAKARTA SELATAN",
	ADDRESS3         string `protobuf:"bytes,13,opt,name=ADDRESS3,proto3" json:"ADDRESS3,omitempty"`                // "ADDRESS3": "JAKARTA SELATAN",
	ADDRESS4         string `protobuf:"bytes,14,opt,name=ADDRESS4,proto3" json:"ADDRESS4,omitempty"`                // "ADDRESS4": "MAMPANG PRAPATAN JAKARTA SELATAN",
	ZIPCODE          string `protobuf:"bytes,15,opt,name=ZIPCODE,proto3" json:"ZIPCODE,omitempty"`                  // "ZIPCODE": "000012790",
	RT_NO            string `protobuf:"bytes,16,opt,name=RT_NO,proto3" json:"RT_NO,omitempty"`                      // "RT_NO": "",
	RW_NO            string `protobuf:"bytes,17,opt,name=RW_NO,proto3" json:"RW_NO,omitempty"`                      // "RW_NO": "",
	PLACE_OF_BIRTH   string `protobuf:"bytes,18,opt,name=PLACE_OF_BIRTH,proto3" json:"PLACE_OF_BIRTH,omitempty"`    // "PLACE_OF_BIRTH": "JAKARTA",
	DATE_OF_BIRTH    string `protobuf:"bytes,19,opt,name=DATE_OF_BIRTH,proto3" json:"DATE_OF_BIRTH,omitempty"`      // "DATE_OF_BIRTH": "16082005",
	SEX              string `protobuf:"bytes,20,opt,name=SEX,proto3" json:"SEX,omitempty"`                          // "SEX": "M",
	CITIZENSHIP      string `protobuf:"bytes,21,opt,name=CITIZENSHIP,proto3" json:"CITIZENSHIP,omitempty"`          // "CITIZENSHIP": "ID",
	ID_TYPE          string `protobuf:"bytes,22,opt,name=ID_TYPE,proto3" json:"ID_TYPE,omitempty"`                  // "ID_TYPE": "NP",
	ID_NO            string `protobuf:"bytes,23,opt,name=ID_NO,proto3" json:"ID_NO,omitempty"`                      // "ID_NO": "025342742017000",
	RELIGION         string `protobuf:"bytes,24,opt,name=RELIGION,proto3" json:"RELIGION,omitempty"`                // "RELIGION": "ISL",
	MARTIAL_STATUS   string `protobuf:"bytes,25,opt,name=MARTIAL_STATUS,proto3" json:"MARTIAL_STATUS,omitempty"`    // "MARTIAL_STATUS": "",
	MOTHER_NAME      string `protobuf:"bytes,26,opt,name=MOTHER_NAME,proto3" json:"MOTHER_NAME,omitempty"`          // "MOTHER_NAME": ".",
	NPWP             string `protobuf:"bytes,27,opt,name=NPWP,proto3" json:"NPWP,omitempty"`                        // "NPWP": "",
	PENDIDIKAN_CODE  string `protobuf:"bytes,28,opt,name=PENDIDIKAN_CODE,proto3" json:"PENDIDIKAN_CODE,omitempty"`  // "PENDIDIKAN_CODE": "",
	PENDIDIKAN_DESC  string `protobuf:"bytes,229,opt,name=PENDIDIKAN_DESC,proto3" json:"PENDIDIKAN_DESC,omitempty"` // "PENDIDIKAN_DESC": ""
}

func (x *DepositInquiryCIFRespons) Reset() {
	*x = DepositInquiryCIFRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryCIFRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryCIFRespons) ProtoMessage() {}

func (x *DepositInquiryCIFRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryCIFRespons.ProtoReflect.Descriptor instead.
func (*DepositInquiryCIFRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{50}
}

func (x *DepositInquiryCIFRespons) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetACCT_NO() string {
	if x != nil {
		return x.ACCT_NO
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetNIK() string {
	if x != nil {
		return x.NIK
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetCIF() string {
	if x != nil {
		return x.CIF
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetBRANCH() string {
	if x != nil {
		return x.BRANCH
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetCUST_NAME() string {
	if x != nil {
		return x.CUST_NAME
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetHP_NO() string {
	if x != nil {
		return x.HP_NO
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetEMAIL() string {
	if x != nil {
		return x.EMAIL
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetADDRESS1() string {
	if x != nil {
		return x.ADDRESS1
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetADDRESS2() string {
	if x != nil {
		return x.ADDRESS2
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetADDRESS3() string {
	if x != nil {
		return x.ADDRESS3
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetADDRESS4() string {
	if x != nil {
		return x.ADDRESS4
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetZIPCODE() string {
	if x != nil {
		return x.ZIPCODE
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetRT_NO() string {
	if x != nil {
		return x.RT_NO
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetRW_NO() string {
	if x != nil {
		return x.RW_NO
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetPLACE_OF_BIRTH() string {
	if x != nil {
		return x.PLACE_OF_BIRTH
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetDATE_OF_BIRTH() string {
	if x != nil {
		return x.DATE_OF_BIRTH
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetSEX() string {
	if x != nil {
		return x.SEX
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetCITIZENSHIP() string {
	if x != nil {
		return x.CITIZENSHIP
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetID_TYPE() string {
	if x != nil {
		return x.ID_TYPE
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetID_NO() string {
	if x != nil {
		return x.ID_NO
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetRELIGION() string {
	if x != nil {
		return x.RELIGION
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetMARTIAL_STATUS() string {
	if x != nil {
		return x.MARTIAL_STATUS
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetMOTHER_NAME() string {
	if x != nil {
		return x.MOTHER_NAME
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetNPWP() string {
	if x != nil {
		return x.NPWP
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetPENDIDIKAN_CODE() string {
	if x != nil {
		return x.PENDIDIKAN_CODE
	}
	return ""
}

func (x *DepositInquiryCIFRespons) GetPENDIDIKAN_DESC() string {
	if x != nil {
		return x.PENDIDIKAN_DESC
	}
	return ""
}

type DepositWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TD_ACCOUNT string `protobuf:"bytes,1,opt,name=TD_ACCOUNT,proto3" json:"TD_ACCOUNT,omitempty"` // "TD_ACCOUNT": "001901000333408",
	// Tipe penalti. Isi untuk pencairan tanpa bilyet.
	// 01 : Tanpa penalti
	// 02 : Penalti bunga berjalan
	// 03 : Penalti penuh
	PENALTY_TYPE                       string `protobuf:"bytes,2,opt,name=PENALTY_TYPE,proto3" json:"PENALTY_TYPE,omitempty"`                                              // "PENALTY_TYPE":"01",
	DEBIT_AMOUNT                       string `protobuf:"bytes,3,opt,name=DEBIT_AMOUNT,proto3" json:"DEBIT_AMOUNT,omitempty"`                                              // "DEBIT_AMOUNT": "14990000.00",
	TD_WITHDRAWAL_CASH                 string `protobuf:"bytes,4,opt,name=TD_WITHDRAWAL_CASH,proto3" json:"TD_WITHDRAWAL_CASH,omitempty"`                                  // "TD_WITHDRAWAL_CASH": "15122989.00",
	PROVISION_AMOUNT                   string `protobuf:"bytes,5,opt,name=PROVISION_AMOUNT,proto3" json:"PROVISION_AMOUNT,omitempty"`                                      // "PROVISION_AMOUNT": "3000.00",
	BUY_RATE                           string `protobuf:"bytes,6,opt,name=BUY_RATE,proto3" json:"BUY_RATE,omitempty"`                                                      // "BUY_RATE": "10000000",
	SELL_RATE                          string `protobuf:"bytes,7,opt,name=SELL_RATE,proto3" json:"SELL_RATE,omitempty"`                                                    // "SELL_RATE": "10000000",
	BUY_BOOKING_RATE                   string `protobuf:"bytes,8,opt,name=BUY_BOOKING_RATE,proto3" json:"BUY_BOOKING_RATE,omitempty"`                                      // "BUY_BOOKING_RATE": "10000000",
	SELL_BOOKING_RATE                  string `protobuf:"bytes,9,opt,name=SELL_BOOKING_RATE,proto3" json:"SELL_BOOKING_RATE,omitempty"`                                    // "SELL_BOOKING_RATE": "10000000",
	CR_GL_CASH_IDR                     string `protobuf:"bytes,10,opt,name=CR_GL_CASH_IDR,proto3" json:"CR_GL_CASH_IDR,omitempty"`                                         // "CR_GL_CASH_IDR": "1000.00",
	CR_GL_IBT_CHARGES                  string `protobuf:"bytes,11,opt,name=CR_GL_IBT_CHARGES,proto3" json:"CR_GL_IBT_CHARGES,omitempty"`                                   // "CR_GL_IBT_CHARGES": "1000.00",
	WAVE_TD_PENALTY_AMOUNT             string `protobuf:"bytes,12,opt,name=WAVE_TD_PENALTY_AMOUNT,proto3" json:"WAVE_TD_PENALTY_AMOUNT,omitempty"`                         // "WAVE_TD_PENALTY_AMOUNT": "3000.00",
	FEE_AMOUNT                         string `protobuf:"bytes,13,opt,name=FEE_AMOUNT,proto3" json:"FEE_AMOUNT,omitempty"`                                                 // "FEE_AMOUNT": "5000.00",
	TD_WITH_HOLDING_TAX_AMOUNT         string `protobuf:"bytes,14,opt,name=TD_WITH_HOLDING_TAX_AMOUNT,proto3" json:"TD_WITH_HOLDING_TAX_AMOUNT,omitempty"`                 // "TD_WITH_HOLDING_TAX_AMOUNT": "2000.00",
	ADJUST_WITH_HOLDING_TAX_AMOUNT     string `protobuf:"bytes,15,opt,name=ADJUST_WITH_HOLDING_TAX_AMOUNT,proto3" json:"ADJUST_WITH_HOLDING_TAX_AMOUNT,omitempty"`         // "ADJUST_WITH_HOLDING_TAX_AMOUNT": "2000.00",
	CREDIT_ACCOUNT                     string `protobuf:"bytes,16,opt,name=CREDIT_ACCOUNT,proto3" json:"CREDIT_ACCOUNT,omitempty"`                                         // "CREDIT_ACCOUNT": "020601047109502",
	CREDIT_AMOUNT                      string `protobuf:"bytes,17,opt,name=CREDIT_AMOUNT,proto3" json:"CREDIT_AMOUNT,omitempty"`                                           // "CREDIT_AMOUNT": "14990000.00",
	PENALTY_ATAS_TERM_TO_DATE_INTEREST string `protobuf:"bytes,18,opt,name=PENALTY_ATAS_TERM_TO_DATE_INTEREST,proto3" json:"PENALTY_ATAS_TERM_TO_DATE_INTEREST,omitempty"` // "PENALTY_ATAS_TERM_TO_DATE_INTEREST": "2000.00",
	EFFECTIVE_DATE                     string `protobuf:"bytes,19,opt,name=EFFECTIVE_DATE,proto3" json:"EFFECTIVE_DATE,omitempty"`                                         // "EFFECTIVE_DATE": "031220",
	REVERSAL                           string `protobuf:"bytes,20,opt,name=REVERSAL,proto3" json:"REVERSAL,omitempty"`                                                     // "REVERSAL": "",
	DEBIT_CURRENCY                     string `protobuf:"bytes,21,opt,name=DEBIT_CURRENCY,proto3" json:"DEBIT_CURRENCY,omitempty"`                                         // "DEBIT_CURRENCY": "IDR",
	CREDIT_CURRENCY                    string `protobuf:"bytes,22,opt,name=CREDIT_CURRENCY,proto3" json:"CREDIT_CURRENCY,omitempty"`                                       // "CREDIT_CURRENCY": "IDR",
	REMARKS1                           string `protobuf:"bytes,23,opt,name=REMARKS1,proto3" json:"REMARKS1,omitempty"`                                                     // "REMARKS1": "TEST TD WITHDRAW TUNAI",
	REMARKS2                           string `protobuf:"bytes,24,opt,name=REMARKS2,proto3" json:"REMARKS2,omitempty"`                                                     // "REMARKS2": "TEST TD WITHDRAW TUNAI 2",
	REMARKS3                           string `protobuf:"bytes,25,opt,name=REMARKS3,proto3" json:"REMARKS3,omitempty"`                                                     // "REMARKS3": "DIAN PERMANA-001901000022405"
}

func (x *DepositWithdrawRequest) Reset() {
	*x = DepositWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositWithdrawRequest) ProtoMessage() {}

func (x *DepositWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositWithdrawRequest.ProtoReflect.Descriptor instead.
func (*DepositWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{51}
}

func (x *DepositWithdrawRequest) GetTD_ACCOUNT() string {
	if x != nil {
		return x.TD_ACCOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetPENALTY_TYPE() string {
	if x != nil {
		return x.PENALTY_TYPE
	}
	return ""
}

func (x *DepositWithdrawRequest) GetDEBIT_AMOUNT() string {
	if x != nil {
		return x.DEBIT_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetTD_WITHDRAWAL_CASH() string {
	if x != nil {
		return x.TD_WITHDRAWAL_CASH
	}
	return ""
}

func (x *DepositWithdrawRequest) GetPROVISION_AMOUNT() string {
	if x != nil {
		return x.PROVISION_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetBUY_RATE() string {
	if x != nil {
		return x.BUY_RATE
	}
	return ""
}

func (x *DepositWithdrawRequest) GetSELL_RATE() string {
	if x != nil {
		return x.SELL_RATE
	}
	return ""
}

func (x *DepositWithdrawRequest) GetBUY_BOOKING_RATE() string {
	if x != nil {
		return x.BUY_BOOKING_RATE
	}
	return ""
}

func (x *DepositWithdrawRequest) GetSELL_BOOKING_RATE() string {
	if x != nil {
		return x.SELL_BOOKING_RATE
	}
	return ""
}

func (x *DepositWithdrawRequest) GetCR_GL_CASH_IDR() string {
	if x != nil {
		return x.CR_GL_CASH_IDR
	}
	return ""
}

func (x *DepositWithdrawRequest) GetCR_GL_IBT_CHARGES() string {
	if x != nil {
		return x.CR_GL_IBT_CHARGES
	}
	return ""
}

func (x *DepositWithdrawRequest) GetWAVE_TD_PENALTY_AMOUNT() string {
	if x != nil {
		return x.WAVE_TD_PENALTY_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetFEE_AMOUNT() string {
	if x != nil {
		return x.FEE_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetTD_WITH_HOLDING_TAX_AMOUNT() string {
	if x != nil {
		return x.TD_WITH_HOLDING_TAX_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetADJUST_WITH_HOLDING_TAX_AMOUNT() string {
	if x != nil {
		return x.ADJUST_WITH_HOLDING_TAX_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetCREDIT_ACCOUNT() string {
	if x != nil {
		return x.CREDIT_ACCOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetCREDIT_AMOUNT() string {
	if x != nil {
		return x.CREDIT_AMOUNT
	}
	return ""
}

func (x *DepositWithdrawRequest) GetPENALTY_ATAS_TERM_TO_DATE_INTEREST() string {
	if x != nil {
		return x.PENALTY_ATAS_TERM_TO_DATE_INTEREST
	}
	return ""
}

func (x *DepositWithdrawRequest) GetEFFECTIVE_DATE() string {
	if x != nil {
		return x.EFFECTIVE_DATE
	}
	return ""
}

func (x *DepositWithdrawRequest) GetREVERSAL() string {
	if x != nil {
		return x.REVERSAL
	}
	return ""
}

func (x *DepositWithdrawRequest) GetDEBIT_CURRENCY() string {
	if x != nil {
		return x.DEBIT_CURRENCY
	}
	return ""
}

func (x *DepositWithdrawRequest) GetCREDIT_CURRENCY() string {
	if x != nil {
		return x.CREDIT_CURRENCY
	}
	return ""
}

func (x *DepositWithdrawRequest) GetREMARKS1() string {
	if x != nil {
		return x.REMARKS1
	}
	return ""
}

func (x *DepositWithdrawRequest) GetREMARKS2() string {
	if x != nil {
		return x.REMARKS2
	}
	return ""
}

func (x *DepositWithdrawRequest) GetREMARKS3() string {
	if x != nil {
		return x.REMARKS3
	}
	return ""
}

type DepositoWithdrwal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	TRANCODE1        string `protobuf:"bytes,4,opt,name=TRANCODE1,proto3" json:"TRANCODE1,omitempty"`               // "TRANCODE1": "3027",
	JOURNAL_SEQ1     string `protobuf:"bytes,5,opt,name=JOURNAL_SEQ1,proto3" json:"JOURNAL_SEQ1,omitempty"`         // "JOURNAL_SEQ1": "7506066",
	TELLER_ID        string `protobuf:"bytes,6,opt,name=TELLER_ID,proto3" json:"TELLER_ID,omitempty"`               // "TELLER_ID": "0206051",
	NEED_APPROVAL    string `protobuf:"bytes,7,opt,name=NEED_APPROVAL,proto3" json:"NEED_APPROVAL,omitempty"`       // "NEED_APPROVAL": "N"
}

func (x *DepositoWithdrwal) Reset() {
	*x = DepositoWithdrwal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoWithdrwal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoWithdrwal) ProtoMessage() {}

func (x *DepositoWithdrwal) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoWithdrwal.ProtoReflect.Descriptor instead.
func (*DepositoWithdrwal) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{52}
}

func (x *DepositoWithdrwal) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoWithdrwal) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositoWithdrwal) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoWithdrwal) GetTRANCODE1() string {
	if x != nil {
		return x.TRANCODE1
	}
	return ""
}

func (x *DepositoWithdrwal) GetJOURNAL_SEQ1() string {
	if x != nil {
		return x.JOURNAL_SEQ1
	}
	return ""
}

func (x *DepositoWithdrwal) GetTELLER_ID() string {
	if x != nil {
		return x.TELLER_ID
	}
	return ""
}

func (x *DepositoWithdrwal) GetNEED_APPROVAL() string {
	if x != nil {
		return x.NEED_APPROVAL
	}
	return ""
}

type DepositWithdrawRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoWithdrwal `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositWithdrawRespons) Reset() {
	*x = DepositWithdrawRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositWithdrawRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositWithdrawRespons) ProtoMessage() {}

func (x *DepositWithdrawRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositWithdrawRespons.ProtoReflect.Descriptor instead.
func (*DepositWithdrawRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{53}
}

func (x *DepositWithdrawRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositWithdrawRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositWithdrawRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositWithdrawRespons) GetData() *DepositoWithdrwal {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositInquiryTDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	REMARK2 string `protobuf:"bytes,1,opt,name=REMARK2,proto3" json:"REMARK2,omitempty"` // "REMARK2":"InquiryLNTest2",
	ACCT_NO string `protobuf:"bytes,2,opt,name=ACCT_NO,proto3" json:"ACCT_NO,omitempty"` // "ACCT_NO":"001901000191408"
}

func (x *DepositInquiryTDRequest) Reset() {
	*x = DepositInquiryTDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryTDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryTDRequest) ProtoMessage() {}

func (x *DepositInquiryTDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryTDRequest.ProtoReflect.Descriptor instead.
func (*DepositInquiryTDRequest) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{54}
}

func (x *DepositInquiryTDRequest) GetREMARK2() string {
	if x != nil {
		return x.REMARK2
	}
	return ""
}

func (x *DepositInquiryTDRequest) GetACCT_NO() string {
	if x != nil {
		return x.ACCT_NO
	}
	return ""
}

type DepositInquiryTD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE          string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`                                              //"ERROR_CODE": "AS-000",
	RESPONSE_CODE       string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`                                        // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE    string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"`                                  // "RESPONSE_MESSAGE": "Transaction Successfully",
	REMARK2             string `protobuf:"bytes,4,opt,name=REMARK2,proto3" json:"REMARK2,omitempty"`                                                    // "REMARK2": "InquiryTDTest2",
	REMARK3             string `protobuf:"bytes,5,opt,name=REMARK3,proto3" json:"REMARK3,omitempty"`                                                    // "REMARK3": "InquiryTDTest3",
	ACCT_NO             string `protobuf:"bytes,6,opt,name=ACCT_NO,proto3" json:"ACCT_NO,omitempty"`                                                    // "ACCT_NO": "020601057415406",
	BRANCH              string `protobuf:"bytes,7,opt,name=BRANCH,proto3" json:"BRANCH,omitempty"`                                                      // "BRANCH": "00206",
	CUST_NAME           string `protobuf:"bytes,8,opt,name=CUST_NAME,proto3" json:"CUST_NAME,omitempty"`                                                // "CUST_NAME": "IDA HAMIDAH",
	PRODUCT_TYPE        string `protobuf:"bytes,9,opt,name=PRODUCT_TYPE,proto3" json:"PRODUCT_TYPE,omitempty"`                                          // "PRODUCT_TYPE": "DO",
	ACCT_CURR           string `protobuf:"bytes,10,opt,name=ACCT_CURR,proto3" json:"ACCT_CURR,omitempty"`                                               // "ACCT_CURR": "IDR",
	ID_NO               string `protobuf:"bytes,11,opt,name=ID_NO,proto3" json:"ID_NO,omitempty"`                                                       // "ID_NO": "6371031605980007",
	STATUS              string `protobuf:"bytes,12,opt,name=STATUS,proto3" json:"STATUS,omitempty"`                                                     // "STATUS": "1",
	BILYET_NO           string `protobuf:"bytes,13,opt,name=BILYET_NO,proto3" json:"BILYET_NO,omitempty"`                                               // "BILYET_NO": "00006128082",
	DATE_OPEN           string `protobuf:"bytes,14,opt,name=DATE_OPEN,proto3" json:"DATE_OPEN,omitempty"`                                               // "DATE_OPEN": "0190621",
	TERM_OF_INTEREST    string `protobuf:"bytes,15,opt,name=TERM_OF_INTEREST,proto3" json:"TERM_OF_INTEREST,omitempty"`                                 // "TERM_OF_INTEREST": "001",
	LAST_RENEWAL_DATE   string `protobuf:"bytes,16,opt,name=LAST_RENEWAL_DATE,proto3" json:"LAST_RENEWAL_DATE,omitempty"`                               // "LAST_RENEWAL_DATE": "0000000",
	BEGINNING_BAL       string `protobuf:"bytes,17,opt,name=BEGINNING_BAL,proto3" json:"BEGINNING_BAL,omitempty"`                                       // "BEGINNING_BAL": "0000012000000.00",
	MATURITY_DATE       string `protobuf:"bytes,18,opt,name=MATURITY_DATE,proto3" json:"MATURITY_DATE,omitempty"`                                       // "MATURITY_DATE": "0180721",
	PRINCIPLE_AMT       string `protobuf:"bytes,19,opt,name=PRINCIPLE_AMT,proto3" json:"PRINCIPLE_AMT,omitempty"`                                       // "PRINCIPLE_AMT": "0000012000000.00",
	RATE                string `protobuf:"bytes,20,opt,name=RATE,proto3" json:"RATE,omitempty"`                                                         // "RATE": "0.010000",
	PAID_AMT            string `protobuf:"bytes,21,opt,name=PAID_AMT,proto3" json:"PAID_AMT,omitempty"`                                                 // "PAID_AMT": "0000012000329.00",
	PENDING_INTEREST    string `protobuf:"bytes,22,opt,name=PENDING_INTEREST,proto3" json:"PENDING_INTEREST,omitempty"`                                 // "PENDING_INTEREST": "00000000000.00",
	ACCRUE_INTEREST     string `protobuf:"bytes,23,opt,name=ACCRUE_INTEREST,proto3" json:"ACCRUE_INTEREST,omitempty"`                                   // "ACCRUE_INTEREST": "0000000000329.00",
	TAX_ACCRUE_INTEREST string `protobuf:"bytes,24,opt,name=TAX_ACCRUE_INTEREST,json=TAX_ ACCRUE_INTEREST,proto3" json:"TAX_ACCRUE_INTEREST,omitempty"` // "TAX_ ACCRUE_INTEREST": "00000000462.00",
	HOLD_AMT            string `protobuf:"bytes,25,opt,name=HOLD_AMT,proto3" json:"HOLD_AMT,omitempty"`                                                 // "HOLD_AMT": "0000000000000.00",
	STMT_PASSBOOK       string `protobuf:"bytes,26,opt,name=STMT_PASSBOOK,proto3" json:"STMT_PASSBOOK,omitempty"`                                       // "STMT_PASSBOOK": "",
	FLOAT_BAL           string `protobuf:"bytes,27,opt,name=FLOAT_BAL,proto3" json:"FLOAT_BAL,omitempty"`                                               // "FLOAT_BAL": "0000000000000.00",
	ARO                 string `protobuf:"bytes,28,opt,name=ARO,proto3" json:"ARO,omitempty"`                                                           // "ARO": "Y",
	PENALTY_AMT         string `protobuf:"bytes,29,opt,name=PENALTY_AMT,proto3" json:"PENALTY_AMT,omitempty"`                                           // "PENALTY_AMT": "00000000000.00",
	TERM_TO_DATE_INT    string `protobuf:"bytes,30,opt,name=TERM_TO_DATE_INT,proto3" json:"TERM_TO_DATE_INT,omitempty"`                                 // "TERM_TO_DATE_INT": "00000002303.00",
	WITHHOLDING_TODAY   string `protobuf:"bytes,31,opt,name=WITHHOLDING_TODAY,proto3" json:"WITHHOLDING_TODAY,omitempty"`                               // "WITHHOLDING_TODAY": "00000000462.00",
	FEDERAL_WH_TERM     string `protobuf:"bytes,32,opt,name=FEDERAL_WH_TERM,proto3" json:"FEDERAL_WH_TERM,omitempty"`                                   // "FEDERAL_WH_TERM": "00000000462.00",
	PENALTY_TTD         string `protobuf:"bytes,33,opt,name=PENALTY_TTD,proto3" json:"PENALTY_TTD,omitempty"`                                           // "PENALTY_TTD": "00000002303.00",
	PENALTY_ACC_INT     string `protobuf:"bytes,34,opt,name=PENALTY_ACC_INT,proto3" json:"PENALTY_ACC_INT,omitempty"`                                   // "PENALTY_ACC_INT": "0000000000329.00",
	PENALTY_TTD_PCT     string `protobuf:"bytes,35,opt,name=PENALTY_TTD_PCT,proto3" json:"PENALTY_TTD_PCT,omitempty"`                                   // "PENALTY_TTD_PCT": "0.250000",
	PENALTY_ACC_INT_PCT string `protobuf:"bytes,36,opt,name=PENALTY_ACC_INT_PCT,proto3" json:"PENALTY_ACC_INT_PCT,omitempty"`                           // "PENALTY_ACC_INT_PCT": "1.000000",
	PENALTY_FR_HOST     string `protobuf:"bytes,37,opt,name=PENALTY_FR_HOST,proto3" json:"PENALTY_FR_HOST,omitempty"`                                   // "PENALTY_FR_HOST": "00000000000.00",
	TAX_DEDUCTION       string `protobuf:"bytes,38,opt,name=TAX_DEDUCTION,proto3" json:"TAX_DEDUCTION,omitempty"`                                       // "TAX_DEDUCTION": "00000000000.00",
	TENOR               string `protobuf:"bytes,39,opt,name=TENOR,proto3" json:"TENOR,omitempty"`                                                       // "TENOR": "00029",
	TENOR_UNIT          string `protobuf:"bytes,40,opt,name=TENOR_UNIT,proto3" json:"TENOR_UNIT,omitempty"`                                             // "TENOR_UNIT": "D"
}

func (x *DepositInquiryTD) Reset() {
	*x = DepositInquiryTD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryTD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryTD) ProtoMessage() {}

func (x *DepositInquiryTD) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryTD.ProtoReflect.Descriptor instead.
func (*DepositInquiryTD) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{55}
}

func (x *DepositInquiryTD) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositInquiryTD) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositInquiryTD) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositInquiryTD) GetREMARK2() string {
	if x != nil {
		return x.REMARK2
	}
	return ""
}

func (x *DepositInquiryTD) GetREMARK3() string {
	if x != nil {
		return x.REMARK3
	}
	return ""
}

func (x *DepositInquiryTD) GetACCT_NO() string {
	if x != nil {
		return x.ACCT_NO
	}
	return ""
}

func (x *DepositInquiryTD) GetBRANCH() string {
	if x != nil {
		return x.BRANCH
	}
	return ""
}

func (x *DepositInquiryTD) GetCUST_NAME() string {
	if x != nil {
		return x.CUST_NAME
	}
	return ""
}

func (x *DepositInquiryTD) GetPRODUCT_TYPE() string {
	if x != nil {
		return x.PRODUCT_TYPE
	}
	return ""
}

func (x *DepositInquiryTD) GetACCT_CURR() string {
	if x != nil {
		return x.ACCT_CURR
	}
	return ""
}

func (x *DepositInquiryTD) GetID_NO() string {
	if x != nil {
		return x.ID_NO
	}
	return ""
}

func (x *DepositInquiryTD) GetSTATUS() string {
	if x != nil {
		return x.STATUS
	}
	return ""
}

func (x *DepositInquiryTD) GetBILYET_NO() string {
	if x != nil {
		return x.BILYET_NO
	}
	return ""
}

func (x *DepositInquiryTD) GetDATE_OPEN() string {
	if x != nil {
		return x.DATE_OPEN
	}
	return ""
}

func (x *DepositInquiryTD) GetTERM_OF_INTEREST() string {
	if x != nil {
		return x.TERM_OF_INTEREST
	}
	return ""
}

func (x *DepositInquiryTD) GetLAST_RENEWAL_DATE() string {
	if x != nil {
		return x.LAST_RENEWAL_DATE
	}
	return ""
}

func (x *DepositInquiryTD) GetBEGINNING_BAL() string {
	if x != nil {
		return x.BEGINNING_BAL
	}
	return ""
}

func (x *DepositInquiryTD) GetMATURITY_DATE() string {
	if x != nil {
		return x.MATURITY_DATE
	}
	return ""
}

func (x *DepositInquiryTD) GetPRINCIPLE_AMT() string {
	if x != nil {
		return x.PRINCIPLE_AMT
	}
	return ""
}

func (x *DepositInquiryTD) GetRATE() string {
	if x != nil {
		return x.RATE
	}
	return ""
}

func (x *DepositInquiryTD) GetPAID_AMT() string {
	if x != nil {
		return x.PAID_AMT
	}
	return ""
}

func (x *DepositInquiryTD) GetPENDING_INTEREST() string {
	if x != nil {
		return x.PENDING_INTEREST
	}
	return ""
}

func (x *DepositInquiryTD) GetACCRUE_INTEREST() string {
	if x != nil {
		return x.ACCRUE_INTEREST
	}
	return ""
}

func (x *DepositInquiryTD) GetTAX_ACCRUE_INTEREST() string {
	if x != nil {
		return x.TAX_ACCRUE_INTEREST
	}
	return ""
}

func (x *DepositInquiryTD) GetHOLD_AMT() string {
	if x != nil {
		return x.HOLD_AMT
	}
	return ""
}

func (x *DepositInquiryTD) GetSTMT_PASSBOOK() string {
	if x != nil {
		return x.STMT_PASSBOOK
	}
	return ""
}

func (x *DepositInquiryTD) GetFLOAT_BAL() string {
	if x != nil {
		return x.FLOAT_BAL
	}
	return ""
}

func (x *DepositInquiryTD) GetARO() string {
	if x != nil {
		return x.ARO
	}
	return ""
}

func (x *DepositInquiryTD) GetPENALTY_AMT() string {
	if x != nil {
		return x.PENALTY_AMT
	}
	return ""
}

func (x *DepositInquiryTD) GetTERM_TO_DATE_INT() string {
	if x != nil {
		return x.TERM_TO_DATE_INT
	}
	return ""
}

func (x *DepositInquiryTD) GetWITHHOLDING_TODAY() string {
	if x != nil {
		return x.WITHHOLDING_TODAY
	}
	return ""
}

func (x *DepositInquiryTD) GetFEDERAL_WH_TERM() string {
	if x != nil {
		return x.FEDERAL_WH_TERM
	}
	return ""
}

func (x *DepositInquiryTD) GetPENALTY_TTD() string {
	if x != nil {
		return x.PENALTY_TTD
	}
	return ""
}

func (x *DepositInquiryTD) GetPENALTY_ACC_INT() string {
	if x != nil {
		return x.PENALTY_ACC_INT
	}
	return ""
}

func (x *DepositInquiryTD) GetPENALTY_TTD_PCT() string {
	if x != nil {
		return x.PENALTY_TTD_PCT
	}
	return ""
}

func (x *DepositInquiryTD) GetPENALTY_ACC_INT_PCT() string {
	if x != nil {
		return x.PENALTY_ACC_INT_PCT
	}
	return ""
}

func (x *DepositInquiryTD) GetPENALTY_FR_HOST() string {
	if x != nil {
		return x.PENALTY_FR_HOST
	}
	return ""
}

func (x *DepositInquiryTD) GetTAX_DEDUCTION() string {
	if x != nil {
		return x.TAX_DEDUCTION
	}
	return ""
}

func (x *DepositInquiryTD) GetTENOR() string {
	if x != nil {
		return x.TENOR
	}
	return ""
}

func (x *DepositInquiryTD) GetTENOR_UNIT() string {
	if x != nil {
		return x.TENOR_UNIT
	}
	return ""
}

type DepositInquiryTDRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositInquiryTD `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositInquiryTDRespons) Reset() {
	*x = DepositInquiryTDRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryTDRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryTDRespons) ProtoMessage() {}

func (x *DepositInquiryTDRespons) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryTDRespons.ProtoReflect.Descriptor instead.
func (*DepositInquiryTDRespons) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{56}
}

func (x *DepositInquiryTDRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositInquiryTDRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositInquiryTDRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositInquiryTDRespons) GetData() *DepositInquiryTD {
	if x != nil {
		return x.Data
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64                 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName   string                 `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	RoleID     uint64                 `protobuf:"varint,3,opt,name=roleID,proto3" json:"roleID,omitempty"`
	IsReject   bool                   `protobuf:"varint,5,opt,name=isReject,proto3" json:"isReject,omitempty"`
	ApprovedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=approvedAt,proto3" json:"approvedAt,omitempty"`
	Step       string                 `protobuf:"bytes,7,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{57}
}

func (x *Participant) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Participant) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Participant) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *Participant) GetIsReject() bool {
	if x != nil {
		return x.IsReject
	}
	return false
}

func (x *Participant) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *Participant) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

type Participants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApprovedCount int32          `protobuf:"varint,1,opt,name=approvedCount,proto3" json:"approvedCount,omitempty"`
	RejectedCount int32          `protobuf:"varint,2,opt,name=rejectedCount,proto3" json:"rejectedCount,omitempty"`
	Requirement   int32          `protobuf:"varint,3,opt,name=Requirement,proto3" json:"Requirement,omitempty"`
	Participants  []*Participant `protobuf:"bytes,4,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *Participants) Reset() {
	*x = Participants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participants) ProtoMessage() {}

func (x *Participants) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participants.ProtoReflect.Descriptor instead.
func (*Participants) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{58}
}

func (x *Participants) GetApprovedCount() int32 {
	if x != nil {
		return x.ApprovedCount
	}
	return 0
}

func (x *Participants) GetRejectedCount() int32 {
	if x != nil {
		return x.RejectedCount
	}
	return 0
}

func (x *Participants) GetRequirement() int32 {
	if x != nil {
		return x.Requirement
	}
	return 0
}

func (x *Participants) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type Flow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowLogicID uint64                 `protobuf:"varint,1,opt,name=workflowLogicID,proto3" json:"workflowLogicID,omitempty"`
	Verifier        *Participants          `protobuf:"bytes,2,opt,name=verifier,proto3" json:"verifier,omitempty"`
	Approver        *Participants          `protobuf:"bytes,3,opt,name=approver,proto3" json:"approver,omitempty"`
	Releaser        *Participants          `protobuf:"bytes,4,opt,name=releaser,proto3" json:"releaser,omitempty"`
	IsRejected      bool                   `protobuf:"varint,5,opt,name=isRejected,proto3" json:"isRejected,omitempty"`
	CompletedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
	VerCurrPriority int32                  `protobuf:"varint,8,opt,name=verCurrPriority,proto3" json:"verCurrPriority,omitempty"`
	AppCurrPriority int32                  `protobuf:"varint,9,opt,name=appCurrPriority,proto3" json:"appCurrPriority,omitempty"`
	RelCurrPriority int32                  `protobuf:"varint,10,opt,name=relCurrPriority,proto3" json:"relCurrPriority,omitempty"`
	ApprovedUserIDs []uint64               `protobuf:"varint,11,rep,packed,name=approvedUserIDs,proto3" json:"approvedUserIDs,omitempty"`
	ListRoles       []uint32               `protobuf:"varint,12,rep,packed,name=listRoles,proto3" json:"listRoles,omitempty"`
}

func (x *Flow) Reset() {
	*x = Flow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{59}
}

func (x *Flow) GetWorkflowLogicID() uint64 {
	if x != nil {
		return x.WorkflowLogicID
	}
	return 0
}

func (x *Flow) GetVerifier() *Participants {
	if x != nil {
		return x.Verifier
	}
	return nil
}

func (x *Flow) GetApprover() *Participants {
	if x != nil {
		return x.Approver
	}
	return nil
}

func (x *Flow) GetReleaser() *Participants {
	if x != nil {
		return x.Releaser
	}
	return nil
}

func (x *Flow) GetIsRejected() bool {
	if x != nil {
		return x.IsRejected
	}
	return false
}

func (x *Flow) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Flow) GetVerCurrPriority() int32 {
	if x != nil {
		return x.VerCurrPriority
	}
	return 0
}

func (x *Flow) GetAppCurrPriority() int32 {
	if x != nil {
		return x.AppCurrPriority
	}
	return 0
}

func (x *Flow) GetRelCurrPriority() int32 {
	if x != nil {
		return x.RelCurrPriority
	}
	return 0
}

func (x *Flow) GetApprovedUserIDs() []uint64 {
	if x != nil {
		return x.ApprovedUserIDs
	}
	return nil
}

func (x *Flow) GetListRoles() []uint32 {
	if x != nil {
		return x.ListRoles
	}
	return nil
}

type WorkflowRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=lastUpdatedAt,proto3" json:"lastUpdatedAt,omitempty"`
	TopRange      uint64                 `protobuf:"varint,2,opt,name=topRange,proto3" json:"topRange,omitempty"`
	BottomRange   uint64                 `protobuf:"varint,3,opt,name=bottomRange,proto3" json:"bottomRange,omitempty"`
	Flows         []*Flow                `protobuf:"bytes,4,rep,name=flows,proto3" json:"flows,omitempty"`
}

func (x *WorkflowRecords) Reset() {
	*x = WorkflowRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowRecords) ProtoMessage() {}

func (x *WorkflowRecords) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowRecords.ProtoReflect.Descriptor instead.
func (*WorkflowRecords) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{60}
}

func (x *WorkflowRecords) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *WorkflowRecords) GetTopRange() uint64 {
	if x != nil {
		return x.TopRange
	}
	return 0
}

func (x *WorkflowRecords) GetBottomRange() uint64 {
	if x != nil {
		return x.BottomRange
	}
	return 0
}

func (x *WorkflowRecords) GetFlows() []*Flow {
	if x != nil {
		return x.Flows
	}
	return nil
}

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{61}
}

func (x *UserData) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type MakerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *MakerData) Reset() {
	*x = MakerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakerData) ProtoMessage() {}

func (x *MakerData) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakerData.ProtoReflect.Descriptor instead.
func (*MakerData) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{62}
}

func (x *MakerData) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *MakerData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type WorkflowHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID           uint64     `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductName         string     `protobuf:"bytes,2,opt,name=productName,proto3" json:"productName,omitempty"`
	CurrencyID          uint64     `protobuf:"varint,3,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	CurrencyName        string     `protobuf:"bytes,5,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
	CompanyID           uint64     `protobuf:"varint,6,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName         string     `protobuf:"bytes,7,opt,name=companyName,proto3" json:"companyName,omitempty"`
	TransactionalNumber uint64     `protobuf:"varint,10,opt,name=transactionalNumber,proto3" json:"transactionalNumber,omitempty"`
	WorkflowID          uint64     `protobuf:"varint,11,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	Maker               *MakerData `protobuf:"bytes,12,opt,name=maker,proto3" json:"maker,omitempty"`
	UaID                uint64     `protobuf:"varint,13,opt,name=uaID,proto3" json:"uaID,omitempty"` // used account id
}

func (x *WorkflowHeader) Reset() {
	*x = WorkflowHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowHeader) ProtoMessage() {}

func (x *WorkflowHeader) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowHeader.ProtoReflect.Descriptor instead.
func (*WorkflowHeader) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{63}
}

func (x *WorkflowHeader) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *WorkflowHeader) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *WorkflowHeader) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *WorkflowHeader) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *WorkflowHeader) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *WorkflowHeader) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *WorkflowHeader) GetTransactionalNumber() uint64 {
	if x != nil {
		return x.TransactionalNumber
	}
	return 0
}

func (x *WorkflowHeader) GetWorkflowID() uint64 {
	if x != nil {
		return x.WorkflowID
	}
	return 0
}

func (x *WorkflowHeader) GetMaker() *MakerData {
	if x != nil {
		return x.Maker
	}
	return nil
}

func (x *WorkflowHeader) GetUaID() uint64 {
	if x != nil {
		return x.UaID
	}
	return 0
}

type RejectedBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       uint64                 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RejecterName string                 `protobuf:"bytes,2,opt,name=rejecterName,proto3" json:"rejecterName,omitempty"`
	RoleID       uint64                 `protobuf:"varint,3,opt,name=roleID,proto3" json:"roleID,omitempty"`
	RoleName     string                 `protobuf:"bytes,4,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RejectedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=rejectedAt,proto3" json:"rejectedAt,omitempty"`
}

func (x *RejectedBy) Reset() {
	*x = RejectedBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectedBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedBy) ProtoMessage() {}

func (x *RejectedBy) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedBy.ProtoReflect.Descriptor instead.
func (*RejectedBy) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{64}
}

func (x *RejectedBy) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RejectedBy) GetRejecterName() string {
	if x != nil {
		return x.RejecterName
	}
	return ""
}

func (x *RejectedBy) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *RejectedBy) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RejectedBy) GetRejectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RejectedAt
	}
	return nil
}

type WorkflowPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header             *WorkflowHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Records            *WorkflowRecords       `protobuf:"bytes,2,opt,name=records,proto3" json:"records,omitempty"`
	CreatedBy          *UserData              `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	IsDefault          bool                   `protobuf:"varint,5,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	IsTransactional    bool                   `protobuf:"varint,6,opt,name=isTransactional,proto3" json:"isTransactional,omitempty"`
	CurrentRoleIDs     []uint64               `protobuf:"varint,7,rep,packed,name=currentRoleIDs,proto3" json:"currentRoleIDs,omitempty"`
	CurrentStep        string                 `protobuf:"bytes,8,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	ParticipantUserIDs []uint64               `protobuf:"varint,9,rep,packed,name=participantUserIDs,proto3" json:"participantUserIDs,omitempty"`
}

func (x *WorkflowPayload) Reset() {
	*x = WorkflowPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowPayload) ProtoMessage() {}

func (x *WorkflowPayload) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowPayload.ProtoReflect.Descriptor instead.
func (*WorkflowPayload) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{65}
}

func (x *WorkflowPayload) GetHeader() *WorkflowHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *WorkflowPayload) GetRecords() *WorkflowRecords {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *WorkflowPayload) GetCreatedBy() *UserData {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *WorkflowPayload) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowPayload) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *WorkflowPayload) GetIsTransactional() bool {
	if x != nil {
		return x.IsTransactional
	}
	return false
}

func (x *WorkflowPayload) GetCurrentRoleIDs() []uint64 {
	if x != nil {
		return x.CurrentRoleIDs
	}
	return nil
}

func (x *WorkflowPayload) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

func (x *WorkflowPayload) GetParticipantUserIDs() []uint64 {
	if x != nil {
		return x.ParticipantUserIDs
	}
	return nil
}

type WorkflowDataStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow   *WorkflowPayload `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	NextStatus string           `protobuf:"bytes,2,opt,name=nextStatus,proto3" json:"nextStatus,omitempty"`
	NextStep   string           `protobuf:"bytes,3,opt,name=nextStep,proto3" json:"nextStep,omitempty"`
}

func (x *WorkflowDataStatus) Reset() {
	*x = WorkflowDataStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowDataStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowDataStatus) ProtoMessage() {}

func (x *WorkflowDataStatus) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowDataStatus.ProtoReflect.Descriptor instead.
func (*WorkflowDataStatus) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{66}
}

func (x *WorkflowDataStatus) GetWorkflow() *WorkflowPayload {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *WorkflowDataStatus) GetNextStatus() string {
	if x != nil {
		return x.NextStatus
	}
	return ""
}

func (x *WorkflowDataStatus) GetNextStep() string {
	if x != nil {
		return x.NextStep
	}
	return ""
}

// notification
type DepositoNotificationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task data
	USERNAME_MAKER    string `protobuf:"bytes,1,opt,name=USERNAME_MAKER,proto3" json:"USERNAME_MAKER,omitempty"`
	USERNAME_CHECKER  string `protobuf:"bytes,2,opt,name=USERNAME_CHECKER,proto3" json:"USERNAME_CHECKER,omitempty"`
	USERNAME_APPROVER string `protobuf:"bytes,3,opt,name=USERNAME_APPROVER,proto3" json:"USERNAME_APPROVER,omitempty"`
	USERNAME_RELEASER string `protobuf:"bytes,4,opt,name=USERNAME_RELEASER,proto3" json:"USERNAME_RELEASER,omitempty"`
	CHECKER_DATE      string `protobuf:"bytes,5,opt,name=CHECKER_DATE,proto3" json:"CHECKER_DATE,omitempty"`
	APPROVER_DATE     string `protobuf:"bytes,6,opt,name=APPROVER_DATE,proto3" json:"APPROVER_DATE,omitempty"`
	RELEASER_DATE     string `protobuf:"bytes,7,opt,name=RELEASER_DATE,proto3" json:"RELEASER_DATE,omitempty"`
	USERNAME_REJECTOR string `protobuf:"bytes,8,opt,name=USERNAME_REJECTOR,proto3" json:"USERNAME_REJECTOR,omitempty"`
	TASK_ID           string `protobuf:"bytes,9,opt,name=TASK_ID,proto3" json:"TASK_ID,omitempty"`
	// create task date
	CREATED_DATETIME string `protobuf:"bytes,10,opt,name=CREATED_DATETIME,proto3" json:"CREATED_DATETIME,omitempty"`
	CREATED_DATE     string `protobuf:"bytes,11,opt,name=CREATED_DATE,proto3" json:"CREATED_DATE,omitempty"`
	CREATED_TIME     string `protobuf:"bytes,12,opt,name=CREATED_TIME,proto3" json:"CREATED_TIME,omitempty"`
	// update task data
	EVENT_DATETIME string `protobuf:"bytes,13,opt,name=EVENT_DATETIME,proto3" json:"EVENT_DATETIME,omitempty"`
	EVENT_DATE     string `protobuf:"bytes,14,opt,name=EVENT_DATE,proto3" json:"EVENT_DATE,omitempty"`
	EVENT_TIME     string `protobuf:"bytes,15,opt,name=EVENT_TIME,proto3" json:"EVENT_TIME,omitempty"`
	// deposito data
	ACCOUNT_TD        string `protobuf:"bytes,16,opt,name=ACCOUNT_TD,proto3" json:"ACCOUNT_TD,omitempty"`
	ACCOUNT_SOURCE    string `protobuf:"bytes,17,opt,name=ACCOUNT_SOURCE,proto3" json:"ACCOUNT_SOURCE,omitempty"`
	ACCOUNT_PRINCIPAL string `protobuf:"bytes,18,opt,name=ACCOUNT_PRINCIPAL,proto3" json:"ACCOUNT_PRINCIPAL,omitempty"`
	ACCOUNT_INTEREST  string `protobuf:"bytes,19,opt,name=ACCOUNT_INTEREST,proto3" json:"ACCOUNT_INTEREST,omitempty"`
	CURRENCY_NAME     string `protobuf:"bytes,20,opt,name=CURRENCY_NAME,proto3" json:"CURRENCY_NAME,omitempty"`
	AMOUNT            string `protobuf:"bytes,21,opt,name=AMOUNT,proto3" json:"AMOUNT,omitempty"`
	CODE              string `protobuf:"bytes,22,opt,name=CODE,proto3" json:"CODE,omitempty"`
	DEPOSIT_TYPE      string `protobuf:"bytes,23,opt,name=DEPOSIT_TYPE,proto3" json:"DEPOSIT_TYPE,omitempty"`
	DEPOSIT_NAME      string `protobuf:"bytes,24,opt,name=DEPOSIT_NAME,proto3" json:"DEPOSIT_NAME,omitempty"`
	INTEREST_RATE     string `protobuf:"bytes,25,opt,name=INTEREST_RATE,proto3" json:"INTEREST_RATE,omitempty"`
	TENOR             string `protobuf:"bytes,26,opt,name=TENOR,proto3" json:"TENOR,omitempty"`
	VOUCHER           string `protobuf:"bytes,27,opt,name=VOUCHER,proto3" json:"VOUCHER,omitempty"`
	STATUS_DEPOSIT    string `protobuf:"bytes,28,opt,name=STATUS_DEPOSIT,proto3" json:"STATUS_DEPOSIT,omitempty"`
	OPEN_DATE         string `protobuf:"bytes,29,opt,name=OPEN_DATE,proto3" json:"OPEN_DATE,omitempty"`
	WITHDRAW_AT       string `protobuf:"bytes,30,opt,name=WITHDRAW_AT,proto3" json:"WITHDRAW_AT,omitempty"`
	// TASK
	COMPANY_NAME          string `protobuf:"bytes,31,opt,name=COMPANY_NAME,proto3" json:"COMPANY_NAME,omitempty"`
	MODULE                string `protobuf:"bytes,32,opt,name=MODULE,proto3" json:"MODULE,omitempty"`
	MESSAGE               string `protobuf:"bytes,33,opt,name=MESSAGE,proto3" json:"MESSAGE,omitempty"`
	TEMPLATE              string `protobuf:"bytes,34,opt,name=TEMPLATE,proto3" json:"TEMPLATE,omitempty"`
	STATUS_SEND           string `protobuf:"bytes,35,opt,name=STATUS_SEND,proto3" json:"STATUS_SEND,omitempty"`
	STATUS_ACTION         string `protobuf:"bytes,36,opt,name=STATUS_ACTION,proto3" json:"STATUS_ACTION,omitempty"`
	STATUS_REQUEST_DELETE string `protobuf:"bytes,37,opt,name=STATUS_REQUEST_DELETE,proto3" json:"STATUS_REQUEST_DELETE,omitempty"`
	REASON                string `protobuf:"bytes,38,opt,name=REASON,proto3" json:"REASON,omitempty"`
	COMMENT               string `protobuf:"bytes,39,opt,name=COMMENT,proto3" json:"COMMENT,omitempty"`
}

func (x *DepositoNotificationData) Reset() {
	*x = DepositoNotificationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoNotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoNotificationData) ProtoMessage() {}

func (x *DepositoNotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoNotificationData.ProtoReflect.Descriptor instead.
func (*DepositoNotificationData) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{67}
}

func (x *DepositoNotificationData) GetUSERNAME_MAKER() string {
	if x != nil {
		return x.USERNAME_MAKER
	}
	return ""
}

func (x *DepositoNotificationData) GetUSERNAME_CHECKER() string {
	if x != nil {
		return x.USERNAME_CHECKER
	}
	return ""
}

func (x *DepositoNotificationData) GetUSERNAME_APPROVER() string {
	if x != nil {
		return x.USERNAME_APPROVER
	}
	return ""
}

func (x *DepositoNotificationData) GetUSERNAME_RELEASER() string {
	if x != nil {
		return x.USERNAME_RELEASER
	}
	return ""
}

func (x *DepositoNotificationData) GetCHECKER_DATE() string {
	if x != nil {
		return x.CHECKER_DATE
	}
	return ""
}

func (x *DepositoNotificationData) GetAPPROVER_DATE() string {
	if x != nil {
		return x.APPROVER_DATE
	}
	return ""
}

func (x *DepositoNotificationData) GetRELEASER_DATE() string {
	if x != nil {
		return x.RELEASER_DATE
	}
	return ""
}

func (x *DepositoNotificationData) GetUSERNAME_REJECTOR() string {
	if x != nil {
		return x.USERNAME_REJECTOR
	}
	return ""
}

func (x *DepositoNotificationData) GetTASK_ID() string {
	if x != nil {
		return x.TASK_ID
	}
	return ""
}

func (x *DepositoNotificationData) GetCREATED_DATETIME() string {
	if x != nil {
		return x.CREATED_DATETIME
	}
	return ""
}

func (x *DepositoNotificationData) GetCREATED_DATE() string {
	if x != nil {
		return x.CREATED_DATE
	}
	return ""
}

func (x *DepositoNotificationData) GetCREATED_TIME() string {
	if x != nil {
		return x.CREATED_TIME
	}
	return ""
}

func (x *DepositoNotificationData) GetEVENT_DATETIME() string {
	if x != nil {
		return x.EVENT_DATETIME
	}
	return ""
}

func (x *DepositoNotificationData) GetEVENT_DATE() string {
	if x != nil {
		return x.EVENT_DATE
	}
	return ""
}

func (x *DepositoNotificationData) GetEVENT_TIME() string {
	if x != nil {
		return x.EVENT_TIME
	}
	return ""
}

func (x *DepositoNotificationData) GetACCOUNT_TD() string {
	if x != nil {
		return x.ACCOUNT_TD
	}
	return ""
}

func (x *DepositoNotificationData) GetACCOUNT_SOURCE() string {
	if x != nil {
		return x.ACCOUNT_SOURCE
	}
	return ""
}

func (x *DepositoNotificationData) GetACCOUNT_PRINCIPAL() string {
	if x != nil {
		return x.ACCOUNT_PRINCIPAL
	}
	return ""
}

func (x *DepositoNotificationData) GetACCOUNT_INTEREST() string {
	if x != nil {
		return x.ACCOUNT_INTEREST
	}
	return ""
}

func (x *DepositoNotificationData) GetCURRENCY_NAME() string {
	if x != nil {
		return x.CURRENCY_NAME
	}
	return ""
}

func (x *DepositoNotificationData) GetAMOUNT() string {
	if x != nil {
		return x.AMOUNT
	}
	return ""
}

func (x *DepositoNotificationData) GetCODE() string {
	if x != nil {
		return x.CODE
	}
	return ""
}

func (x *DepositoNotificationData) GetDEPOSIT_TYPE() string {
	if x != nil {
		return x.DEPOSIT_TYPE
	}
	return ""
}

func (x *DepositoNotificationData) GetDEPOSIT_NAME() string {
	if x != nil {
		return x.DEPOSIT_NAME
	}
	return ""
}

func (x *DepositoNotificationData) GetINTEREST_RATE() string {
	if x != nil {
		return x.INTEREST_RATE
	}
	return ""
}

func (x *DepositoNotificationData) GetTENOR() string {
	if x != nil {
		return x.TENOR
	}
	return ""
}

func (x *DepositoNotificationData) GetVOUCHER() string {
	if x != nil {
		return x.VOUCHER
	}
	return ""
}

func (x *DepositoNotificationData) GetSTATUS_DEPOSIT() string {
	if x != nil {
		return x.STATUS_DEPOSIT
	}
	return ""
}

func (x *DepositoNotificationData) GetOPEN_DATE() string {
	if x != nil {
		return x.OPEN_DATE
	}
	return ""
}

func (x *DepositoNotificationData) GetWITHDRAW_AT() string {
	if x != nil {
		return x.WITHDRAW_AT
	}
	return ""
}

func (x *DepositoNotificationData) GetCOMPANY_NAME() string {
	if x != nil {
		return x.COMPANY_NAME
	}
	return ""
}

func (x *DepositoNotificationData) GetMODULE() string {
	if x != nil {
		return x.MODULE
	}
	return ""
}

func (x *DepositoNotificationData) GetMESSAGE() string {
	if x != nil {
		return x.MESSAGE
	}
	return ""
}

func (x *DepositoNotificationData) GetTEMPLATE() string {
	if x != nil {
		return x.TEMPLATE
	}
	return ""
}

func (x *DepositoNotificationData) GetSTATUS_SEND() string {
	if x != nil {
		return x.STATUS_SEND
	}
	return ""
}

func (x *DepositoNotificationData) GetSTATUS_ACTION() string {
	if x != nil {
		return x.STATUS_ACTION
	}
	return ""
}

func (x *DepositoNotificationData) GetSTATUS_REQUEST_DELETE() string {
	if x != nil {
		return x.STATUS_REQUEST_DELETE
	}
	return ""
}

func (x *DepositoNotificationData) GetREASON() string {
	if x != nil {
		return x.REASON
	}
	return ""
}

func (x *DepositoNotificationData) GetCOMMENT() string {
	if x != nil {
		return x.COMMENT
	}
	return ""
}

type DepositoDataListRequest_DataListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositoName string `protobuf:"bytes,1,opt,name=depositoName,proto3" json:"depositoName,omitempty"`
	Tenor        string `protobuf:"bytes,2,opt,name=tenor,proto3" json:"tenor,omitempty"`
	InterestRate string `protobuf:"bytes,3,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	Code         string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Custom       string `protobuf:"bytes,50,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *DepositoDataListRequest_DataListFilter) Reset() {
	*x = DepositoDataListRequest_DataListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoDataListRequest_DataListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoDataListRequest_DataListFilter) ProtoMessage() {}

func (x *DepositoDataListRequest_DataListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoDataListRequest_DataListFilter.ProtoReflect.Descriptor instead.
func (*DepositoDataListRequest_DataListFilter) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{19, 0}
}

func (x *DepositoDataListRequest_DataListFilter) GetDepositoName() string {
	if x != nil {
		return x.DepositoName
	}
	return ""
}

func (x *DepositoDataListRequest_DataListFilter) GetTenor() string {
	if x != nil {
		return x.Tenor
	}
	return ""
}

func (x *DepositoDataListRequest_DataListFilter) GetInterestRate() string {
	if x != nil {
		return x.InterestRate
	}
	return ""
}

func (x *DepositoDataListRequest_DataListFilter) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DepositoDataListRequest_DataListFilter) GetCustom() string {
	if x != nil {
		return x.Custom
	}
	return ""
}

type GetProductDepositoRequest_DataListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Tenor    string `protobuf:"bytes,2,opt,name=tenor,proto3" json:"tenor,omitempty"`
	Custom   string `protobuf:"bytes,50,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *GetProductDepositoRequest_DataListFilter) Reset() {
	*x = GetProductDepositoRequest_DataListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deposito_payload_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductDepositoRequest_DataListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductDepositoRequest_DataListFilter) ProtoMessage() {}

func (x *GetProductDepositoRequest_DataListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_deposito_payload_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductDepositoRequest_DataListFilter.ProtoReflect.Descriptor instead.
func (*GetProductDepositoRequest_DataListFilter) Descriptor() ([]byte, []int) {
	return file_deposito_payload_proto_rawDescGZIP(), []int{26, 0}
}

func (x *GetProductDepositoRequest_DataListFilter) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetProductDepositoRequest_DataListFilter) GetTenor() string {
	if x != nil {
		return x.Tenor
	}
	return ""
}

func (x *GetProductDepositoRequest_DataListFilter) GetCustom() string {
	if x != nil {
		return x.Custom
	}
	return ""
}

var File_deposito_payload_proto protoreflect.FileDescriptor

var file_deposito_payload_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x86, 0x05, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x42, 0x61, 0x6b, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x42, 0x61, 0x6b, 0x12, 0x3d, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd9, 0x07, 0x0a, 0x10,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x5f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x54, 0x44, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x54, 0x44, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x50, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61,
	0x63, 0x63, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x36, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x76, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x60, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x63, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x6e,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x22,
	0xa0, 0x01, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x70, 0x0a, 0x1a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd4, 0x03, 0x0a, 0x08,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x41, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x08, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x49,
	0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x72, 0x65, 0x76, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0c, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x72, 0x65, 0x76, 0x12, 0x47, 0x0a, 0x0b, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e,
	0x65, 0x77, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x22, 0xc0, 0x01, 0x0a,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x61, 0x63, 0x63,
	0x54, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x63, 0x63, 0x54, 0x44, 0x12, 0x40, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12,
	0x3e, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x22,
	0xb5, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x20, 0x27, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x27, 0x2c, 0x20, 0x27,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x27, 0x2c, 0x20, 0x27, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x27, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x03, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e,
	0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20,
	0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x34, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e,
	0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xca, 0x04, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c,
	0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x2e,
	0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c,
	0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0x34,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x04, 0x0a, 0x17,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e,
	0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f,
	0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x53,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x9a, 0x01, 0x0a, 0x0e,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x6b, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x08, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x22, 0xe0, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x6b, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49,
	0x44, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x6b, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x04, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x5f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41,
	0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64,
	0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69,
	0x72, 0x12, 0x55, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x1a, 0x5a, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x65, 0x6e, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x9a, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x5f, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x1a, 0x45, 0x78, 0x65,
	0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x65, 0x63,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x52, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x52, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x50, 0x52, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x22, 0xba, 0x02, 0x0a, 0x12,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45,
	0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x41, 0x58, 0x49, 0x4d, 0x55, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x41, 0x58, 0x49, 0x4d, 0x55, 0x4d, 0x5f,
	0x52, 0x41, 0x54, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x49, 0x4e, 0x49, 0x4d, 0x55, 0x4d, 0x5f,
	0x52, 0x41, 0x54, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x49, 0x4e, 0x49,
	0x4d, 0x55, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x22, 0x9c, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x22,
	0x0a, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41,
	0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x45, 0x4e,
	0x45, 0x57, 0x41, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52,
	0x49, 0x41, 0x4e, 0x43, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x41, 0x54,
	0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x41,
	0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52,
	0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x22, 0x87, 0x03, 0x0a, 0x13, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x12, 0x2a, 0x0a, 0x10, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x41, 0x55, 0x54, 0x4f,
	0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d,
	0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x43, 0x45, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4b, 0x4f, 0x44,
	0x45, 0x5f, 0x56, 0x4f, 0x55, 0x43, 0x48, 0x45, 0x52, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4b, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x4f, 0x55,
	0x43, 0x48, 0x45, 0x52, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe8, 0x04, 0x0a, 0x1c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x18, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x50, 0x45, 0x4d, 0x42, 0x41, 0x59, 0x41, 0x52, 0x41, 0x4e, 0x5f, 0x50, 0x4f, 0x4b,
	0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x24, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x50, 0x45, 0x4d, 0x42, 0x41, 0x59, 0x52, 0x41, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x4f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x4f, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x55,
	0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x45, 0x55, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x45,
	0x55, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x5f, 0x52,
	0x41, 0x54, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x45, 0x53, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x34, 0x0a, 0x15, 0x4a, 0x41, 0x4e, 0x47,
	0x4b, 0x41, 0x5f, 0x57, 0x41, 0x4b, 0x54, 0x55, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x4f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4a, 0x41, 0x4e, 0x47, 0x4b, 0x41, 0x5f,
	0x57, 0x41, 0x4b, 0x54, 0x55, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x12, 0x26,
	0x0a, 0x0e, 0x50, 0x4f, 0x4b, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x4f, 0x4b, 0x4f, 0x4b, 0x5f, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x48, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x45, 0x4e, 0x45,
	0x57, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x12, 0x2a,
	0x0a, 0x10, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x52, 0x41, 0x4e,
	0x43, 0x48, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x12, 0x24, 0x0a, 0x0d, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x12, 0x2e, 0x0a, 0x12, 0x53, 0x45, 0x43, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x53, 0x45,
	0x43, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52,
	0x22, 0x99, 0x02, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x26, 0x0a, 0x0e,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x55, 0x4d, 0x42,
	0x45, 0x52, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x44, 0x41, 0x54,
	0x45, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x47, 0x4c, 0x5f, 0x4a, 0x41, 0x54, 0x55, 0x48, 0x5f,
	0x54, 0x45, 0x4d, 0x50, 0x4f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x47, 0x4c,
	0x5f, 0x4a, 0x41, 0x54, 0x55, 0x48, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x22, 0xa2, 0x01, 0x0a,
	0x1c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa0, 0x03, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x4d,
	0x4f, 0x55, 0x4e, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x45, 0x42, 0x49,
	0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x45, 0x4c, 0x4c,
	0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x45, 0x4c,
	0x4c, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41,
	0x54, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41,
	0x54, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47,
	0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x52, 0x45, 0x44,
	0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e,
	0x54, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x55, 0x4d, 0x5f, 0x4c, 0x45,
	0x4d, 0x42, 0x41, 0x52, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x55, 0x4d, 0x5f,
	0x4c, 0x45, 0x4d, 0x42, 0x41, 0x52, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x28,
	0x0a, 0x0f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x4f, 0x42, 0x49,
	0x4c, 0x59, 0x45, 0x54, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x4f, 0x42, 0x49,
	0x4c, 0x59, 0x45, 0x54, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x20, 0x0a, 0x0b,
	0x4a, 0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x51, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4a, 0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x51, 0x22, 0x9a,
	0x01, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x19,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x65,
	0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x67, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x4e,
	0x65, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x4e,
	0x65, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x22, 0xdc, 0x02, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x67, 0x6f, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x4e, 0x65,
	0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x6f, 0x64, 0x65, 0x4e, 0x65,
	0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6a, 0x61, 0x6e, 0x67, 0x6b, 0x61, 0x57, 0x61, 0x6b, 0x74, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6a, 0x61, 0x6e, 0x67, 0x6b, 0x61, 0x57, 0x61, 0x6b, 0x74, 0x75, 0x12, 0x2a,
	0x0a, 0x10, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4e, 0x65, 0x67, 0x6f, 0x73, 0x69, 0x61,
	0x73, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61,
	0x6c, 0x4e, 0x65, 0x67, 0x6f, 0x73, 0x69, 0x61, 0x73, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61,
	0x6d, 0x61, 0x50, 0x65, 0x6d, 0x75, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x50, 0x65, 0x6d, 0x75, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x22, 0xb8, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x54, 0x44, 0x50, 0x69, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x12, 0x22, 0x0a,
	0x0c, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x46, 0x45, 0x45, 0x12,
	0x1c, 0x0a, 0x09, 0x4b, 0x55, 0x52, 0x53, 0x5f, 0x4a, 0x55, 0x41, 0x4c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4b, 0x55, 0x52, 0x53, 0x5f, 0x4a, 0x55, 0x41, 0x4c, 0x12, 0x1c, 0x0a,
	0x09, 0x4b, 0x55, 0x52, 0x53, 0x5f, 0x42, 0x45, 0x4c, 0x49, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4b, 0x55, 0x52, 0x53, 0x5f, 0x42, 0x45, 0x4c, 0x49, 0x22, 0xf9, 0x04, 0x0a, 0x17,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x54, 0x44,
	0x50, 0x69, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x2a, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x30, 0x0a, 0x13, 0x42, 0x55, 0x4e,
	0x47, 0x41, 0x5f, 0x42, 0x45, 0x4c, 0x55, 0x4d, 0x5f, 0x44, 0x49, 0x42, 0x41, 0x59, 0x41, 0x52,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x42, 0x55, 0x4e, 0x47, 0x41, 0x5f, 0x42, 0x45,
	0x4c, 0x55, 0x4d, 0x5f, 0x44, 0x49, 0x42, 0x41, 0x59, 0x41, 0x52, 0x12, 0x48, 0x0a, 0x1f, 0x50,
	0x41, 0x4a, 0x41, 0x4b, 0x5f, 0x41, 0x54, 0x41, 0x53, 0x5f, 0x42, 0x55, 0x4e, 0x47, 0x41, 0x5f,
	0x42, 0x55, 0x4c, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x52, 0x4a, 0x41, 0x4c, 0x41, 0x4e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x50, 0x41, 0x4a, 0x41, 0x4b, 0x5f, 0x41, 0x54, 0x41, 0x53,
	0x5f, 0x42, 0x55, 0x4e, 0x47, 0x41, 0x5f, 0x42, 0x55, 0x4c, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x52,
	0x4a, 0x41, 0x4c, 0x41, 0x4e, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x45, 0x4d, 0x42, 0x41, 0x59, 0x41,
	0x52, 0x41, 0x4e, 0x5f, 0x42, 0x55, 0x4e, 0x47, 0x41, 0x5f, 0x4e, 0x45, 0x54, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x45, 0x4d, 0x42, 0x41, 0x59, 0x41, 0x52, 0x41, 0x4e, 0x5f,
	0x42, 0x55, 0x4e, 0x47, 0x41, 0x5f, 0x4e, 0x45, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x45, 0x4e,
	0x44, 0x41, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x44, 0x45, 0x4e, 0x44, 0x41, 0x12,
	0x24, 0x0a, 0x0d, 0x50, 0x45, 0x4c, 0x55, 0x4e, 0x41, 0x53, 0x41, 0x4e, 0x5f, 0x4e, 0x45, 0x54,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x45, 0x4c, 0x55, 0x4e, 0x41, 0x53, 0x41,
	0x4e, 0x5f, 0x4e, 0x45, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x49, 0x41, 0x59, 0x41, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x49, 0x41, 0x59, 0x41, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x45, 0x4c, 0x55, 0x4e, 0x41, 0x53, 0x41, 0x4e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x45, 0x4c, 0x55, 0x4e, 0x41, 0x53, 0x41, 0x4e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x4d, 0x54,
	0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41,
	0x4d, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x45, 0x4e,
	0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x44, 0x4a, 0x55, 0x53, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41,
	0x44, 0x4a, 0x55, 0x53, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x41, 0x58,
	0x5f, 0x41, 0x44, 0x4a, 0x55, 0x53, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x54, 0x41, 0x58, 0x5f, 0x41, 0x44, 0x4a, 0x55, 0x53, 0x54, 0x4d, 0x45, 0x4e,
	0x54, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x32, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x55, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x55, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x43, 0x43,
	0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x43,
	0x43, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x54, 0x44, 0x50, 0x69, 0x6e, 0x61,
	0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x54, 0x44, 0x50, 0x69, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa4, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x67, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x43, 0x49, 0x46, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x22, 0xe3,
	0x06, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x43, 0x49, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x49, 0x4b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4e, 0x49, 0x4b, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x49, 0x46,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x49, 0x46, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x52, 0x41, 0x4e, 0x43, 0x48, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x52, 0x41,
	0x4e, 0x43, 0x48, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x55, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x55, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x50, 0x5f, 0x4e, 0x4f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x48, 0x50, 0x5f, 0x4e, 0x4f, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x33, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x34, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x34, 0x12, 0x18, 0x0a,
	0x07, 0x5a, 0x49, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x5a, 0x49, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x54, 0x5f, 0x4e, 0x4f,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x57, 0x5f, 0x4e, 0x4f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x57,
	0x5f, 0x4e, 0x4f, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x46, 0x5f,
	0x42, 0x49, 0x52, 0x54, 0x48, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x4c, 0x41,
	0x43, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x49, 0x52, 0x54, 0x48, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x49, 0x52, 0x54, 0x48, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x49, 0x52, 0x54,
	0x48, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x45, 0x58, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x53, 0x45, 0x58, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x49, 0x54, 0x49, 0x5a, 0x45, 0x4e, 0x53, 0x48,
	0x49, 0x50, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x49, 0x54, 0x49, 0x5a, 0x45,
	0x4e, 0x53, 0x48, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x4f,
	0x4e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x45, 0x4c, 0x49, 0x47, 0x49, 0x4f,
	0x4e, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4d, 0x41, 0x52, 0x54, 0x49,
	0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x4f, 0x54,
	0x48, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4d, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x50, 0x57, 0x50, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x50, 0x57, 0x50, 0x12,
	0x28, 0x0a, 0x0f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x44, 0x49, 0x4b, 0x41, 0x4e, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x44,
	0x49, 0x4b, 0x41, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x29, 0x0a, 0x0f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x44, 0x49, 0x4b, 0x41, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x18, 0xe5, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x44, 0x49, 0x4b, 0x41, 0x4e, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x22, 0xae, 0x08, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54,
	0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x44, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x54, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57,
	0x41, 0x4c, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x2a, 0x0a,
	0x10, 0x42, 0x55, 0x59, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x41, 0x54,
	0x45, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x55, 0x59, 0x5f, 0x42, 0x4f, 0x4f,
	0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x45, 0x4c,
	0x4c, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x49,
	0x4e, 0x47, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x52, 0x5f, 0x47, 0x4c,
	0x5f, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x49, 0x44, 0x52, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x43, 0x52, 0x5f, 0x47, 0x4c, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x49, 0x44, 0x52, 0x12,
	0x2c, 0x0a, 0x11, 0x43, 0x52, 0x5f, 0x47, 0x4c, 0x5f, 0x49, 0x42, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x53, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x52, 0x5f, 0x47,
	0x4c, 0x5f, 0x49, 0x42, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x53, 0x12, 0x36, 0x0a,
	0x16, 0x57, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x44, 0x5f, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59,
	0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x57,
	0x41, 0x56, 0x45, 0x5f, 0x54, 0x44, 0x5f, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x45, 0x45, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x45, 0x45, 0x5f, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x3e, 0x0a, 0x1a, 0x54, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x54, 0x44, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x46, 0x0a, 0x1e, 0x41, 0x44, 0x4a, 0x55, 0x53, 0x54, 0x5f,
	0x57, 0x49, 0x54, 0x48, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x58,
	0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x41,
	0x44, 0x4a, 0x55, 0x53, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x49,
	0x4e, 0x47, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x26, 0x0a,
	0x0e, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x52,
	0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x4e, 0x0a, 0x22, 0x50,
	0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x54, 0x41, 0x53, 0x5f, 0x54, 0x45, 0x52, 0x4d,
	0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53,
	0x54, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x22, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59,
	0x5f, 0x41, 0x54, 0x41, 0x53, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x12, 0x26, 0x0a, 0x0e, 0x45,
	0x46, 0x46, 0x45, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x12,
	0x26, 0x0a, 0x0e, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x52, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x53, 0x31, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x53, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x53, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x53, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x45, 0x4d,
	0x41, 0x52, 0x4b, 0x53, 0x33, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x45, 0x4d,
	0x41, 0x52, 0x4b, 0x53, 0x33, 0x22, 0x8b, 0x02, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x77, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x52, 0x41, 0x4e, 0x43, 0x4f, 0x44, 0x45, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x43, 0x4f, 0x44, 0x45, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x4a,
	0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x51, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4a, 0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x51, 0x31, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x45, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x54, 0x45, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x41, 0x4c, 0x22, 0x98, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x77, 0x61, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d,
	0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x54, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x45, 0x4d,
	0x41, 0x52, 0x4b, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x45, 0x4d, 0x41,
	0x52, 0x4b, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x22, 0xff, 0x0a,
	0x0a, 0x10, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x54, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x32, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x32, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x54,
	0x5f, 0x4e, 0x4f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x43, 0x43, 0x54, 0x5f,
	0x4e, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x55,
	0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x55, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x43, 0x43, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x44,
	0x5f, 0x4e, 0x4f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x44, 0x5f, 0x4e, 0x4f,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x49, 0x4c, 0x59,
	0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x49, 0x4c,
	0x59, 0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x50, 0x45, 0x4e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x4f, 0x50, 0x45, 0x4e, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x45, 0x52, 0x4d, 0x5f, 0x4f, 0x46, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x54, 0x45, 0x52, 0x4d, 0x5f, 0x4f, 0x46, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54,
	0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4c, 0x41, 0x53,
	0x54, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12, 0x24,
	0x0a, 0x0d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x41, 0x4c, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x5f, 0x42, 0x41, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x41, 0x54, 0x55, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4d, 0x41, 0x54,
	0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x52,
	0x49, 0x4e, 0x43, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x41, 0x4d, 0x54, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x50, 0x52, 0x49, 0x4e, 0x43, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x41, 0x4d, 0x54,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x41, 0x54, 0x45, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x41, 0x54, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x49, 0x44, 0x5f, 0x41, 0x4d, 0x54,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x49, 0x44, 0x5f, 0x41, 0x4d, 0x54,
	0x12, 0x2a, 0x0a, 0x10, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x45, 0x53, 0x54, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x12, 0x28, 0x0a, 0x0f,
	0x41, 0x43, 0x43, 0x52, 0x55, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x43, 0x43, 0x52, 0x55, 0x45, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x12, 0x31, 0x0a, 0x13, 0x54, 0x41, 0x58, 0x5f, 0x41, 0x43,
	0x43, 0x52, 0x55, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x54, 0x41, 0x58, 0x5f, 0x20, 0x41, 0x43, 0x43, 0x52, 0x55, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x4f, 0x4c,
	0x44, 0x5f, 0x41, 0x4d, 0x54, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x4f, 0x4c,
	0x44, 0x5f, 0x41, 0x4d, 0x54, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x54, 0x4d, 0x54, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x42, 0x4f, 0x4f, 0x4b, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x54,
	0x4d, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x42, 0x4f, 0x4f, 0x4b, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x42, 0x41, 0x4c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x46, 0x4c, 0x4f, 0x41, 0x54, 0x5f, 0x42, 0x41, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x52, 0x4f,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x52, 0x4f, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x4d, 0x54, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x4d, 0x54, 0x12, 0x2a, 0x0a,
	0x10, 0x54, 0x45, 0x52, 0x4d, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x54, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54, 0x45, 0x52, 0x4d, 0x5f, 0x54, 0x4f,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x12, 0x2c, 0x0a, 0x11, 0x57, 0x49, 0x54,
	0x48, 0x48, 0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x4f, 0x44, 0x41, 0x59, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x57, 0x49, 0x54, 0x48, 0x48, 0x4f, 0x4c, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x54, 0x4f, 0x44, 0x41, 0x59, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x45, 0x44, 0x45, 0x52,
	0x41, 0x4c, 0x5f, 0x57, 0x48, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x46, 0x45, 0x44, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x57, 0x48, 0x5f, 0x54, 0x45, 0x52,
	0x4d, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x54, 0x54, 0x44,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f,
	0x54, 0x54, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41,
	0x43, 0x43, 0x5f, 0x49, 0x4e, 0x54, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x45,
	0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x49, 0x4e, 0x54, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x54, 0x54, 0x44, 0x5f, 0x50, 0x43, 0x54,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f,
	0x54, 0x54, 0x44, 0x5f, 0x50, 0x43, 0x54, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x45, 0x4e, 0x41, 0x4c,
	0x54, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x49, 0x4e, 0x54, 0x5f, 0x50, 0x43, 0x54, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x41, 0x43,
	0x43, 0x5f, 0x49, 0x4e, 0x54, 0x5f, 0x50, 0x43, 0x54, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x45, 0x4e,
	0x41, 0x4c, 0x54, 0x59, 0x5f, 0x46, 0x52, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x5f, 0x46, 0x52, 0x5f, 0x48,
	0x4f, 0x53, 0x54, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x41, 0x58, 0x5f, 0x44, 0x45, 0x44, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x41, 0x58, 0x5f,
	0x44, 0x45, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x45, 0x4e,
	0x4f, 0x52, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x45, 0x4e, 0x4f, 0x52, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x45, 0x4e, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x45, 0x4e, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x22,
	0x98, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x54, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x54, 0x44, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x44, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x91, 0x04, 0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77,
	0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x76, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x43, 0x75, 0x72, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x43, 0x75, 0x72,
	0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6c,
	0x43, 0x75, 0x72, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0f,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x40, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x2f, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x22, 0x3e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3f, 0x0a, 0x09, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xf0, 0x02, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x05, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x61, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x75, 0x61, 0x49, 0x44, 0x22, 0xb8, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc7, 0x03, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x3b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x40, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x65, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x65, 0x70, 0x22, 0xfa,
	0x0a, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x55,
	0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x52, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41,
	0x4b, 0x45, 0x52, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x55,
	0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x52, 0x12,
	0x2c, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x53, 0x45, 0x52,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x52, 0x12, 0x2c, 0x0a,
	0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x52, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x45,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12, 0x2c, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x4f, 0x52,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x44, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4e, 0x43, 0x49, 0x50, 0x41, 0x4c, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4e,
	0x43, 0x49, 0x50, 0x41, 0x4c, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53,
	0x54, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e,
	0x43, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x4d, 0x4f, 0x55, 0x4e,
	0x54, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x4f, 0x44, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x41, 0x54,
	0x45, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x45, 0x4e, 0x4f, 0x52, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x45, 0x4e, 0x4f, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x4f, 0x55, 0x43, 0x48,
	0x45, 0x52, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x4f, 0x55, 0x43, 0x48, 0x45,
	0x52, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x50, 0x45,
	0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x50,
	0x45, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x57, 0x49, 0x54, 0x48, 0x44,
	0x52, 0x41, 0x57, 0x5f, 0x41, 0x54, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x57, 0x49,
	0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x41, 0x54, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x4f, 0x4d,
	0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x4f, 0x44, 0x55, 0x4c, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x2a, 0x80, 0x01, 0x0a, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10,
	0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07, 0x2a, 0x49,
	0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c,
	0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x2a, 0x22, 0x0a, 0x0d, 0x53, 0x6f, 0x72,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45,
	0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deposito_payload_proto_rawDescOnce sync.Once
	file_deposito_payload_proto_rawDescData = file_deposito_payload_proto_rawDesc
)

func file_deposito_payload_proto_rawDescGZIP() []byte {
	file_deposito_payload_proto_rawDescOnce.Do(func() {
		file_deposito_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_deposito_payload_proto_rawDescData)
	})
	return file_deposito_payload_proto_rawDescData
}

var file_deposito_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_deposito_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_deposito_payload_proto_goTypes = []interface{}{
	(TaskStatus)(0),                                  // 0: deposito.service.v1.TaskStatus
	(TaskStep)(0),                                    // 1: deposito.service.v1.TaskStep
	(SortDirection)(0),                               // 2: deposito.service.v1.SortDirection
	(FileTaskListRequest_Formats)(0),                 // 3: deposito.service.v1.FileTaskListRequest.Formats
	(*PaginationResponse)(nil),                       // 4: deposito.service.v1.PaginationResponse
	(*Task)(nil),                                     // 5: deposito.service.v1.Task
	(*DepositoDataTask)(nil),                         // 6: deposito.service.v1.DepositoDataTask
	(*ManageDeposit)(nil),                            // 7: deposito.service.v1.ManageDeposit
	(*ManageDepositTaskRequest)(nil),                 // 8: deposito.service.v1.ManageDepositTaskRequest
	(*WithdrawDepositTaskRequest)(nil),               // 9: deposito.service.v1.WithdrawDepositTaskRequest
	(*CreateDepositoTaskRequest)(nil),                // 10: deposito.service.v1.CreateDepositoTaskRequest
	(*TaskData)(nil),                                 // 11: deposito.service.v1.TaskData
	(*Account)(nil),                                  // 12: deposito.service.v1.account
	(*Accounts)(nil),                                 // 13: deposito.service.v1.accounts
	(*Company)(nil),                                  // 14: deposito.service.v1.Company
	(*TaskActionRequest)(nil),                        // 15: deposito.service.v1.TaskActionRequest
	(*TaskActionResponse)(nil),                       // 16: deposito.service.v1.TaskActionResponse
	(*CreateDepositoTaskResponse)(nil),               // 17: deposito.service.v1.CreateDepositoTaskResponse
	(*DepositoListTaskRequest)(nil),                  // 18: deposito.service.v1.DepositoListTaskRequest
	(*DepositoListTaskResponse)(nil),                 // 19: deposito.service.v1.DepositoListTaskResponse
	(*FileTaskListRequest)(nil),                      // 20: deposito.service.v1.FileTaskListRequest
	(*GetDepositoTaskByIDRequest)(nil),               // 21: deposito.service.v1.GetDepositoTaskByIDRequest
	(*GetDepositoTaskByIDResponse)(nil),              // 22: deposito.service.v1.GetDepositoTaskByIDResponse
	(*DepositoDataListRequest)(nil),                  // 23: deposito.service.v1.DepositoDataListRequest
	(*DepositoDataks)(nil),                           // 24: deposito.service.v1.DepositoDataks
	(*DepositoDataListResponse)(nil),                 // 25: deposito.service.v1.DepositoDataListResponse
	(*DepositoDataDetailRequest)(nil),                // 26: deposito.service.v1.DepositoDataDetailRequest
	(*DepositoDataDetailResponse)(nil),               // 27: deposito.service.v1.DepositoDataDetailResponse
	(*CreateDepositoRequest)(nil),                    // 28: deposito.service.v1.CreateDepositoRequest
	(*CreateDepositoResponse)(nil),                   // 29: deposito.service.v1.CreateDepositoResponse
	(*GetProductDepositoRequest)(nil),                // 30: deposito.service.v1.GetProductDepositoRequest
	(*GetProductDepositoRespons)(nil),                // 31: deposito.service.v1.GetProductDepositoRespons
	(*ExecTransactionDepositoReq)(nil),               // 32: deposito.service.v1.ExecTransactionDepositoReq
	(*ExecTransactionDepositoRes)(nil),               // 33: deposito.service.v1.ExecTransactionDepositoRes
	(*DepositInquiryRateRequest)(nil),                // 34: deposito.service.v1.DepositInquiryRateRequest
	(*DepositInquiryRate)(nil),                       // 35: deposito.service.v1.DepositInquiryRate
	(*DepositInquiryRateRespons)(nil),                // 36: deposito.service.v1.DepositInquiryRateRespons
	(*DepositoMaintananceRequest)(nil),               // 37: deposito.service.v1.DepositoMaintananceRequest
	(*DepositoMaintanance)(nil),                      // 38: deposito.service.v1.DepositoMaintanance
	(*DepositoMaintananceRespons)(nil),               // 39: deposito.service.v1.DepositoMaintananceRespons
	(*DepositoCreateAccountRequest)(nil),             // 40: deposito.service.v1.DepositoCreateAccountRequest
	(*DepositoCreateAccount)(nil),                    // 41: deposito.service.v1.DepositoCreateAccount
	(*DepositoCreateAccountRespons)(nil),             // 42: deposito.service.v1.DepositoCreateAccountRespons
	(*DepositoPlacementRequest)(nil),                 // 43: deposito.service.v1.DepositoPlacementRequest
	(*DepositoPlacement)(nil),                        // 44: deposito.service.v1.DepositoPlacement
	(*DepositoPlacementRespons)(nil),                 // 45: deposito.service.v1.DepositoPlacementRespons
	(*DepositVoucherNegoRequest)(nil),                // 46: deposito.service.v1.DepositVoucherNegoRequest
	(*DepositInquiryRateNegoRequest)(nil),            // 47: deposito.service.v1.DepositInquiryRateNegoRequest
	(*DepositInquiryRateNego)(nil),                   // 48: deposito.service.v1.DepositInquiryRateNego
	(*DepositInquiryTDPinaltiRequest)(nil),           // 49: deposito.service.v1.DepositInquiryTDPinaltiRequest
	(*DepositInquiryTDPinalti)(nil),                  // 50: deposito.service.v1.DepositInquiryTDPinalti
	(*DepositInquiryTDPinaltiResponse)(nil),          // 51: deposito.service.v1.DepositInquiryTDPinaltiResponse
	(*DepositInquiryRateNegoRespons)(nil),            // 52: deposito.service.v1.DepositInquiryRateNegoRespons
	(*DepositInquiryCIFRequest)(nil),                 // 53: deposito.service.v1.DepositInquiryCIFRequest
	(*DepositInquiryCIFRespons)(nil),                 // 54: deposito.service.v1.DepositInquiryCIFRespons
	(*DepositWithdrawRequest)(nil),                   // 55: deposito.service.v1.DepositWithdrawRequest
	(*DepositoWithdrwal)(nil),                        // 56: deposito.service.v1.DepositoWithdrwal
	(*DepositWithdrawRespons)(nil),                   // 57: deposito.service.v1.DepositWithdrawRespons
	(*DepositInquiryTDRequest)(nil),                  // 58: deposito.service.v1.DepositInquiryTDRequest
	(*DepositInquiryTD)(nil),                         // 59: deposito.service.v1.DepositInquiryTD
	(*DepositInquiryTDRespons)(nil),                  // 60: deposito.service.v1.DepositInquiryTDRespons
	(*Participant)(nil),                              // 61: deposito.service.v1.Participant
	(*Participants)(nil),                             // 62: deposito.service.v1.Participants
	(*Flow)(nil),                                     // 63: deposito.service.v1.Flow
	(*WorkflowRecords)(nil),                          // 64: deposito.service.v1.WorkflowRecords
	(*UserData)(nil),                                 // 65: deposito.service.v1.UserData
	(*MakerData)(nil),                                // 66: deposito.service.v1.MakerData
	(*WorkflowHeader)(nil),                           // 67: deposito.service.v1.WorkflowHeader
	(*RejectedBy)(nil),                               // 68: deposito.service.v1.RejectedBy
	(*WorkflowPayload)(nil),                          // 69: deposito.service.v1.WorkflowPayload
	(*WorkflowDataStatus)(nil),                       // 70: deposito.service.v1.WorkflowDataStatus
	(*DepositoNotificationData)(nil),                 // 71: deposito.service.v1.DepositoNotificationData
	(*DepositoDataListRequest_DataListFilter)(nil),   // 72: deposito.service.v1.DepositoDataListRequest.DataListFilter
	(*GetProductDepositoRequest_DataListFilter)(nil), // 73: deposito.service.v1.GetProductDepositoRequest.DataListFilter
	(*timestamppb.Timestamp)(nil),                    // 74: google.protobuf.Timestamp
	(*Deposito)(nil),                                 // 75: deposito.service.v1.Deposito
	(*Deposito_Product)(nil),                         // 76: deposito.service.v1.Deposito_Product
}
var file_deposito_payload_proto_depIdxs = []int32{
	74, // 0: deposito.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	74, // 1: deposito.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	74, // 2: deposito.service.v1.DepositoDataTask.withdrawAt:type_name -> google.protobuf.Timestamp
	74, // 3: deposito.service.v1.DepositoDataTask.openDate:type_name -> google.protobuf.Timestamp
	74, // 4: deposito.service.v1.DepositoDataTask.lastRenewalDate:type_name -> google.protobuf.Timestamp
	74, // 5: deposito.service.v1.DepositoDataTask.createdAt:type_name -> google.protobuf.Timestamp
	74, // 6: deposito.service.v1.DepositoDataTask.updatedAt:type_name -> google.protobuf.Timestamp
	7,  // 7: deposito.service.v1.ManageDepositTaskRequest.data:type_name -> deposito.service.v1.ManageDeposit
	6,  // 8: deposito.service.v1.CreateDepositoTaskRequest.data:type_name -> deposito.service.v1.DepositoDataTask
	5,  // 9: deposito.service.v1.TaskData.task:type_name -> deposito.service.v1.Task
	6,  // 10: deposito.service.v1.TaskData.Deposito:type_name -> deposito.service.v1.DepositoDataTask
	14, // 11: deposito.service.v1.TaskData.company:type_name -> deposito.service.v1.Company
	13, // 12: deposito.service.v1.TaskData.account:type_name -> deposito.service.v1.accounts
	70, // 13: deposito.service.v1.TaskData.workflowHistory:type_name -> deposito.service.v1.WorkflowDataStatus
	6,  // 14: deposito.service.v1.TaskData.DepositoPrev:type_name -> deposito.service.v1.DepositoDataTask
	6,  // 15: deposito.service.v1.TaskData.DepositoNew:type_name -> deposito.service.v1.DepositoDataTask
	12, // 16: deposito.service.v1.accounts.accTD:type_name -> deposito.service.v1.account
	12, // 17: deposito.service.v1.accounts.accPrincipal:type_name -> deposito.service.v1.account
	12, // 18: deposito.service.v1.accounts.accInterest:type_name -> deposito.service.v1.account
	11, // 19: deposito.service.v1.TaskActionResponse.data:type_name -> deposito.service.v1.TaskData
	11, // 20: deposito.service.v1.CreateDepositoTaskResponse.data:type_name -> deposito.service.v1.TaskData
	0,  // 21: deposito.service.v1.DepositoListTaskRequest.status:type_name -> deposito.service.v1.TaskStatus
	1,  // 22: deposito.service.v1.DepositoListTaskRequest.step:type_name -> deposito.service.v1.TaskStep
	2,  // 23: deposito.service.v1.DepositoListTaskRequest.dir:type_name -> deposito.service.v1.SortDirection
	11, // 24: deposito.service.v1.DepositoListTaskResponse.data:type_name -> deposito.service.v1.TaskData
	4,  // 25: deposito.service.v1.DepositoListTaskResponse.pagination:type_name -> deposito.service.v1.PaginationResponse
	0,  // 26: deposito.service.v1.FileTaskListRequest.status:type_name -> deposito.service.v1.TaskStatus
	1,  // 27: deposito.service.v1.FileTaskListRequest.step:type_name -> deposito.service.v1.TaskStep
	2,  // 28: deposito.service.v1.FileTaskListRequest.dir:type_name -> deposito.service.v1.SortDirection
	3,  // 29: deposito.service.v1.FileTaskListRequest.fileFormat:type_name -> deposito.service.v1.FileTaskListRequest.Formats
	11, // 30: deposito.service.v1.GetDepositoTaskByIDResponse.data:type_name -> deposito.service.v1.TaskData
	2,  // 31: deposito.service.v1.DepositoDataListRequest.dir:type_name -> deposito.service.v1.SortDirection
	72, // 32: deposito.service.v1.DepositoDataListRequest.filter:type_name -> deposito.service.v1.DepositoDataListRequest.DataListFilter
	75, // 33: deposito.service.v1.DepositoDataks.deposito:type_name -> deposito.service.v1.Deposito
	13, // 34: deposito.service.v1.DepositoDataks.accounts:type_name -> deposito.service.v1.accounts
	24, // 35: deposito.service.v1.DepositoDataListResponse.data:type_name -> deposito.service.v1.DepositoDataks
	4,  // 36: deposito.service.v1.DepositoDataListResponse.pagination:type_name -> deposito.service.v1.PaginationResponse
	24, // 37: deposito.service.v1.DepositoDataDetailResponse.data:type_name -> deposito.service.v1.DepositoDataks
	11, // 38: deposito.service.v1.CreateDepositoRequest.data:type_name -> deposito.service.v1.TaskData
	75, // 39: deposito.service.v1.CreateDepositoResponse.data:type_name -> deposito.service.v1.Deposito
	76, // 40: deposito.service.v1.GetProductDepositoRequest.product:type_name -> deposito.service.v1.Deposito_Product
	2,  // 41: deposito.service.v1.GetProductDepositoRequest.dir:type_name -> deposito.service.v1.SortDirection
	73, // 42: deposito.service.v1.GetProductDepositoRequest.filter:type_name -> deposito.service.v1.GetProductDepositoRequest.DataListFilter
	76, // 43: deposito.service.v1.GetProductDepositoRespons.data:type_name -> deposito.service.v1.Deposito_Product
	35, // 44: deposito.service.v1.DepositInquiryRateRespons.data:type_name -> deposito.service.v1.DepositInquiryRate
	38, // 45: deposito.service.v1.DepositoMaintananceRespons.data:type_name -> deposito.service.v1.DepositoMaintanance
	41, // 46: deposito.service.v1.DepositoCreateAccountRespons.data:type_name -> deposito.service.v1.DepositoCreateAccount
	44, // 47: deposito.service.v1.DepositoPlacementRespons.data:type_name -> deposito.service.v1.DepositoPlacement
	50, // 48: deposito.service.v1.DepositInquiryTDPinaltiResponse.data:type_name -> deposito.service.v1.DepositInquiryTDPinalti
	48, // 49: deposito.service.v1.DepositInquiryRateNegoRespons.data:type_name -> deposito.service.v1.DepositInquiryRateNego
	56, // 50: deposito.service.v1.DepositWithdrawRespons.data:type_name -> deposito.service.v1.DepositoWithdrwal
	59, // 51: deposito.service.v1.DepositInquiryTDRespons.data:type_name -> deposito.service.v1.DepositInquiryTD
	74, // 52: deposito.service.v1.Participant.approvedAt:type_name -> google.protobuf.Timestamp
	61, // 53: deposito.service.v1.Participants.participants:type_name -> deposito.service.v1.Participant
	62, // 54: deposito.service.v1.Flow.verifier:type_name -> deposito.service.v1.Participants
	62, // 55: deposito.service.v1.Flow.approver:type_name -> deposito.service.v1.Participants
	62, // 56: deposito.service.v1.Flow.releaser:type_name -> deposito.service.v1.Participants
	74, // 57: deposito.service.v1.Flow.completedAt:type_name -> google.protobuf.Timestamp
	74, // 58: deposito.service.v1.WorkflowRecords.lastUpdatedAt:type_name -> google.protobuf.Timestamp
	63, // 59: deposito.service.v1.WorkflowRecords.flows:type_name -> deposito.service.v1.Flow
	66, // 60: deposito.service.v1.WorkflowHeader.maker:type_name -> deposito.service.v1.MakerData
	74, // 61: deposito.service.v1.RejectedBy.rejectedAt:type_name -> google.protobuf.Timestamp
	67, // 62: deposito.service.v1.WorkflowPayload.header:type_name -> deposito.service.v1.WorkflowHeader
	64, // 63: deposito.service.v1.WorkflowPayload.records:type_name -> deposito.service.v1.WorkflowRecords
	65, // 64: deposito.service.v1.WorkflowPayload.createdBy:type_name -> deposito.service.v1.UserData
	74, // 65: deposito.service.v1.WorkflowPayload.createdAt:type_name -> google.protobuf.Timestamp
	69, // 66: deposito.service.v1.WorkflowDataStatus.workflow:type_name -> deposito.service.v1.WorkflowPayload
	67, // [67:67] is the sub-list for method output_type
	67, // [67:67] is the sub-list for method input_type
	67, // [67:67] is the sub-list for extension type_name
	67, // [67:67] is the sub-list for extension extendee
	0,  // [0:67] is the sub-list for field type_name
}

func init() { file_deposito_payload_proto_init() }
func file_deposito_payload_proto_init() {
	if File_deposito_payload_proto != nil {
		return
	}
	file_deposito_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_deposito_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageDepositTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawDepositTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoListTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoListTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTaskListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositoTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositoTaskByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductDepositoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductDepositoRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecTransactionDepositoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecTransactionDepositoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoMaintananceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoMaintanance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoMaintananceRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoCreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoCreateAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoCreateAccountRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoPlacementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoPlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoPlacementRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositVoucherNegoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateNegoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateNego); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryTDPinaltiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryTDPinalti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryTDPinaltiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateNegoRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryCIFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryCIFRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoWithdrwal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositWithdrawRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryTDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryTD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryTDRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectedBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowDataStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoNotificationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoDataListRequest_DataListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deposito_payload_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductDepositoRequest_DataListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deposito_payload_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_deposito_payload_proto_goTypes,
		DependencyIndexes: file_deposito_payload_proto_depIdxs,
		EnumInfos:         file_deposito_payload_proto_enumTypes,
		MessageInfos:      file_deposito_payload_proto_msgTypes,
	}.Build()
	File_deposito_payload_proto = out.File
	file_deposito_payload_proto_rawDesc = nil
	file_deposito_payload_proto_goTypes = nil
	file_deposito_payload_proto_depIdxs = nil
}
