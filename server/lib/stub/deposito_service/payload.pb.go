// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_AllStatus        TaskStatus = 0
	TaskStatus_Pending          TaskStatus = 1
	TaskStatus_Draft            TaskStatus = 2
	TaskStatus_Returned         TaskStatus = 3
	TaskStatus_Approved         TaskStatus = 4
	TaskStatus_Rejected         TaskStatus = 5
	TaskStatus_RequestForDelete TaskStatus = 6
	TaskStatus_Deleted          TaskStatus = 7
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "RequestForDelete",
		7: "Deleted",
	}
	TaskStatus_value = map[string]int32{
		"AllStatus":        0,
		"Pending":          1,
		"Draft":            2,
		"Returned":         3,
		"Approved":         4,
		"Rejected":         5,
		"RequestForDelete": 6,
		"Deleted":          7,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_payload_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{0}
}

type TaskStep int32

const (
	TaskStep_AllStep  TaskStep = 0
	TaskStep_Maker    TaskStep = 1
	TaskStep_Checker  TaskStep = 2
	TaskStep_Signer   TaskStep = 3
	TaskStep_Releaser TaskStep = 4
)

// Enum value maps for TaskStep.
var (
	TaskStep_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	TaskStep_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x TaskStep) Enum() *TaskStep {
	p := new(TaskStep)
	*p = x
	return p
}

func (x TaskStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStep) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_proto_enumTypes[1].Descriptor()
}

func (TaskStep) Type() protoreflect.EnumType {
	return &file_payload_proto_enumTypes[1]
}

func (x TaskStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStep.Descriptor instead.
func (TaskStep) EnumDescriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{1}
}

type SortDirection int32

const (
	SortDirection_DESC SortDirection = 0
	SortDirection_ASC  SortDirection = 1
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	SortDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_proto_enumTypes[2].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_payload_proto_enumTypes[2]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{2}
}

type FileTaskListRequest_Formats int32

const (
	FileTaskListRequest_null FileTaskListRequest_Formats = 0
	FileTaskListRequest_pdf  FileTaskListRequest_Formats = 1
	FileTaskListRequest_xls  FileTaskListRequest_Formats = 2
	FileTaskListRequest_csv  FileTaskListRequest_Formats = 3
)

// Enum value maps for FileTaskListRequest_Formats.
var (
	FileTaskListRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileTaskListRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileTaskListRequest_Formats) Enum() *FileTaskListRequest_Formats {
	p := new(FileTaskListRequest_Formats)
	*p = x
	return p
}

func (x FileTaskListRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileTaskListRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_proto_enumTypes[3].Descriptor()
}

func (FileTaskListRequest_Formats) Type() protoreflect.EnumType {
	return &file_payload_proto_enumTypes[3]
}

func (x FileTaskListRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileTaskListRequest_Formats.Descriptor instead.
func (FileTaskListRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{10, 0}
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,11,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,12,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	Workflow           string                 `protobuf:"bytes,14,opt,name=workflow,proto3" json:"workflow,omitempty"`
	CompanyID          uint64                 `protobuf:"varint,15,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *Task) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Task) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *Task) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateDepositoTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Deposito `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64    `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool      `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateDepositoTaskRequest) Reset() {
	*x = CreateDepositoTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoTaskRequest) ProtoMessage() {}

func (x *CreateDepositoTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateDepositoTaskRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDepositoTaskRequest) GetData() *Deposito {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateDepositoTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateDepositoTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type TaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task     *Task     `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Deposito *Deposito `protobuf:"bytes,2,opt,name=Deposito,proto3" json:"Deposito,omitempty"`
	Company  *Company  `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *TaskData) Reset() {
	*x = TaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskData) ProtoMessage() {}

func (x *TaskData) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskData.ProtoReflect.Descriptor instead.
func (*TaskData) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{3}
}

func (x *TaskData) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskData) GetDeposito() *Deposito {
	if x != nil {
		return x.Deposito
	}
	return nil
}

func (x *TaskData) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID          uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName        string `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	HoldingID          uint64 `protobuf:"varint,3,opt,name=holdingID,proto3" json:"holdingID,omitempty"`
	GroupName          string `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	HoldingCompanyName string `protobuf:"bytes,5,opt,name=holdingCompanyName,proto3" json:"holdingCompanyName,omitempty"` //  string subsidiaries = 6;
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{4}
}

func (x *Company) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Company) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Company) GetHoldingID() uint64 {
	if x != nil {
		return x.HoldingID
	}
	return 0
}

func (x *Company) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Company) GetHoldingCompanyName() string {
	if x != nil {
		return x.HoldingCompanyName
	}
	return ""
}

type CreateDepositoTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepositoTaskResponse) Reset() {
	*x = CreateDepositoTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoTaskResponse) ProtoMessage() {}

func (x *CreateDepositoTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateDepositoTaskResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDepositoTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateDepositoTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateDepositoTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDepositoTaskResponse) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID  uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Action  string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Reasons string `protobuf:"bytes,4,opt,name=reasons,proto3" json:"reasons,omitempty"`
}

func (x *TaskActionRequest) Reset() {
	*x = TaskActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActionRequest) ProtoMessage() {}

func (x *TaskActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActionRequest.ProtoReflect.Descriptor instead.
func (*TaskActionRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{6}
}

func (x *TaskActionRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskActionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *TaskActionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TaskActionRequest) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

type TaskActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TaskActionResponse) Reset() {
	*x = TaskActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActionResponse) ProtoMessage() {}

func (x *TaskActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActionResponse.ProtoReflect.Descriptor instead.
func (*TaskActionResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{7}
}

func (x *TaskActionResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *TaskActionResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskActionResponse) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoListTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     TaskStatus    `protobuf:"varint,1,opt,name=status,proto3,enum=deposito.service.v1.TaskStatus" json:"status,omitempty"`
	Step       TaskStep      `protobuf:"varint,2,opt,name=step,proto3,enum=deposito.service.v1.TaskStep" json:"step,omitempty"`
	Limit      int32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32         `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string        `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        SortDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter     string        `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query      string        `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	MyTaskOnly bool          `protobuf:"varint,9,opt,name=myTaskOnly,proto3" json:"myTaskOnly,omitempty"`
}

func (x *DepositoListTaskRequest) Reset() {
	*x = DepositoListTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoListTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoListTaskRequest) ProtoMessage() {}

func (x *DepositoListTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoListTaskRequest.ProtoReflect.Descriptor instead.
func (*DepositoListTaskRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{8}
}

func (x *DepositoListTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_AllStatus
}

func (x *DepositoListTaskRequest) GetStep() TaskStep {
	if x != nil {
		return x.Step
	}
	return TaskStep_AllStep
}

func (x *DepositoListTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DepositoListTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DepositoListTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DepositoListTaskRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *DepositoListTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DepositoListTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DepositoListTaskRequest) GetMyTaskOnly() bool {
	if x != nil {
		return x.MyTaskOnly
	}
	return false
}

type DepositoListTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*TaskData         `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *DepositoListTaskResponse) Reset() {
	*x = DepositoListTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoListTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoListTaskResponse) ProtoMessage() {}

func (x *DepositoListTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoListTaskResponse.ProtoReflect.Descriptor instead.
func (*DepositoListTaskResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{9}
}

func (x *DepositoListTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoListTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoListTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoListTaskResponse) GetData() []*TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DepositoListTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type FileTaskListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     TaskStatus                  `protobuf:"varint,1,opt,name=status,proto3,enum=deposito.service.v1.TaskStatus" json:"status,omitempty"`
	Step       TaskStep                    `protobuf:"varint,2,opt,name=step,proto3,enum=deposito.service.v1.TaskStep" json:"step,omitempty"`
	Limit      int32                       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                       `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                      `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        SortDirection               `protobuf:"varint,6,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter     string                      `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                      `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	MyTaskOnly bool                        `protobuf:"varint,9,opt,name=myTaskOnly,proto3" json:"myTaskOnly,omitempty"`
	FileFormat FileTaskListRequest_Formats `protobuf:"varint,25,opt,name=fileFormat,proto3,enum=deposito.service.v1.FileTaskListRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *FileTaskListRequest) Reset() {
	*x = FileTaskListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTaskListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTaskListRequest) ProtoMessage() {}

func (x *FileTaskListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTaskListRequest.ProtoReflect.Descriptor instead.
func (*FileTaskListRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{10}
}

func (x *FileTaskListRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_AllStatus
}

func (x *FileTaskListRequest) GetStep() TaskStep {
	if x != nil {
		return x.Step
	}
	return TaskStep_AllStep
}

func (x *FileTaskListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileTaskListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileTaskListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *FileTaskListRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *FileTaskListRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FileTaskListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FileTaskListRequest) GetMyTaskOnly() bool {
	if x != nil {
		return x.MyTaskOnly
	}
	return false
}

func (x *FileTaskListRequest) GetFileFormat() FileTaskListRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileTaskListRequest_null
}

type GetDepositoTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetDepositoTaskByIDRequest) Reset() {
	*x = GetDepositoTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositoTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositoTaskByIDRequest) ProtoMessage() {}

func (x *GetDepositoTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositoTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDepositoTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{11}
}

func (x *GetDepositoTaskByIDRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetDepositoTaskByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDepositoTaskByIDResponse) Reset() {
	*x = GetDepositoTaskByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositoTaskByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositoTaskByIDResponse) ProtoMessage() {}

func (x *GetDepositoTaskByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositoTaskByIDResponse.ProtoReflect.Descriptor instead.
func (*GetDepositoTaskByIDResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{12}
}

func (x *GetDepositoTaskByIDResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetDepositoTaskByIDResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDepositoTaskByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDepositoTaskByIDResponse) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32                           `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                          `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    SortDirection                   `protobuf:"varint,4,opt,name=dir,proto3,enum=deposito.service.v1.SortDirection" json:"dir,omitempty"`
	Filter *DataListRequest_DataListFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	Search string                          `protobuf:"bytes,6,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *DataListRequest) Reset() {
	*x = DataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataListRequest) ProtoMessage() {}

func (x *DataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataListRequest.ProtoReflect.Descriptor instead.
func (*DataListRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{13}
}

func (x *DataListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DataListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DataListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DataListRequest) GetDir() SortDirection {
	if x != nil {
		return x.Dir
	}
	return SortDirection_DESC
}

func (x *DataListRequest) GetFilter() *DataListRequest_DataListFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DataListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type DataListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*DepositoData     `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *DataListResponse) Reset() {
	*x = DataListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataListResponse) ProtoMessage() {}

func (x *DataListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataListResponse.ProtoReflect.Descriptor instead.
func (*DataListResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{14}
}

func (x *DataListResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DataListResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DataListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DataListResponse) GetData() []*DepositoData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type DataDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID uint64 `protobuf:"varint,1,opt,name=dataID,proto3" json:"dataID,omitempty"`
}

func (x *DataDetailRequest) Reset() {
	*x = DataDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataDetailRequest) ProtoMessage() {}

func (x *DataDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataDetailRequest.ProtoReflect.Descriptor instead.
func (*DataDetailRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{15}
}

func (x *DataDetailRequest) GetDataID() uint64 {
	if x != nil {
		return x.DataID
	}
	return 0
}

type DataDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool          `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataDetailResponse) Reset() {
	*x = DataDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataDetailResponse) ProtoMessage() {}

func (x *DataDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataDetailResponse.ProtoReflect.Descriptor instead.
func (*DataDetailResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{16}
}

func (x *DataDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DataDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DataDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DataDetailResponse) GetData() *DepositoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDepositoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TaskData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepositoRequest) Reset() {
	*x = CreateDepositoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoRequest) ProtoMessage() {}

func (x *CreateDepositoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoRequest.ProtoReflect.Descriptor instead.
func (*CreateDepositoRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{17}
}

func (x *CreateDepositoRequest) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDepositoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Deposito `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepositoResponse) Reset() {
	*x = CreateDepositoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositoResponse) ProtoMessage() {}

func (x *CreateDepositoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositoResponse.ProtoReflect.Descriptor instead.
func (*CreateDepositoResponse) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{18}
}

func (x *CreateDepositoResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateDepositoResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateDepositoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDepositoResponse) GetData() *Deposito {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositInquiryRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RATE_CURRENCY string `protobuf:"bytes,1,opt,name=RATE_CURRENCY,proto3" json:"RATE_CURRENCY,omitempty"` //  "RATE_CURRENCY": "IDR",
	PROD_TYPE     string `protobuf:"bytes,2,opt,name=PROD_TYPE,proto3" json:"PROD_TYPE,omitempty"`         // "PROD_TYPE": "DQ"
}

func (x *DepositInquiryRateRequest) Reset() {
	*x = DepositInquiryRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateRequest) ProtoMessage() {}

func (x *DepositInquiryRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateRequest.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{19}
}

func (x *DepositInquiryRateRequest) GetRATE_CURRENCY() string {
	if x != nil {
		return x.RATE_CURRENCY
	}
	return ""
}

func (x *DepositInquiryRateRequest) GetPROD_TYPE() string {
	if x != nil {
		return x.PROD_TYPE
	}
	return ""
}

type DepositInquiryRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	RATE_NUMBER      string `protobuf:"bytes,4,opt,name=RATE_NUMBER,proto3" json:"RATE_NUMBER,omitempty"`           // "RATE_NUMBER": "702",
	RATE_CURRENCY    string `protobuf:"bytes,5,opt,name=RATE_CURRENCY,proto3" json:"RATE_CURRENCY,omitempty"`       // "RATE_CURRENCY": "IDR",
	CURRENT_RATE     string `protobuf:"bytes,6,opt,name=CURRENT_RATE,proto3" json:"CURRENT_RATE,omitempty"`         // "CURRENT_RATE": "0.042500",
	MAXIMUM_RATE     string `protobuf:"bytes,7,opt,name=MAXIMUM_RATE,proto3" json:"MAXIMUM_RATE,omitempty"`         // "MAXIMUM_RATE": "0.075000",
	MINIMUM_RATE     string `protobuf:"bytes,8,opt,name=MINIMUM_RATE,proto3" json:"MINIMUM_RATE,omitempty"`         // "MINIMUM_RATE": "0.042500"
}

func (x *DepositInquiryRate) Reset() {
	*x = DepositInquiryRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRate) ProtoMessage() {}

func (x *DepositInquiryRate) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRate.ProtoReflect.Descriptor instead.
func (*DepositInquiryRate) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{20}
}

func (x *DepositInquiryRate) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositInquiryRate) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositInquiryRate) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositInquiryRate) GetRATE_NUMBER() string {
	if x != nil {
		return x.RATE_NUMBER
	}
	return ""
}

func (x *DepositInquiryRate) GetRATE_CURRENCY() string {
	if x != nil {
		return x.RATE_CURRENCY
	}
	return ""
}

func (x *DepositInquiryRate) GetCURRENT_RATE() string {
	if x != nil {
		return x.CURRENT_RATE
	}
	return ""
}

func (x *DepositInquiryRate) GetMAXIMUM_RATE() string {
	if x != nil {
		return x.MAXIMUM_RATE
	}
	return ""
}

func (x *DepositInquiryRate) GetMINIMUM_RATE() string {
	if x != nil {
		return x.MINIMUM_RATE
	}
	return ""
}

type DepositInquiryRateRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositInquiryRate `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositInquiryRateRespons) Reset() {
	*x = DepositInquiryRateRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositInquiryRateRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositInquiryRateRespons) ProtoMessage() {}

func (x *DepositInquiryRateRespons) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositInquiryRateRespons.ProtoReflect.Descriptor instead.
func (*DepositInquiryRateRespons) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{21}
}

func (x *DepositInquiryRateRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositInquiryRateRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositInquiryRateRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositInquiryRateRespons) GetData() *DepositInquiryRate {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoMaintananceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ACCOUNT_NUMBER     string `protobuf:"bytes,1,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`         // "ACCOUNT_NUMBER": "020601056922400",
	ACCOUNT_TYPE       string `protobuf:"bytes,2,opt,name=ACCOUNT_TYPE,proto3" json:"ACCOUNT_TYPE,omitempty"`             // "ACCOUNT_TYPE": "DQ",
	AUTORENEWAL        string `protobuf:"bytes,3,opt,name=AUTORENEWAL,proto3" json:"AUTORENEWAL,omitempty"`               //"AUTORENEWAL": "N",
	RATE_VARIANCE      string `protobuf:"bytes,4,opt,name=RATE_VARIANCE,proto3" json:"RATE_VARIANCE,omitempty"`           //"RATE_VARIANCE": "0",
	RATE_VARIANCE_CODE string `protobuf:"bytes,5,opt,name=RATE_VARIANCE_CODE,proto3" json:"RATE_VARIANCE_CODE,omitempty"` //"RATE_VARIANCE_CODE": ""
}

func (x *DepositoMaintananceRequest) Reset() {
	*x = DepositoMaintananceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoMaintananceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoMaintananceRequest) ProtoMessage() {}

func (x *DepositoMaintananceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoMaintananceRequest.ProtoReflect.Descriptor instead.
func (*DepositoMaintananceRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{22}
}

func (x *DepositoMaintananceRequest) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetACCOUNT_TYPE() string {
	if x != nil {
		return x.ACCOUNT_TYPE
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetAUTORENEWAL() string {
	if x != nil {
		return x.AUTORENEWAL
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetRATE_VARIANCE() string {
	if x != nil {
		return x.RATE_VARIANCE
	}
	return ""
}

func (x *DepositoMaintananceRequest) GetRATE_VARIANCE_CODE() string {
	if x != nil {
		return x.RATE_VARIANCE_CODE
	}
	return ""
}

type DepositoMaintanance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE          string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`                   // "ERROR_CODE": "AS-000",
	RESPONSE_COD        string `protobuf:"bytes,2,opt,name=RESPONSE_COD,proto3" json:"RESPONSE_COD,omitempty"`               // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE    string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"`       // "RESPONSE_MESSAGE": "Transaction Successfully",
	ACCOUNT_NUMBER      string `protobuf:"bytes,4,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`           // "ACCOUNT_NUMBER": "0000001901000061441",
	ACCOUNT_TYPE        string `protobuf:"bytes,5,opt,name=ACCOUNT_TYPE,proto3" json:"ACCOUNT_TYPE,omitempty"`               // "ACCOUNT_TYPE": "E",
	AUTORENEWAL_CODE    string `protobuf:"bytes,6,opt,name=AUTORENEWAL_CODE,proto3" json:"AUTORENEWAL_CODE,omitempty"`       // "AUTORENEWAL_CODE": "A",
	RATE_VARIANCE       string `protobuf:"bytes,7,opt,name=RATE_VARIANCE,proto3" json:"RATE_VARIANCE,omitempty"`             // "RATE_VARIANCE": "0.000000",
	RATE_VARIANCE_CODE  string `protobuf:"bytes,8,opt,name=RATE_VARIANCE_CODE,proto3" json:"RATE_VARIANCE_CODE,omitempty"`   // "RATE_VARIANCE_CODE": "1",
	STATUS_KODE_VOUCHER string `protobuf:"bytes,9,opt,name=STATUS_KODE_VOUCHER,proto3" json:"STATUS_KODE_VOUCHER,omitempty"` // "STATUS_KODE_VOUCHER": "Kode Nego 180511Q1K7 sudah dipakai"
}

func (x *DepositoMaintanance) Reset() {
	*x = DepositoMaintanance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoMaintanance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoMaintanance) ProtoMessage() {}

func (x *DepositoMaintanance) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoMaintanance.ProtoReflect.Descriptor instead.
func (*DepositoMaintanance) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{23}
}

func (x *DepositoMaintanance) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetRESPONSE_COD() string {
	if x != nil {
		return x.RESPONSE_COD
	}
	return ""
}

func (x *DepositoMaintanance) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoMaintanance) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *DepositoMaintanance) GetACCOUNT_TYPE() string {
	if x != nil {
		return x.ACCOUNT_TYPE
	}
	return ""
}

func (x *DepositoMaintanance) GetAUTORENEWAL_CODE() string {
	if x != nil {
		return x.AUTORENEWAL_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetRATE_VARIANCE() string {
	if x != nil {
		return x.RATE_VARIANCE
	}
	return ""
}

func (x *DepositoMaintanance) GetRATE_VARIANCE_CODE() string {
	if x != nil {
		return x.RATE_VARIANCE_CODE
	}
	return ""
}

func (x *DepositoMaintanance) GetSTATUS_KODE_VOUCHER() string {
	if x != nil {
		return x.STATUS_KODE_VOUCHER
	}
	return ""
}

type DepositoMaintananceRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoMaintanance `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoMaintananceRespons) Reset() {
	*x = DepositoMaintananceRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoMaintananceRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoMaintananceRespons) ProtoMessage() {}

func (x *DepositoMaintananceRespons) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoMaintananceRespons.ProtoReflect.Descriptor instead.
func (*DepositoMaintananceRespons) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{24}
}

func (x *DepositoMaintananceRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoMaintananceRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoMaintananceRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoMaintananceRespons) GetData() *DepositoMaintanance {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoCreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ACCOUNT_NO_PEMBAYRAN_BUNGA string `protobuf:"bytes,1,opt,name=ACCOUNT_NO_PEMBAYRAN_BUNGA,proto3" json:"ACCOUNT_NO_PEMBAYRAN_BUNGA,omitempty"` // "ACCOUNT_NO_PEMBAYRAN_BUNGA":"",
	BRANCH                     string `protobuf:"bytes,2,opt,name=BRANCH,proto3" json:"BRANCH,omitempty"`                                         // "BRANCH": "0019",
	CIF_NO                     string `protobuf:"bytes,3,opt,name=CIF_NO,proto3" json:"CIF_NO,omitempty"`                                         // "CIF_NO": "SY04223",
	CURRENCY                   string `protobuf:"bytes,4,opt,name=CURRENCY,proto3" json:"CURRENCY,omitempty"`                                     // "CURRENCY": "IDR",
	CUSTOMER_NAME              string `protobuf:"bytes,5,opt,name=CUSTOMER_NAME,proto3" json:"CUSTOMER_NAME,omitempty"`                           // "CUSTOMER_NAME": "Domba - Domba Tersesat",
	DATE_ISSEUD                string `protobuf:"bytes,6,opt,name=DATE_ISSEUD,proto3" json:"DATE_ISSEUD,omitempty"`                               // "DATE_ISSEUD": "221221",
	INTEREST_RATE              string `protobuf:"bytes,7,opt,name=INTEREST_RATE,proto3" json:"INTEREST_RATE,omitempty"`                           // "INTEREST_RATE": "0.042500",
	JANGKA_WAKTU_DEPOSITO      string `protobuf:"bytes,8,opt,name=JANGKA_WAKTU_DEPOSITO,proto3" json:"JANGKA_WAKTU_DEPOSITO,omitempty"`           // "JANGKA_WAKTU_DEPOSITO": "1",
	POKOK_DEPOSITO             string `protobuf:"bytes,9,opt,name=POKOK_DEPOSITO,proto3" json:"POKOK_DEPOSITO,omitempty"`                         // "POKOK_DEPOSITO": "5123123.00",
	PRODUCT_TYPE               string `protobuf:"bytes,10,opt,name=PRODUCT_TYPE,proto3" json:"PRODUCT_TYPE,omitempty"`                            // "PRODUCT_TYPE": "EE",
	RELATIONSHIP_CODE          string `protobuf:"bytes,11,opt,name=RELATIONSHIP_CODE,proto3" json:"RELATIONSHIP_CODE,omitempty"`                  // "RELATIONSHIP_CODE": "042",
	RENEW                      string `protobuf:"bytes,12,opt,name=RENEW,proto3" json:"RENEW,omitempty"`                                          // "RENEW": "YES",
	REPORTING_BRANCH           string `protobuf:"bytes,13,opt,name=REPORTING_BRANCH,proto3" json:"REPORTING_BRANCH,omitempty"`                    // "REPORTING_BRANCH": "0019"
	VARIANCE_CODE              string `protobuf:"bytes,14,opt,name=VARIANCE_CODE,proto3" json:"VARIANCE_CODE,omitempty"`                          //"VARIANCE_CODE":"180511Q1K7"
}

func (x *DepositoCreateAccountRequest) Reset() {
	*x = DepositoCreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoCreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoCreateAccountRequest) ProtoMessage() {}

func (x *DepositoCreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoCreateAccountRequest.ProtoReflect.Descriptor instead.
func (*DepositoCreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{25}
}

func (x *DepositoCreateAccountRequest) GetACCOUNT_NO_PEMBAYRAN_BUNGA() string {
	if x != nil {
		return x.ACCOUNT_NO_PEMBAYRAN_BUNGA
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetBRANCH() string {
	if x != nil {
		return x.BRANCH
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetCIF_NO() string {
	if x != nil {
		return x.CIF_NO
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetCURRENCY() string {
	if x != nil {
		return x.CURRENCY
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetCUSTOMER_NAME() string {
	if x != nil {
		return x.CUSTOMER_NAME
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetDATE_ISSEUD() string {
	if x != nil {
		return x.DATE_ISSEUD
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetINTEREST_RATE() string {
	if x != nil {
		return x.INTEREST_RATE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetJANGKA_WAKTU_DEPOSITO() string {
	if x != nil {
		return x.JANGKA_WAKTU_DEPOSITO
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetPOKOK_DEPOSITO() string {
	if x != nil {
		return x.POKOK_DEPOSITO
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetPRODUCT_TYPE() string {
	if x != nil {
		return x.PRODUCT_TYPE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetRELATIONSHIP_CODE() string {
	if x != nil {
		return x.RELATIONSHIP_CODE
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetRENEW() string {
	if x != nil {
		return x.RENEW
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetREPORTING_BRANCH() string {
	if x != nil {
		return x.REPORTING_BRANCH
	}
	return ""
}

func (x *DepositoCreateAccountRequest) GetVARIANCE_CODE() string {
	if x != nil {
		return x.VARIANCE_CODE
	}
	return ""
}

type DepositoCreateAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	ACCOUNT_NUMBER   string `protobuf:"bytes,4,opt,name=ACCOUNT_NUMBER,proto3" json:"ACCOUNT_NUMBER,omitempty"`     // "ACCOUNT_NUMBER": "0000001901000032442",
	CIF_NUMBER       string `protobuf:"bytes,5,opt,name=CIF_NUMBER,proto3" json:"CIF_NUMBER,omitempty"`             // "CIF_NUMBER": "SY04223",
	OPEN_DATE        string `protobuf:"bytes,6,opt,name=OPEN_DATE,proto3" json:"OPEN_DATE,omitempty"`               // "OPEN_DATE": "0221221",
	TGL_JATUH_TEMPO  string `protobuf:"bytes,7,opt,name=TGL_JATUH_TEMPO,proto3" json:"TGL_JATUH_TEMPO,omitempty"`   // "TGL_JATUH_TEMPO": "0220122"
}

func (x *DepositoCreateAccount) Reset() {
	*x = DepositoCreateAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoCreateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoCreateAccount) ProtoMessage() {}

func (x *DepositoCreateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoCreateAccount.ProtoReflect.Descriptor instead.
func (*DepositoCreateAccount) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{26}
}

func (x *DepositoCreateAccount) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoCreateAccount) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositoCreateAccount) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoCreateAccount) GetACCOUNT_NUMBER() string {
	if x != nil {
		return x.ACCOUNT_NUMBER
	}
	return ""
}

func (x *DepositoCreateAccount) GetCIF_NUMBER() string {
	if x != nil {
		return x.CIF_NUMBER
	}
	return ""
}

func (x *DepositoCreateAccount) GetOPEN_DATE() string {
	if x != nil {
		return x.OPEN_DATE
	}
	return ""
}

func (x *DepositoCreateAccount) GetTGL_JATUH_TEMPO() string {
	if x != nil {
		return x.TGL_JATUH_TEMPO
	}
	return ""
}

type DepositoCreateAccountRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoCreateAccount `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoCreateAccountRespons) Reset() {
	*x = DepositoCreateAccountRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoCreateAccountRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoCreateAccountRespons) ProtoMessage() {}

func (x *DepositoCreateAccountRespons) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoCreateAccountRespons.ProtoReflect.Descriptor instead.
func (*DepositoCreateAccountRespons) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{27}
}

func (x *DepositoCreateAccountRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoCreateAccountRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoCreateAccountRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoCreateAccountRespons) GetData() *DepositoCreateAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepositoPlacementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DEBIT_ACCOUNT   string `protobuf:"bytes,1,opt,name=DEBIT_ACCOUNT,proto3" json:"DEBIT_ACCOUNT,omitempty"`      // "DEBIT_ACCOUNT": "001901000162530",
	DEBIT_AMOUNT    string `protobuf:"bytes,2,opt,name=DEBIT_AMOUNT,proto3" json:"DEBIT_AMOUNT,omitempty"`        // "DEBIT_AMOUNT": "1222",
	SELL_RATE       string `protobuf:"bytes,3,opt,name=SELL_RATE,proto3" json:"SELL_RATE,omitempty"`              // "SELL_RATE": "10000",
	BUY_RATE        string `protobuf:"bytes,4,opt,name=BUY_RATE,proto3" json:"BUY_RATE,omitempty"`                // "BUY_RATE": "10000",
	CHARGE_AMOUNT   string `protobuf:"bytes,5,opt,name=CHARGE_AMOUNT,proto3" json:"CHARGE_AMOUNT,omitempty"`      // "CHARGE_AMOUNT": "100",
	CREDIT_ACCOUNT  string `protobuf:"bytes,6,opt,name=CREDIT_ACCOUNT,proto3" json:"CREDIT_ACCOUNT,omitempty"`    // "CREDIT_ACCOUNT": "0000020601056987400",
	CREDIT_AMOUNT   string `protobuf:"bytes,7,opt,name=CREDIT_AMOUNT,proto3" json:"CREDIT_AMOUNT,omitempty"`      // "CREDIT_AMOUNT": "1000",
	NUM_LEMBAR      string `protobuf:"bytes,8,opt,name=NUM_LEMBAR,proto3" json:"NUM_LEMBAR,omitempty"`            // "NUM_LEMBAR": "1",
	DEBIT_CURRENCY  string `protobuf:"bytes,9,opt,name=DEBIT_CURRENCY,proto3" json:"DEBIT_CURRENCY,omitempty"`    // "DEBIT_CURRENCY": "IDR",
	CREDIT_CURRENCY string `protobuf:"bytes,10,opt,name=CREDIT_CURRENCY,proto3" json:"CREDIT_CURRENCY,omitempty"` // "CREDIT_CURRENCY": "IDR",
	NOBILYET        string `protobuf:"bytes,11,opt,name=NOBILYET,proto3" json:"NOBILYET,omitempty"`               // "NOBILYET": ""
}

func (x *DepositoPlacementRequest) Reset() {
	*x = DepositoPlacementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoPlacementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoPlacementRequest) ProtoMessage() {}

func (x *DepositoPlacementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoPlacementRequest.ProtoReflect.Descriptor instead.
func (*DepositoPlacementRequest) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{28}
}

func (x *DepositoPlacementRequest) GetDEBIT_ACCOUNT() string {
	if x != nil {
		return x.DEBIT_ACCOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetDEBIT_AMOUNT() string {
	if x != nil {
		return x.DEBIT_AMOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetSELL_RATE() string {
	if x != nil {
		return x.SELL_RATE
	}
	return ""
}

func (x *DepositoPlacementRequest) GetBUY_RATE() string {
	if x != nil {
		return x.BUY_RATE
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCHARGE_AMOUNT() string {
	if x != nil {
		return x.CHARGE_AMOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCREDIT_ACCOUNT() string {
	if x != nil {
		return x.CREDIT_ACCOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCREDIT_AMOUNT() string {
	if x != nil {
		return x.CREDIT_AMOUNT
	}
	return ""
}

func (x *DepositoPlacementRequest) GetNUM_LEMBAR() string {
	if x != nil {
		return x.NUM_LEMBAR
	}
	return ""
}

func (x *DepositoPlacementRequest) GetDEBIT_CURRENCY() string {
	if x != nil {
		return x.DEBIT_CURRENCY
	}
	return ""
}

func (x *DepositoPlacementRequest) GetCREDIT_CURRENCY() string {
	if x != nil {
		return x.CREDIT_CURRENCY
	}
	return ""
}

func (x *DepositoPlacementRequest) GetNOBILYET() string {
	if x != nil {
		return x.NOBILYET
	}
	return ""
}

type DepositoPlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ERROR_CODE       string `protobuf:"bytes,1,opt,name=ERROR_CODE,proto3" json:"ERROR_CODE,omitempty"`             // "ERROR_CODE": "AS-000",
	RESPONSE_CODE    string `protobuf:"bytes,2,opt,name=RESPONSE_CODE,proto3" json:"RESPONSE_CODE,omitempty"`       // "RESPONSE_CODE": "00",
	RESPONSE_MESSAGE string `protobuf:"bytes,3,opt,name=RESPONSE_MESSAGE,proto3" json:"RESPONSE_MESSAGE,omitempty"` // "RESPONSE_MESSAGE": "Transaction Successfully",
	JOURNAL_SEQ      string `protobuf:"bytes,4,opt,name=JOURNAL_SEQ,proto3" json:"JOURNAL_SEQ,omitempty"`           // "JOURNAL_SEQ": "7126648"
}

func (x *DepositoPlacement) Reset() {
	*x = DepositoPlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoPlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoPlacement) ProtoMessage() {}

func (x *DepositoPlacement) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoPlacement.ProtoReflect.Descriptor instead.
func (*DepositoPlacement) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{29}
}

func (x *DepositoPlacement) GetERROR_CODE() string {
	if x != nil {
		return x.ERROR_CODE
	}
	return ""
}

func (x *DepositoPlacement) GetRESPONSE_CODE() string {
	if x != nil {
		return x.RESPONSE_CODE
	}
	return ""
}

func (x *DepositoPlacement) GetRESPONSE_MESSAGE() string {
	if x != nil {
		return x.RESPONSE_MESSAGE
	}
	return ""
}

func (x *DepositoPlacement) GetJOURNAL_SEQ() string {
	if x != nil {
		return x.JOURNAL_SEQ
	}
	return ""
}

type DepositoPlacementRespons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DepositoPlacement `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DepositoPlacementRespons) Reset() {
	*x = DepositoPlacementRespons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoPlacementRespons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoPlacementRespons) ProtoMessage() {}

func (x *DepositoPlacementRespons) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoPlacementRespons.ProtoReflect.Descriptor instead.
func (*DepositoPlacementRespons) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{30}
}

func (x *DepositoPlacementRespons) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DepositoPlacementRespons) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DepositoPlacementRespons) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DepositoPlacementRespons) GetData() *DepositoPlacement {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataListRequest_DataListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Custom string `protobuf:"bytes,50,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *DataListRequest_DataListFilter) Reset() {
	*x = DataListRequest_DataListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataListRequest_DataListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataListRequest_DataListFilter) ProtoMessage() {}

func (x *DataListRequest_DataListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataListRequest_DataListFilter.ProtoReflect.Descriptor instead.
func (*DataListRequest_DataListFilter) Descriptor() ([]byte, []int) {
	return file_payload_proto_rawDescGZIP(), []int{13, 0}
}

func (x *DataListRequest_DataListFilter) GetCustom() string {
	if x != nil {
		return x.Custom
	}
	return ""
}

var File_payload_proto protoreflect.FileDescriptor

var file_payload_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x0d, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x22, 0xec, 0x04, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x39,
	0x0a, 0x08, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52,
	0x08, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x22, 0xb5, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xad, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x4c, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0x92,
	0x41, 0x31, 0x32, 0x2f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x27, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x27, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c,
	0x20, 0x27, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x27, 0x2c, 0x20, 0x27, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x27, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22,
	0x8b, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x03,
	0x0a, 0x17, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c,
	0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79,
	0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x04, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32,
	0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31,
	0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03,
	0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x50, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12,
	0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63,
	0x73, 0x76, 0x10, 0x03, 0x22, 0x34, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x97, 0x03, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c,
	0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x4b, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x1a, 0x28, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0xd6, 0x01, 0x0a, 0x10,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x44, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x8f, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x43, 0x59, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x52, 0x4f, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x22, 0xba, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12,
	0x2a, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x24, 0x0a,
	0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x52,
	0x41, 0x54, 0x45, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x41, 0x58, 0x49, 0x4d,
	0x55, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d,
	0x41, 0x58, 0x49, 0x4d, 0x55, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x4d,
	0x49, 0x4e, 0x49, 0x4d, 0x55, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4d, 0x49, 0x4e, 0x49, 0x4d, 0x55, 0x4d, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x22,
	0x9c, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0,
	0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x55, 0x54,
	0x4f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x41, 0x55, 0x54, 0x4f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43,
	0x45, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x22, 0x85, 0x03, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x45, 0x4e,
	0x45, 0x57, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x41, 0x55, 0x54, 0x4f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x43, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56,
	0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4b, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x4f, 0x55, 0x43, 0x48, 0x45, 0x52, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4b, 0x4f, 0x44,
	0x45, 0x5f, 0x56, 0x4f, 0x55, 0x43, 0x48, 0x45, 0x52, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x04, 0x0a, 0x1c, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x4d, 0x42, 0x41, 0x59,
	0x52, 0x41, 0x4e, 0x5f, 0x42, 0x55, 0x4e, 0x47, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1a, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x4d, 0x42,
	0x41, 0x59, 0x52, 0x41, 0x4e, 0x5f, 0x42, 0x55, 0x4e, 0x47, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x52, 0x41, 0x4e, 0x43, 0x48, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x52, 0x41,
	0x4e, 0x43, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x4f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x45, 0x55, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x45, 0x55, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54,
	0x5f, 0x52, 0x41, 0x54, 0x45, 0x12, 0x34, 0x0a, 0x15, 0x4a, 0x41, 0x4e, 0x47, 0x4b, 0x41, 0x5f,
	0x57, 0x41, 0x4b, 0x54, 0x55, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4a, 0x41, 0x4e, 0x47, 0x4b, 0x41, 0x5f, 0x57, 0x41, 0x4b,
	0x54, 0x55, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x12, 0x26, 0x0a, 0x0e, 0x50,
	0x4f, 0x4b, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x4f, 0x4b, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x4f, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x45, 0x4c, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x12, 0x2a, 0x0a, 0x10, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x12, 0x24, 0x0a, 0x0d, 0x56, 0x41, 0x52, 0x49, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x22, 0x99, 0x02,
	0x0a, 0x15, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x2a, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x49, 0x46, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x12,
	0x28, 0x0a, 0x0f, 0x54, 0x47, 0x4c, 0x5f, 0x4a, 0x41, 0x54, 0x55, 0x48, 0x5f, 0x54, 0x45, 0x4d,
	0x50, 0x4f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x47, 0x4c, 0x5f, 0x4a, 0x41,
	0x54, 0x55, 0x48, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x22, 0xa2, 0x01, 0x0a, 0x1c, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0,
	0x03, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e,
	0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x52, 0x41,
	0x54, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x45, 0x4c, 0x4c, 0x5f, 0x52,
	0x41, 0x54, 0x45, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43,
	0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x24, 0x0a,
	0x0d, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x55, 0x4d, 0x5f, 0x4c, 0x45, 0x4d, 0x42, 0x41,
	0x52, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x55, 0x4d, 0x5f, 0x4c, 0x45, 0x4d,
	0x42, 0x41, 0x52, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52,
	0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x45, 0x42,
	0x49, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x28, 0x0a, 0x0f, 0x43,
	0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x55, 0x52,
	0x52, 0x45, 0x4e, 0x43, 0x59, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x4f, 0x42, 0x49, 0x4c, 0x59, 0x45,
	0x54, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x4f, 0x42, 0x49, 0x4c, 0x59, 0x45,
	0x54, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x2a, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x4f, 0x55,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x51, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4a, 0x4f, 0x55, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x51, 0x22, 0x9a, 0x01, 0x0a, 0x18,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x80, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x06, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07, 0x2a, 0x49, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x2a, 0x22, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payload_proto_rawDescOnce sync.Once
	file_payload_proto_rawDescData = file_payload_proto_rawDesc
)

func file_payload_proto_rawDescGZIP() []byte {
	file_payload_proto_rawDescOnce.Do(func() {
		file_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_payload_proto_rawDescData)
	})
	return file_payload_proto_rawDescData
}

var file_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_payload_proto_goTypes = []interface{}{
	(TaskStatus)(0),                        // 0: deposito.service.v1.TaskStatus
	(TaskStep)(0),                          // 1: deposito.service.v1.TaskStep
	(SortDirection)(0),                     // 2: deposito.service.v1.SortDirection
	(FileTaskListRequest_Formats)(0),       // 3: deposito.service.v1.FileTaskListRequest.Formats
	(*PaginationResponse)(nil),             // 4: deposito.service.v1.PaginationResponse
	(*Task)(nil),                           // 5: deposito.service.v1.Task
	(*CreateDepositoTaskRequest)(nil),      // 6: deposito.service.v1.CreateDepositoTaskRequest
	(*TaskData)(nil),                       // 7: deposito.service.v1.TaskData
	(*Company)(nil),                        // 8: deposito.service.v1.Company
	(*CreateDepositoTaskResponse)(nil),     // 9: deposito.service.v1.CreateDepositoTaskResponse
	(*TaskActionRequest)(nil),              // 10: deposito.service.v1.TaskActionRequest
	(*TaskActionResponse)(nil),             // 11: deposito.service.v1.TaskActionResponse
	(*DepositoListTaskRequest)(nil),        // 12: deposito.service.v1.DepositoListTaskRequest
	(*DepositoListTaskResponse)(nil),       // 13: deposito.service.v1.DepositoListTaskResponse
	(*FileTaskListRequest)(nil),            // 14: deposito.service.v1.FileTaskListRequest
	(*GetDepositoTaskByIDRequest)(nil),     // 15: deposito.service.v1.GetDepositoTaskByIDRequest
	(*GetDepositoTaskByIDResponse)(nil),    // 16: deposito.service.v1.GetDepositoTaskByIDResponse
	(*DataListRequest)(nil),                // 17: deposito.service.v1.DataListRequest
	(*DataListResponse)(nil),               // 18: deposito.service.v1.DataListResponse
	(*DataDetailRequest)(nil),              // 19: deposito.service.v1.DataDetailRequest
	(*DataDetailResponse)(nil),             // 20: deposito.service.v1.DataDetailResponse
	(*CreateDepositoRequest)(nil),          // 21: deposito.service.v1.CreateDepositoRequest
	(*CreateDepositoResponse)(nil),         // 22: deposito.service.v1.CreateDepositoResponse
	(*DepositInquiryRateRequest)(nil),      // 23: deposito.service.v1.DepositInquiryRateRequest
	(*DepositInquiryRate)(nil),             // 24: deposito.service.v1.DepositInquiryRate
	(*DepositInquiryRateRespons)(nil),      // 25: deposito.service.v1.DepositInquiryRateRespons
	(*DepositoMaintananceRequest)(nil),     // 26: deposito.service.v1.DepositoMaintananceRequest
	(*DepositoMaintanance)(nil),            // 27: deposito.service.v1.DepositoMaintanance
	(*DepositoMaintananceRespons)(nil),     // 28: deposito.service.v1.DepositoMaintananceRespons
	(*DepositoCreateAccountRequest)(nil),   // 29: deposito.service.v1.DepositoCreateAccountRequest
	(*DepositoCreateAccount)(nil),          // 30: deposito.service.v1.DepositoCreateAccount
	(*DepositoCreateAccountRespons)(nil),   // 31: deposito.service.v1.DepositoCreateAccountRespons
	(*DepositoPlacementRequest)(nil),       // 32: deposito.service.v1.DepositoPlacementRequest
	(*DepositoPlacement)(nil),              // 33: deposito.service.v1.DepositoPlacement
	(*DepositoPlacementRespons)(nil),       // 34: deposito.service.v1.DepositoPlacementRespons
	(*DataListRequest_DataListFilter)(nil), // 35: deposito.service.v1.DataListRequest.DataListFilter
	(*timestamppb.Timestamp)(nil),          // 36: google.protobuf.Timestamp
	(*Deposito)(nil),                       // 37: deposito.service.v1.Deposito
	(*DepositoData)(nil),                   // 38: deposito.service.v1.DepositoData
}
var file_payload_proto_depIdxs = []int32{
	36, // 0: deposito.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	36, // 1: deposito.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	37, // 2: deposito.service.v1.CreateDepositoTaskRequest.data:type_name -> deposito.service.v1.Deposito
	5,  // 3: deposito.service.v1.TaskData.task:type_name -> deposito.service.v1.Task
	37, // 4: deposito.service.v1.TaskData.Deposito:type_name -> deposito.service.v1.Deposito
	8,  // 5: deposito.service.v1.TaskData.company:type_name -> deposito.service.v1.Company
	7,  // 6: deposito.service.v1.CreateDepositoTaskResponse.data:type_name -> deposito.service.v1.TaskData
	7,  // 7: deposito.service.v1.TaskActionResponse.data:type_name -> deposito.service.v1.TaskData
	0,  // 8: deposito.service.v1.DepositoListTaskRequest.status:type_name -> deposito.service.v1.TaskStatus
	1,  // 9: deposito.service.v1.DepositoListTaskRequest.step:type_name -> deposito.service.v1.TaskStep
	2,  // 10: deposito.service.v1.DepositoListTaskRequest.dir:type_name -> deposito.service.v1.SortDirection
	7,  // 11: deposito.service.v1.DepositoListTaskResponse.data:type_name -> deposito.service.v1.TaskData
	4,  // 12: deposito.service.v1.DepositoListTaskResponse.pagination:type_name -> deposito.service.v1.PaginationResponse
	0,  // 13: deposito.service.v1.FileTaskListRequest.status:type_name -> deposito.service.v1.TaskStatus
	1,  // 14: deposito.service.v1.FileTaskListRequest.step:type_name -> deposito.service.v1.TaskStep
	2,  // 15: deposito.service.v1.FileTaskListRequest.dir:type_name -> deposito.service.v1.SortDirection
	3,  // 16: deposito.service.v1.FileTaskListRequest.fileFormat:type_name -> deposito.service.v1.FileTaskListRequest.Formats
	7,  // 17: deposito.service.v1.GetDepositoTaskByIDResponse.data:type_name -> deposito.service.v1.TaskData
	2,  // 18: deposito.service.v1.DataListRequest.dir:type_name -> deposito.service.v1.SortDirection
	35, // 19: deposito.service.v1.DataListRequest.filter:type_name -> deposito.service.v1.DataListRequest.DataListFilter
	38, // 20: deposito.service.v1.DataListResponse.data:type_name -> deposito.service.v1.DepositoData
	4,  // 21: deposito.service.v1.DataListResponse.pagination:type_name -> deposito.service.v1.PaginationResponse
	38, // 22: deposito.service.v1.DataDetailResponse.data:type_name -> deposito.service.v1.DepositoData
	7,  // 23: deposito.service.v1.CreateDepositoRequest.data:type_name -> deposito.service.v1.TaskData
	37, // 24: deposito.service.v1.CreateDepositoResponse.data:type_name -> deposito.service.v1.Deposito
	24, // 25: deposito.service.v1.DepositInquiryRateRespons.data:type_name -> deposito.service.v1.DepositInquiryRate
	27, // 26: deposito.service.v1.DepositoMaintananceRespons.data:type_name -> deposito.service.v1.DepositoMaintanance
	30, // 27: deposito.service.v1.DepositoCreateAccountRespons.data:type_name -> deposito.service.v1.DepositoCreateAccount
	33, // 28: deposito.service.v1.DepositoPlacementRespons.data:type_name -> deposito.service.v1.DepositoPlacement
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_payload_proto_init() }
func file_payload_proto_init() {
	if File_payload_proto != nil {
		return
	}
	file_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoListTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoListTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTaskListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositoTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositoTaskByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositInquiryRateRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoMaintananceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoMaintanance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoMaintananceRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoCreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoCreateAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoCreateAccountRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoPlacementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoPlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoPlacementRespons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataListRequest_DataListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payload_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_payload_proto_goTypes,
		DependencyIndexes: file_payload_proto_depIdxs,
		EnumInfos:         file_payload_proto_enumTypes,
		MessageInfos:      file_payload_proto_msgTypes,
	}.Build()
	File_payload_proto = out.File
	file_payload_proto_rawDesc = nil
	file_payload_proto_goTypes = nil
	file_payload_proto_depIdxs = nil
}
