// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: gorm_db.proto

package pb

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositoID      uint64                 `protobuf:"varint,1,opt,name=depositoID,proto3" json:"depositoID,omitempty"`
	DEBIT_ACCOUNT   string                 `protobuf:"bytes,2,opt,name=DEBIT_ACCOUNT,json=DEBITACCOUNT,proto3" json:"DEBIT_ACCOUNT,omitempty"`        // "DEBIT_ACCOUNT":"001901000162530",
	DEBIT_AMOUNT    string                 `protobuf:"bytes,3,opt,name=DEBIT_AMOUNT,json=DEBITAMOUNT,proto3" json:"DEBIT_AMOUNT,omitempty"`           // "DEBIT_AMOUNT":"1222",
	SELL_RATE       string                 `protobuf:"bytes,4,opt,name=SELL_RATE,json=SELLRATE,proto3" json:"SELL_RATE,omitempty"`                    // "SELL_RATE":"10000",
	BUY_RATE        string                 `protobuf:"bytes,5,opt,name=BUY_RATE,json=BUYRATE,proto3" json:"BUY_RATE,omitempty"`                       // "BUY_RATE":"10000",
	CHARGE_AMOUNT   string                 `protobuf:"bytes,6,opt,name=CHARGE_AMOUNT,json=CHARGEAMOUNT,proto3" json:"CHARGE_AMOUNT,omitempty"`        // "CHARGE_AMOUNT":"100",
	CREDIT_ACCOUNT  string                 `protobuf:"bytes,7,opt,name=CREDIT_ACCOUNT,json=CREDITACCOUNT,proto3" json:"CREDIT_ACCOUNT,omitempty"`     // "CREDIT_ACCOUNT":"0000020601056987400",
	CREDIT_AMOUNT   string                 `protobuf:"bytes,8,opt,name=CREDIT_AMOUNT,json=CREDITAMOUNT,proto3" json:"CREDIT_AMOUNT,omitempty"`        // "CREDIT_AMOUNT":"1000",
	NUM_LEMBAR      string                 `protobuf:"bytes,9,opt,name=NUM_LEMBAR,json=NUMLEMBAR,proto3" json:"NUM_LEMBAR,omitempty"`                 // "NUM_LEMBAR":"1",
	DEBIT_CURRENCY  string                 `protobuf:"bytes,10,opt,name=DEBIT_CURRENCY,json=DEBITCURRENCY,proto3" json:"DEBIT_CURRENCY,omitempty"`    // "DEBIT_CURRENCY":"IDR",
	CREDIT_CURRENCY string                 `protobuf:"bytes,11,opt,name=CREDIT_CURRENCY,json=CREDITCURRENCY,proto3" json:"CREDIT_CURRENCY,omitempty"` // "CREDIT_CURRENCY":"IDR",
	REMARK          string                 `protobuf:"bytes,12,opt,name=REMARK,proto3" json:"REMARK,omitempty"`                                       // "REMARK":"tes",
	NOBILYET        string                 `protobuf:"bytes,13,opt,name=NOBILYET,proto3" json:"NOBILYET,omitempty"`                                   // "NOBILYET":""
	TaskID          uint64                 `protobuf:"varint,101,opt,name=taskID,proto3" json:"taskID,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DepositoData) Reset() {
	*x = DepositoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositoData) ProtoMessage() {}

func (x *DepositoData) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositoData.ProtoReflect.Descriptor instead.
func (*DepositoData) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{0}
}

func (x *DepositoData) GetDepositoID() uint64 {
	if x != nil {
		return x.DepositoID
	}
	return 0
}

func (x *DepositoData) GetDEBIT_ACCOUNT() string {
	if x != nil {
		return x.DEBIT_ACCOUNT
	}
	return ""
}

func (x *DepositoData) GetDEBIT_AMOUNT() string {
	if x != nil {
		return x.DEBIT_AMOUNT
	}
	return ""
}

func (x *DepositoData) GetSELL_RATE() string {
	if x != nil {
		return x.SELL_RATE
	}
	return ""
}

func (x *DepositoData) GetBUY_RATE() string {
	if x != nil {
		return x.BUY_RATE
	}
	return ""
}

func (x *DepositoData) GetCHARGE_AMOUNT() string {
	if x != nil {
		return x.CHARGE_AMOUNT
	}
	return ""
}

func (x *DepositoData) GetCREDIT_ACCOUNT() string {
	if x != nil {
		return x.CREDIT_ACCOUNT
	}
	return ""
}

func (x *DepositoData) GetCREDIT_AMOUNT() string {
	if x != nil {
		return x.CREDIT_AMOUNT
	}
	return ""
}

func (x *DepositoData) GetNUM_LEMBAR() string {
	if x != nil {
		return x.NUM_LEMBAR
	}
	return ""
}

func (x *DepositoData) GetDEBIT_CURRENCY() string {
	if x != nil {
		return x.DEBIT_CURRENCY
	}
	return ""
}

func (x *DepositoData) GetCREDIT_CURRENCY() string {
	if x != nil {
		return x.CREDIT_CURRENCY
	}
	return ""
}

func (x *DepositoData) GetREMARK() string {
	if x != nil {
		return x.REMARK
	}
	return ""
}

func (x *DepositoData) GetNOBILYET() string {
	if x != nil {
		return x.NOBILYET
	}
	return ""
}

func (x *DepositoData) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *DepositoData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DepositoData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Deposito struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositoID     uint64                 `protobuf:"varint,1,opt,name=depositoID,proto3" json:"depositoID,omitempty"`
	CompanyID      uint64                 `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AccNo_TD       string                 `protobuf:"bytes,3,opt,name=accNo_TD,json=accNoTD,proto3" json:"accNo_TD,omitempty"`
	AccNoPrincipal string                 `protobuf:"bytes,4,opt,name=accNoPrincipal,proto3" json:"accNoPrincipal,omitempty"`
	AccNoInterest  string                 `protobuf:"bytes,5,opt,name=accNoInterest,proto3" json:"accNoInterest,omitempty"`
	AccNo_Deposito string                 `protobuf:"bytes,6,opt,name=accNo_Deposito,json=accNoDeposito,proto3" json:"accNo_Deposito,omitempty"`
	DepositoName   string                 `protobuf:"bytes,7,opt,name=depositoName,proto3" json:"depositoName,omitempty"`
	DepositType    string                 `protobuf:"bytes,9,opt,name=depositType,proto3" json:"depositType,omitempty"`
	Tenor          string                 `protobuf:"bytes,10,opt,name=tenor,proto3" json:"tenor,omitempty"`
	Amount         string                 `protobuf:"bytes,11,opt,name=amount,proto3" json:"amount,omitempty"`
	InterestRate   string                 `protobuf:"bytes,12,opt,name=interestRate,proto3" json:"interestRate,omitempty"`
	WhitdrawAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=whitdrawAt,proto3" json:"whitdrawAt,omitempty"`
	CreatedById    uint64                 `protobuf:"varint,14,opt,name=createdById,proto3" json:"createdById,omitempty"`
	UpdatedById    uint64                 `protobuf:"varint,15,opt,name=updatedById,proto3" json:"updatedById,omitempty"`
	Code           string                 `protobuf:"bytes,16,opt,name=code,proto3" json:"code,omitempty"`
	Voucher        string                 `protobuf:"bytes,17,opt,name=voucher,proto3" json:"voucher,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Deposito) Reset() {
	*x = Deposito{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposito) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposito) ProtoMessage() {}

func (x *Deposito) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposito.ProtoReflect.Descriptor instead.
func (*Deposito) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{1}
}

func (x *Deposito) GetDepositoID() uint64 {
	if x != nil {
		return x.DepositoID
	}
	return 0
}

func (x *Deposito) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Deposito) GetAccNo_TD() string {
	if x != nil {
		return x.AccNo_TD
	}
	return ""
}

func (x *Deposito) GetAccNoPrincipal() string {
	if x != nil {
		return x.AccNoPrincipal
	}
	return ""
}

func (x *Deposito) GetAccNoInterest() string {
	if x != nil {
		return x.AccNoInterest
	}
	return ""
}

func (x *Deposito) GetAccNo_Deposito() string {
	if x != nil {
		return x.AccNo_Deposito
	}
	return ""
}

func (x *Deposito) GetDepositoName() string {
	if x != nil {
		return x.DepositoName
	}
	return ""
}

func (x *Deposito) GetDepositType() string {
	if x != nil {
		return x.DepositType
	}
	return ""
}

func (x *Deposito) GetTenor() string {
	if x != nil {
		return x.Tenor
	}
	return ""
}

func (x *Deposito) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Deposito) GetInterestRate() string {
	if x != nil {
		return x.InterestRate
	}
	return ""
}

func (x *Deposito) GetWhitdrawAt() *timestamppb.Timestamp {
	if x != nil {
		return x.WhitdrawAt
	}
	return nil
}

func (x *Deposito) GetCreatedById() uint64 {
	if x != nil {
		return x.CreatedById
	}
	return 0
}

func (x *Deposito) GetUpdatedById() uint64 {
	if x != nil {
		return x.UpdatedById
	}
	return 0
}

func (x *Deposito) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Deposito) GetVoucher() string {
	if x != nil {
		return x.Voucher
	}
	return ""
}

func (x *Deposito) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Deposito) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_gorm_db_proto protoreflect.FileDescriptor

var file_gorm_db_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74,
	0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x07, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41,
	0x03, 0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28, 0x01, 0x40, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x0d, 0x44, 0x45, 0x42, 0x49, 0x54,
	0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28,
	0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x12, 0x37, 0x0a, 0x0c, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e,
	0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0b,
	0x44, 0x45, 0x42, 0x49, 0x54, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x31, 0x0a, 0x09, 0x53,
	0x45, 0x4c, 0x4c, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28,
	0x31, 0x30, 0x30, 0x29, 0x52, 0x08, 0x53, 0x45, 0x4c, 0x4c, 0x52, 0x41, 0x54, 0x45, 0x12, 0x2f,
	0x0a, 0x08, 0x42, 0x55, 0x59, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x07, 0x42, 0x55, 0x59, 0x52, 0x41, 0x54, 0x45, 0x12,
	0x39, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x3b, 0x0a, 0x0e, 0x43, 0x52,
	0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0d, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x39, 0x0a, 0x0d, 0x43, 0x52, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28,
	0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x12, 0x33, 0x0a, 0x0a, 0x4e, 0x55, 0x4d, 0x5f, 0x4c, 0x45, 0x4d, 0x42, 0x41, 0x52,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x09, 0x4e, 0x55,
	0x4d, 0x4c, 0x45, 0x4d, 0x42, 0x41, 0x52, 0x12, 0x3b, 0x0a, 0x0e, 0x44, 0x45, 0x42, 0x49, 0x54,
	0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0d, 0x44, 0x45, 0x42, 0x49, 0x54, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x43, 0x59, 0x12, 0x3d, 0x0a, 0x0f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba,
	0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31,
	0x30, 0x30, 0x29, 0x52, 0x0e, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x12, 0x2c, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x06, 0x52, 0x45, 0x4d, 0x41, 0x52,
	0x4b, 0x12, 0x30, 0x0a, 0x08, 0x4e, 0x4f, 0x42, 0x49, 0x4c, 0x59, 0x45, 0x54, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x08, 0x4e, 0x4f, 0x42, 0x49, 0x4c,
	0x59, 0x45, 0x54, 0x12, 0x21, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba,
	0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x3a, 0x1f, 0xba, 0xb9, 0x19, 0x1b, 0x08, 0x01, 0x1a, 0x17, 0x72, 0x65, 0x6d, 0x69, 0x74, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xe9, 0x07, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x12, 0x2d,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28, 0x01, 0x40,
	0x01, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x5f, 0x54, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x4e, 0x6f, 0x54, 0x44, 0x12, 0x3c, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9,
	0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0e, 0x61, 0x63, 0x63, 0x4e, 0x6f, 0x5f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c,
	0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x4e, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x12, 0x38, 0x0a, 0x0c, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10,
	0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9,
	0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30,
	0x30, 0x29, 0x52, 0x05, 0x74, 0x65, 0x6e, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a,
	0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba,
	0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31,
	0x30, 0x30, 0x29, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x50, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x64, 0x72, 0x61, 0x77, 0x41, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x2e, 0x0a, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63,
	0x68, 0x61, 0x72, 0x28, 0x31, 0x30, 0x30, 0x29, 0x52, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x10, 0xba, 0xb9, 0x19,
	0x0c, 0x08, 0x01, 0x1a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gorm_db_proto_rawDescOnce sync.Once
	file_gorm_db_proto_rawDescData = file_gorm_db_proto_rawDesc
)

func file_gorm_db_proto_rawDescGZIP() []byte {
	file_gorm_db_proto_rawDescOnce.Do(func() {
		file_gorm_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_gorm_db_proto_rawDescData)
	})
	return file_gorm_db_proto_rawDescData
}

var file_gorm_db_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gorm_db_proto_goTypes = []interface{}{
	(*DepositoData)(nil),          // 0: deposito.service.v1.DepositoData
	(*Deposito)(nil),              // 1: deposito.service.v1.Deposito
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_gorm_db_proto_depIdxs = []int32{
	2, // 0: deposito.service.v1.DepositoData.createdAt:type_name -> google.protobuf.Timestamp
	2, // 1: deposito.service.v1.DepositoData.updatedAt:type_name -> google.protobuf.Timestamp
	2, // 2: deposito.service.v1.Deposito.whitdrawAt:type_name -> google.protobuf.Timestamp
	2, // 3: deposito.service.v1.Deposito.createdAt:type_name -> google.protobuf.Timestamp
	2, // 4: deposito.service.v1.Deposito.updatedAt:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gorm_db_proto_init() }
func file_gorm_db_proto_init() {
	if File_gorm_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gorm_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposito); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gorm_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gorm_db_proto_goTypes,
		DependencyIndexes: file_gorm_db_proto_depIdxs,
		MessageInfos:      file_gorm_db_proto_msgTypes,
	}.Build()
	File_gorm_db_proto = out.File
	file_gorm_db_proto_rawDesc = nil
	file_gorm_db_proto_goTypes = nil
	file_gorm_db_proto_depIdxs = nil
}
