// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: bifast_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Only information for swagger doc
type TableExternalTransferTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskID               uint64                 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TransactionID        string                 `protobuf:"bytes,3,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	TransactionServiceID uint64                 `protobuf:"varint,4,opt,name=transactionServiceID,proto3" json:"transactionServiceID,omitempty"`
	Data                 string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	ReferenceNumber      string                 `protobuf:"bytes,6,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	TaskStatus           uint32                 `protobuf:"varint,7,opt,name=taskStatus,proto3" json:"taskStatus,omitempty"`
	DataStatus           string                 `protobuf:"bytes,8,opt,name=dataStatus,proto3" json:"dataStatus,omitempty"`
	TransactionStatus    uint32                 `protobuf:"varint,9,opt,name=transactionStatus,proto3" json:"transactionStatus,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TableExternalTransferTransaction) Reset() {
	*x = TableExternalTransferTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableExternalTransferTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableExternalTransferTransaction) ProtoMessage() {}

func (x *TableExternalTransferTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableExternalTransferTransaction.ProtoReflect.Descriptor instead.
func (*TableExternalTransferTransaction) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{0}
}

func (x *TableExternalTransferTransaction) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TableExternalTransferTransaction) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TableExternalTransferTransaction) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *TableExternalTransferTransaction) GetTransactionServiceID() uint64 {
	if x != nil {
		return x.TransactionServiceID
	}
	return 0
}

func (x *TableExternalTransferTransaction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TableExternalTransferTransaction) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *TableExternalTransferTransaction) GetTaskStatus() uint32 {
	if x != nil {
		return x.TaskStatus
	}
	return 0
}

func (x *TableExternalTransferTransaction) GetDataStatus() string {
	if x != nil {
		return x.DataStatus
	}
	return ""
}

func (x *TableExternalTransferTransaction) GetTransactionStatus() uint32 {
	if x != nil {
		return x.TransactionStatus
	}
	return 0
}

func (x *TableExternalTransferTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TableExternalTransferTransaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExternalTransferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender               *SenderData            `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Beneficiary          *BeneficiaryData       `protobuf:"bytes,2,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	Fee                  Fee                    `protobuf:"varint,3,opt,name=fee,proto3,enum=bifast.service.v1.Fee" json:"fee,omitempty"`
	FeeAmount            float64                `protobuf:"fixed64,4,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`
	TotalFeeAmount       string                 `protobuf:"bytes,20,opt,name=totalFeeAmount,proto3" json:"totalFeeAmount,omitempty"`
	Amount               float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionSchedule  TransactionSchedule    `protobuf:"varint,6,opt,name=transactionSchedule,proto3,enum=bifast.service.v1.TransactionSchedule" json:"transactionSchedule,omitempty"`
	ScheduledAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=scheduledAt,proto3" json:"scheduledAt,omitempty"`
	RecurringFrequency   RecurringFrequency     `protobuf:"varint,8,opt,name=recurringFrequency,proto3,enum=bifast.service.v1.RecurringFrequency" json:"recurringFrequency,omitempty"`
	RecurringPeriodStart *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=recurringPeriodStart,proto3" json:"recurringPeriodStart,omitempty"`
	RecurringPeriodEnd   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=recurringPeriodEnd,proto3" json:"recurringPeriodEnd,omitempty"`
	RecurringDay         int64                  `protobuf:"varint,11,opt,name=recurringDay,proto3" json:"recurringDay,omitempty"`
	RecurringDate        int64                  `protobuf:"varint,12,opt,name=recurringDate,proto3" json:"recurringDate,omitempty"`
	RecurringTime        string                 `protobuf:"bytes,13,opt,name=recurringTime,proto3" json:"recurringTime,omitempty"`
	Remark               string                 `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`
	JournalSquence       string                 `protobuf:"bytes,15,opt,name=journalSquence,proto3" json:"journalSquence,omitempty"`
	ReferenceNumber      string                 `protobuf:"bytes,16,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	Status               string                 `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	StatusMessage        string                 `protobuf:"bytes,18,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	NotificationEmails   []string               `protobuf:"bytes,19,rep,name=notificationEmails,proto3" json:"notificationEmails,omitempty"`
	TransactionID        string                 `protobuf:"bytes,102,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	ParentID             string                 `protobuf:"bytes,103,opt,name=parentID,proto3" json:"parentID,omitempty"`
	ParentTaskID         uint64                 `protobuf:"varint,105,opt,name=parentTaskID,proto3" json:"parentTaskID,omitempty"`
	TransactionServiceID uint64                 `protobuf:"varint,104,opt,name=transactionServiceID,proto3" json:"transactionServiceID,omitempty"`
	ExecutedAt           *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=executedAt,proto3" json:"executedAt,omitempty"`
	IsCutOff             bool                   `protobuf:"varint,22,opt,name=isCutOff,proto3" json:"isCutOff,omitempty"`
	IsHoliday            bool                   `protobuf:"varint,23,opt,name=isHoliday,proto3" json:"isHoliday,omitempty"`
	OriginalDate         string                 `protobuf:"bytes,24,opt,name=originalDate,proto3" json:"originalDate,omitempty"`
}

func (x *ExternalTransferData) Reset() {
	*x = ExternalTransferData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalTransferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalTransferData) ProtoMessage() {}

func (x *ExternalTransferData) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalTransferData.ProtoReflect.Descriptor instead.
func (*ExternalTransferData) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{1}
}

func (x *ExternalTransferData) GetSender() *SenderData {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ExternalTransferData) GetBeneficiary() *BeneficiaryData {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

func (x *ExternalTransferData) GetFee() Fee {
	if x != nil {
		return x.Fee
	}
	return Fee_OUR
}

func (x *ExternalTransferData) GetFeeAmount() float64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *ExternalTransferData) GetTotalFeeAmount() string {
	if x != nil {
		return x.TotalFeeAmount
	}
	return ""
}

func (x *ExternalTransferData) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExternalTransferData) GetTransactionSchedule() TransactionSchedule {
	if x != nil {
		return x.TransactionSchedule
	}
	return TransactionSchedule_NullTransactionSchedule
}

func (x *ExternalTransferData) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *ExternalTransferData) GetRecurringFrequency() RecurringFrequency {
	if x != nil {
		return x.RecurringFrequency
	}
	return RecurringFrequency_NullRecurringFrequency
}

func (x *ExternalTransferData) GetRecurringPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.RecurringPeriodStart
	}
	return nil
}

func (x *ExternalTransferData) GetRecurringPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.RecurringPeriodEnd
	}
	return nil
}

func (x *ExternalTransferData) GetRecurringDay() int64 {
	if x != nil {
		return x.RecurringDay
	}
	return 0
}

func (x *ExternalTransferData) GetRecurringDate() int64 {
	if x != nil {
		return x.RecurringDate
	}
	return 0
}

func (x *ExternalTransferData) GetRecurringTime() string {
	if x != nil {
		return x.RecurringTime
	}
	return ""
}

func (x *ExternalTransferData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ExternalTransferData) GetJournalSquence() string {
	if x != nil {
		return x.JournalSquence
	}
	return ""
}

func (x *ExternalTransferData) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *ExternalTransferData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExternalTransferData) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *ExternalTransferData) GetNotificationEmails() []string {
	if x != nil {
		return x.NotificationEmails
	}
	return nil
}

func (x *ExternalTransferData) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *ExternalTransferData) GetParentID() string {
	if x != nil {
		return x.ParentID
	}
	return ""
}

func (x *ExternalTransferData) GetParentTaskID() uint64 {
	if x != nil {
		return x.ParentTaskID
	}
	return 0
}

func (x *ExternalTransferData) GetTransactionServiceID() uint64 {
	if x != nil {
		return x.TransactionServiceID
	}
	return 0
}

func (x *ExternalTransferData) GetExecutedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutedAt
	}
	return nil
}

func (x *ExternalTransferData) GetIsCutOff() bool {
	if x != nil {
		return x.IsCutOff
	}
	return false
}

func (x *ExternalTransferData) GetIsHoliday() bool {
	if x != nil {
		return x.IsHoliday
	}
	return false
}

func (x *ExternalTransferData) GetOriginalDate() string {
	if x != nil {
		return x.OriginalDate
	}
	return ""
}

type SenderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber  string  `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName    string  `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias   string  `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountBalance float64 `protobuf:"fixed64,4,opt,name=accountBalance,proto3" json:"accountBalance,omitempty"`
	RegistrationID string  `protobuf:"bytes,5,opt,name=registrationID,proto3" json:"registrationID,omitempty"`
}

func (x *SenderData) Reset() {
	*x = SenderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderData) ProtoMessage() {}

func (x *SenderData) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderData.ProtoReflect.Descriptor instead.
func (*SenderData) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{2}
}

func (x *SenderData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *SenderData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *SenderData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *SenderData) GetAccountBalance() float64 {
	if x != nil {
		return x.AccountBalance
	}
	return 0
}

func (x *SenderData) GetRegistrationID() string {
	if x != nil {
		return x.RegistrationID
	}
	return ""
}

type BeneficiaryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber   string      `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName     string      `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias    string      `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountBalance  float64     `protobuf:"fixed64,4,opt,name=accountBalance,proto3" json:"accountBalance,omitempty"`
	AccountType     AccountType `protobuf:"varint,5,opt,name=accountType,proto3,enum=bifast.service.v1.AccountType" json:"accountType,omitempty"`
	PhoneNumber     string      `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Email           string      `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	BankCode        string      `protobuf:"bytes,8,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	BankName        string      `protobuf:"bytes,9,opt,name=bankName,proto3" json:"bankName,omitempty"`
	BankAccountType string      `protobuf:"bytes,10,opt,name=bankAccountType,proto3" json:"bankAccountType,omitempty"`
	BankIDCode      string      `protobuf:"bytes,11,opt,name=bankIDCode,proto3" json:"bankIDCode,omitempty"`
	RegistrationID  string      `protobuf:"bytes,12,opt,name=registrationID,proto3" json:"registrationID,omitempty"`
	Country         string      `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *BeneficiaryData) Reset() {
	*x = BeneficiaryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryData) ProtoMessage() {}

func (x *BeneficiaryData) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryData.ProtoReflect.Descriptor instead.
func (*BeneficiaryData) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{3}
}

func (x *BeneficiaryData) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BeneficiaryData) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *BeneficiaryData) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *BeneficiaryData) GetAccountBalance() float64 {
	if x != nil {
		return x.AccountBalance
	}
	return 0
}

func (x *BeneficiaryData) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_NullAccountType
}

func (x *BeneficiaryData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BeneficiaryData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BeneficiaryData) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *BeneficiaryData) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *BeneficiaryData) GetBankAccountType() string {
	if x != nil {
		return x.BankAccountType
	}
	return ""
}

func (x *BeneficiaryData) GetBankIDCode() string {
	if x != nil {
		return x.BankIDCode
	}
	return ""
}

func (x *BeneficiaryData) GetRegistrationID() string {
	if x != nil {
		return x.RegistrationID
	}
	return ""
}

func (x *BeneficiaryData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type TaskExternalTransferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task     *Task                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Data     *ExternalTransferData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Workflow *ValidateWorkflowData `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *TaskExternalTransferData) Reset() {
	*x = TaskExternalTransferData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskExternalTransferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExternalTransferData) ProtoMessage() {}

func (x *TaskExternalTransferData) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExternalTransferData.ProtoReflect.Descriptor instead.
func (*TaskExternalTransferData) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{4}
}

func (x *TaskExternalTransferData) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExternalTransferData) GetData() *ExternalTransferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskExternalTransferData) GetWorkflow() *ValidateWorkflowData {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type GetTaskExternalTransferFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     TaskStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=bifast.service.v1.TaskStatus" json:"status,omitempty"`
	Step       TaskStep       `protobuf:"varint,2,opt,name=step,proto3,enum=bifast.service.v1.TaskStep" json:"step,omitempty"`
	Limit      int32          `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32          `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string         `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        Direction      `protobuf:"varint,6,opt,name=dir,proto3,enum=bifast.service.v1.Direction" json:"dir,omitempty"`
	Filter     string         `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	FilterOr   string         `protobuf:"bytes,8,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
	Query      string         `protobuf:"bytes,9,opt,name=query,proto3" json:"query,omitempty"`
	FileFormat FormatTemplate `protobuf:"varint,101,opt,name=fileFormat,proto3,enum=bifast.service.v1.FormatTemplate" json:"fileFormat,omitempty"`
}

func (x *GetTaskExternalTransferFileRequest) Reset() {
	*x = GetTaskExternalTransferFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferFileRequest) ProtoMessage() {}

func (x *GetTaskExternalTransferFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferFileRequest.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferFileRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskExternalTransferFileRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_AllStatus
}

func (x *GetTaskExternalTransferFileRequest) GetStep() TaskStep {
	if x != nil {
		return x.Step
	}
	return TaskStep_AllStep
}

func (x *GetTaskExternalTransferFileRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTaskExternalTransferFileRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTaskExternalTransferFileRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetTaskExternalTransferFileRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_DESC
}

func (x *GetTaskExternalTransferFileRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetTaskExternalTransferFileRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

func (x *GetTaskExternalTransferFileRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetTaskExternalTransferFileRequest) GetFileFormat() FormatTemplate {
	if x != nil {
		return x.FileFormat
	}
	return FormatTemplate_null
}

type GetTaskExternalTransferFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetTaskExternalTransferFileResponse) Reset() {
	*x = GetTaskExternalTransferFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferFileResponse) ProtoMessage() {}

func (x *GetTaskExternalTransferFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferFileResponse.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferFileResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{6}
}

func (x *GetTaskExternalTransferFileResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskExternalTransferFileResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskExternalTransferFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTaskExternalTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   TaskStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bifast.service.v1.TaskStatus" json:"status,omitempty"`
	Step     TaskStep   `protobuf:"varint,2,opt,name=step,proto3,enum=bifast.service.v1.TaskStep" json:"step,omitempty"`
	Limit    int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32      `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string     `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir      Direction  `protobuf:"varint,6,opt,name=dir,proto3,enum=bifast.service.v1.Direction" json:"dir,omitempty"`
	Filter   string     `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	FilterOr string     `protobuf:"bytes,8,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
	Query    string     `protobuf:"bytes,9,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetTaskExternalTransferRequest) Reset() {
	*x = GetTaskExternalTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferRequest) ProtoMessage() {}

func (x *GetTaskExternalTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferRequest.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{7}
}

func (x *GetTaskExternalTransferRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_AllStatus
}

func (x *GetTaskExternalTransferRequest) GetStep() TaskStep {
	if x != nil {
		return x.Step
	}
	return TaskStep_AllStep
}

func (x *GetTaskExternalTransferRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTaskExternalTransferRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTaskExternalTransferRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetTaskExternalTransferRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_DESC
}

func (x *GetTaskExternalTransferRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetTaskExternalTransferRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

func (x *GetTaskExternalTransferRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetTaskExternalTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*TaskExternalTransferData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse         `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetTaskExternalTransferResponse) Reset() {
	*x = GetTaskExternalTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferResponse) ProtoMessage() {}

func (x *GetTaskExternalTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferResponse.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{8}
}

func (x *GetTaskExternalTransferResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskExternalTransferResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskExternalTransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskExternalTransferResponse) GetData() []*TaskExternalTransferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetTaskExternalTransferResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetTaskExternalTransferDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetTaskExternalTransferDetailRequest) Reset() {
	*x = GetTaskExternalTransferDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferDetailRequest) ProtoMessage() {}

func (x *GetTaskExternalTransferDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferDetailRequest.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferDetailRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{9}
}

func (x *GetTaskExternalTransferDetailRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetTaskExternalTransferDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskExternalTransferData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskExternalTransferDetailResponse) Reset() {
	*x = GetTaskExternalTransferDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferDetailResponse) ProtoMessage() {}

func (x *GetTaskExternalTransferDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferDetailResponse.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferDetailResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{10}
}

func (x *GetTaskExternalTransferDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskExternalTransferDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskExternalTransferDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskExternalTransferDetailResponse) GetData() *TaskExternalTransferData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTaskExternalTransferDetailByReffNumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceSecretKey string `protobuf:"bytes,1,opt,name=serviceSecretKey,proto3" json:"serviceSecretKey,omitempty"`
	ReffNum          string `protobuf:"bytes,2,opt,name=reffNum,proto3" json:"reffNum,omitempty"`
}

func (x *GetTaskExternalTransferDetailByReffNumRequest) Reset() {
	*x = GetTaskExternalTransferDetailByReffNumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferDetailByReffNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferDetailByReffNumRequest) ProtoMessage() {}

func (x *GetTaskExternalTransferDetailByReffNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferDetailByReffNumRequest.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferDetailByReffNumRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{11}
}

func (x *GetTaskExternalTransferDetailByReffNumRequest) GetServiceSecretKey() string {
	if x != nil {
		return x.ServiceSecretKey
	}
	return ""
}

func (x *GetTaskExternalTransferDetailByReffNumRequest) GetReffNum() string {
	if x != nil {
		return x.ReffNum
	}
	return ""
}

type GetTaskExternalTransferDetailByReffNumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                       `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ExternalTransferTransaction `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskExternalTransferDetailByReffNumResponse) Reset() {
	*x = GetTaskExternalTransferDetailByReffNumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferDetailByReffNumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferDetailByReffNumResponse) ProtoMessage() {}

func (x *GetTaskExternalTransferDetailByReffNumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferDetailByReffNumResponse.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferDetailByReffNumResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{12}
}

func (x *GetTaskExternalTransferDetailByReffNumResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskExternalTransferDetailByReffNumResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskExternalTransferDetailByReffNumResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskExternalTransferDetailByReffNumResponse) GetData() *ExternalTransferTransaction {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetTaskExternalTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID   uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Action   string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Comment  string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Reasons  string `protobuf:"bytes,4,opt,name=reasons,proto3" json:"reasons,omitempty"`
	PassCode string `protobuf:"bytes,5,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *SetTaskExternalTransferRequest) Reset() {
	*x = SetTaskExternalTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskExternalTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskExternalTransferRequest) ProtoMessage() {}

func (x *SetTaskExternalTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskExternalTransferRequest.ProtoReflect.Descriptor instead.
func (*SetTaskExternalTransferRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{13}
}

func (x *SetTaskExternalTransferRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *SetTaskExternalTransferRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SetTaskExternalTransferRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SetTaskExternalTransferRequest) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *SetTaskExternalTransferRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type SetTaskExternalTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Task  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetTaskExternalTransferResponse) Reset() {
	*x = SetTaskExternalTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskExternalTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskExternalTransferResponse) ProtoMessage() {}

func (x *SetTaskExternalTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskExternalTransferResponse.ProtoReflect.Descriptor instead.
func (*SetTaskExternalTransferResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{14}
}

func (x *SetTaskExternalTransferResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SetTaskExternalTransferResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetTaskExternalTransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SetTaskExternalTransferResponse) GetData() *Task {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTaskExternalTransferSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID   uint64                `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Data     *ExternalTransferData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	IsDraft  bool                  `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	PassCode string                `protobuf:"bytes,4,opt,name=passCode,proto3" json:"passCode,omitempty"`
}

func (x *CreateTaskExternalTransferSingleRequest) Reset() {
	*x = CreateTaskExternalTransferSingleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskExternalTransferSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskExternalTransferSingleRequest) ProtoMessage() {}

func (x *CreateTaskExternalTransferSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskExternalTransferSingleRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskExternalTransferSingleRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{15}
}

func (x *CreateTaskExternalTransferSingleRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateTaskExternalTransferSingleRequest) GetData() *ExternalTransferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateTaskExternalTransferSingleRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *CreateTaskExternalTransferSingleRequest) GetPassCode() string {
	if x != nil {
		return x.PassCode
	}
	return ""
}

type CreateTaskExternalTransferSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Task  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTaskExternalTransferSingleResponse) Reset() {
	*x = CreateTaskExternalTransferSingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskExternalTransferSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskExternalTransferSingleResponse) ProtoMessage() {}

func (x *CreateTaskExternalTransferSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskExternalTransferSingleResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskExternalTransferSingleResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{16}
}

func (x *CreateTaskExternalTransferSingleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateTaskExternalTransferSingleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateTaskExternalTransferSingleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTaskExternalTransferSingleResponse) GetData() *Task {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTaskExternalTransferMultipleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*ExternalTransferData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	IsDraft bool                    `protobuf:"varint,2,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateTaskExternalTransferMultipleRequest) Reset() {
	*x = CreateTaskExternalTransferMultipleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskExternalTransferMultipleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskExternalTransferMultipleRequest) ProtoMessage() {}

func (x *CreateTaskExternalTransferMultipleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskExternalTransferMultipleRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskExternalTransferMultipleRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{17}
}

func (x *CreateTaskExternalTransferMultipleRequest) GetData() []*ExternalTransferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateTaskExternalTransferMultipleRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type CreateTaskExternalTransferMultipleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Task `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTaskExternalTransferMultipleResponse) Reset() {
	*x = CreateTaskExternalTransferMultipleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskExternalTransferMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskExternalTransferMultipleResponse) ProtoMessage() {}

func (x *CreateTaskExternalTransferMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskExternalTransferMultipleResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskExternalTransferMultipleResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTaskExternalTransferMultipleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateTaskExternalTransferMultipleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateTaskExternalTransferMultipleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTaskExternalTransferMultipleResponse) GetData() []*Task {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateExternalTransferTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID          uint64                `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Data            *ExternalTransferData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	CurrentWorkflow *ValidateWorkflowData `protobuf:"bytes,3,opt,name=currentWorkflow,proto3" json:"currentWorkflow,omitempty"`
}

func (x *CreateExternalTransferTransactionRequest) Reset() {
	*x = CreateExternalTransferTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalTransferTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalTransferTransactionRequest) ProtoMessage() {}

func (x *CreateExternalTransferTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalTransferTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateExternalTransferTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{19}
}

func (x *CreateExternalTransferTransactionRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateExternalTransferTransactionRequest) GetData() *ExternalTransferData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateExternalTransferTransactionRequest) GetCurrentWorkflow() *ValidateWorkflowData {
	if x != nil {
		return x.CurrentWorkflow
	}
	return nil
}

type CreateExternalTransferTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateExternalTransferTransactionResponse) Reset() {
	*x = CreateExternalTransferTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalTransferTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalTransferTransactionResponse) ProtoMessage() {}

func (x *CreateExternalTransferTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalTransferTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateExternalTransferTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{20}
}

func (x *CreateExternalTransferTransactionResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateExternalTransferTransactionResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateExternalTransferTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelExternalTransferTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CancelExternalTransferTransactionRequest) Reset() {
	*x = CancelExternalTransferTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelExternalTransferTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelExternalTransferTransactionRequest) ProtoMessage() {}

func (x *CancelExternalTransferTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelExternalTransferTransactionRequest.ProtoReflect.Descriptor instead.
func (*CancelExternalTransferTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{21}
}

func (x *CancelExternalTransferTransactionRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CancelExternalTransferTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CancelExternalTransferTransactionResponse) Reset() {
	*x = CancelExternalTransferTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelExternalTransferTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelExternalTransferTransactionResponse) ProtoMessage() {}

func (x *CancelExternalTransferTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelExternalTransferTransactionResponse.ProtoReflect.Descriptor instead.
func (*CancelExternalTransferTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{22}
}

func (x *CancelExternalTransferTransactionResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CancelExternalTransferTransactionResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CancelExternalTransferTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExecExternalTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExecExternalTransferRequest) Reset() {
	*x = ExecExternalTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecExternalTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecExternalTransferRequest) ProtoMessage() {}

func (x *ExecExternalTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecExternalTransferRequest.ProtoReflect.Descriptor instead.
func (*ExecExternalTransferRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{23}
}

func (x *ExecExternalTransferRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ExecExternalTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error           bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code            uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message         string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	JournalSequence string `protobuf:"bytes,4,opt,name=journalSequence,proto3" json:"journalSequence,omitempty"`
	Status          string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // 1 | 2 | 3 | 4
	ResponseDetail  string `protobuf:"bytes,6,opt,name=responseDetail,proto3" json:"responseDetail,omitempty"`
}

func (x *ExecExternalTransferResponse) Reset() {
	*x = ExecExternalTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecExternalTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecExternalTransferResponse) ProtoMessage() {}

func (x *ExecExternalTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecExternalTransferResponse.ProtoReflect.Descriptor instead.
func (*ExecExternalTransferResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{24}
}

func (x *ExecExternalTransferResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ExecExternalTransferResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ExecExternalTransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExecExternalTransferResponse) GetJournalSequence() string {
	if x != nil {
		return x.JournalSequence
	}
	return ""
}

func (x *ExecExternalTransferResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExecExternalTransferResponse) GetResponseDetail() string {
	if x != nil {
		return x.ResponseDetail
	}
	return ""
}

type ValidateProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountType AccountType `protobuf:"varint,1,opt,name=accountType,proto3,enum=bifast.service.v1.AccountType" json:"accountType,omitempty"`
	Value       string      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ValidateProxyRequest) Reset() {
	*x = ValidateProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateProxyRequest) ProtoMessage() {}

func (x *ValidateProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateProxyRequest.ProtoReflect.Descriptor instead.
func (*ValidateProxyRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{25}
}

func (x *ValidateProxyRequest) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_NullAccountType
}

func (x *ValidateProxyRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ValidateProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber string `protobuf:"bytes,1,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	BankCode      string `protobuf:"bytes,2,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	Currency      string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	AccountName   string `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
}

func (x *ValidateProxyResponse) Reset() {
	*x = ValidateProxyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateProxyResponse) ProtoMessage() {}

func (x *ValidateProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateProxyResponse.ProtoReflect.Descriptor instead.
func (*ValidateProxyResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{26}
}

func (x *ValidateProxyResponse) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *ValidateProxyResponse) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *ValidateProxyResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ValidateProxyResponse) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

type GetTaskExternalTransferSingleTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort   string    `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    Direction `protobuf:"varint,2,opt,name=dir,proto3,enum=bifast.service.v1.Direction" json:"dir,omitempty"`
	Filter string    `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Query  string    `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetTaskExternalTransferSingleTemplateRequest) Reset() {
	*x = GetTaskExternalTransferSingleTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferSingleTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferSingleTemplateRequest) ProtoMessage() {}

func (x *GetTaskExternalTransferSingleTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferSingleTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferSingleTemplateRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{27}
}

func (x *GetTaskExternalTransferSingleTemplateRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetTaskExternalTransferSingleTemplateRequest) GetDir() Direction {
	if x != nil {
		return x.Dir
	}
	return Direction_DESC
}

func (x *GetTaskExternalTransferSingleTemplateRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetTaskExternalTransferSingleTemplateRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetTaskExternalTransferSingleTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ExternalTransferSingleTemplate `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskExternalTransferSingleTemplateResponse) Reset() {
	*x = GetTaskExternalTransferSingleTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferSingleTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferSingleTemplateResponse) ProtoMessage() {}

func (x *GetTaskExternalTransferSingleTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferSingleTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferSingleTemplateResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{28}
}

func (x *GetTaskExternalTransferSingleTemplateResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskExternalTransferSingleTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskExternalTransferSingleTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskExternalTransferSingleTemplateResponse) GetData() []*ExternalTransferSingleTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTaskExternalTransferSingleTemplateDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTaskExternalTransferSingleTemplateDetailRequest) Reset() {
	*x = GetTaskExternalTransferSingleTemplateDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferSingleTemplateDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferSingleTemplateDetailRequest) ProtoMessage() {}

func (x *GetTaskExternalTransferSingleTemplateDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferSingleTemplateDetailRequest.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferSingleTemplateDetailRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{29}
}

func (x *GetTaskExternalTransferSingleTemplateDetailRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTaskExternalTransferSingleTemplateDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                            `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ExternalTransferSingleTemplate `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) Reset() {
	*x = GetTaskExternalTransferSingleTemplateDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskExternalTransferSingleTemplateDetailResponse) ProtoMessage() {}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskExternalTransferSingleTemplateDetailResponse.ProtoReflect.Descriptor instead.
func (*GetTaskExternalTransferSingleTemplateDetailResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{30}
}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskExternalTransferSingleTemplateDetailResponse) GetData() *ExternalTransferSingleTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTaskExternalTransferSingleTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTaskExternalTransferSingleTemplateRequest) Reset() {
	*x = CreateTaskExternalTransferSingleTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskExternalTransferSingleTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskExternalTransferSingleTemplateRequest) ProtoMessage() {}

func (x *CreateTaskExternalTransferSingleTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskExternalTransferSingleTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskExternalTransferSingleTemplateRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{31}
}

type CreateTaskExternalTransferSingleTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTaskExternalTransferSingleTemplateResponse) Reset() {
	*x = CreateTaskExternalTransferSingleTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskExternalTransferSingleTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskExternalTransferSingleTemplateResponse) ProtoMessage() {}

func (x *CreateTaskExternalTransferSingleTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskExternalTransferSingleTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskExternalTransferSingleTemplateResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{32}
}

func (x *CreateTaskExternalTransferSingleTemplateResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateTaskExternalTransferSingleTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateTaskExternalTransferSingleTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTaskExternalTransferSingleTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTaskExternalTransferSingleTemplateRequest) Reset() {
	*x = DeleteTaskExternalTransferSingleTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskExternalTransferSingleTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskExternalTransferSingleTemplateRequest) ProtoMessage() {}

func (x *DeleteTaskExternalTransferSingleTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskExternalTransferSingleTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskExternalTransferSingleTemplateRequest) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteTaskExternalTransferSingleTemplateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTaskExternalTransferSingleTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTaskExternalTransferSingleTemplateResponse) Reset() {
	*x = DeleteTaskExternalTransferSingleTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bifast_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskExternalTransferSingleTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskExternalTransferSingleTemplateResponse) ProtoMessage() {}

func (x *DeleteTaskExternalTransferSingleTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifast_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskExternalTransferSingleTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskExternalTransferSingleTemplateResponse) Descriptor() ([]byte, []int) {
	return file_bifast_payload_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteTaskExternalTransferSingleTemplateResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *DeleteTaskExternalTransferSingleTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteTaskExternalTransferSingleTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_bifast_payload_proto protoreflect.FileDescriptor

var file_bifast_payload_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x62, 0x69, 0x66, 0x61, 0x73,
	0x74, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d,
	0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x03, 0x0a,
	0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xf2, 0x0a, 0x0a, 0x14, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x62, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x58,
	0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x55, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4e, 0x0a,
	0x14, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x4a, 0x0a,
	0x12, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x45, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x2b, 0x0a, 0x0e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2d,
	0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x69, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x3a,
	0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x48, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x48, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0d, 0xe2, 0xdf, 0x1f,
	0x09, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x81, 0x04, 0x0a, 0x0f, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42,
	0x0d, 0xe2, 0xdf, 0x1f, 0x09, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0f,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x44,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xc9, 0x01, 0x0a, 0x18,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x43, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0xa5, 0x0f, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27,
	0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32,
	0x3c, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20,
	0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x5d, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x2d, 0x92, 0x41, 0x2a, 0x32, 0x28, 0x53, 0x6f, 0x72, 0x74, 0x20, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x41, 0x53, 0x43, 0x20, 0x6f, 0x72, 0x20, 0x44, 0x45, 0x53,
	0x43, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee,
	0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20,
	0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a,
	0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a,
	0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70,
	0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b,
	0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b,
	0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31,
	0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41,
	0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x91, 0x04, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf4, 0x03, 0x92, 0x41, 0xf0,
	0x03, 0x32, 0xed, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74,
	0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c,
	0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e,
	0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31,
	0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45,
	0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41,
	0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27,
	0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65,
	0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27,
	0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b,
	0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d,
	0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0x69, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xde, 0x0e, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c,
	0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x5d, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x2d, 0x92, 0x41, 0x2a, 0x32, 0x28, 0x53, 0x6f, 0x72, 0x74, 0x20, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x20, 0x62, 0x65, 0x20, 0x41, 0x53, 0x43, 0x20, 0x6f, 0x72, 0x20, 0x44, 0x45, 0x53, 0x43,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31,
	0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65,
	0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20,
	0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d,
	0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x91, 0x04, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf4, 0x03, 0x92, 0x41, 0xf0, 0x03,
	0x32, 0xed, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a,
	0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79,
	0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49,
	0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c,
	0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58,
	0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e,
	0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3,
	0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79,
	0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74,
	0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d,
	0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20,
	0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e,
	0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xed, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xac, 0x01, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x2d, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x52, 0x65, 0x66,
	0x66, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x66, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x66, 0x4e, 0x75,
	0x6d, 0x22, 0xb8, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x79, 0x52, 0x65, 0x66, 0x66, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a,
	0x1e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x27, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x27, 0x2c,
	0x20, 0x27, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x27, 0x2c, 0x20, 0x27, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x27, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69,
	0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb4, 0x01, 0x0a, 0x27, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x3b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x82, 0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x2a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x6f, 0x0a, 0x29, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x28, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x6f,
	0x0a, 0x29, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2d, 0x0a, 0x1b, 0x45, 0x78, 0x65, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcc,
	0x01, 0x0a, 0x1c, 0x45, 0x78, 0x65, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x6e, 0x0a,
	0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x66,
	0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x97, 0x01,
	0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x08, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x5d, 0x0a, 0x03,
	0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x66, 0x61,
	0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2d, 0x92, 0x41, 0x2a, 0x32, 0x28, 0x53, 0x6f,
	0x72, 0x74, 0x20, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d,
	0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x41, 0x53, 0x43, 0x20, 0x6f,
	0x72, 0x20, 0x44, 0x45, 0x53, 0x43, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92,
	0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e,
	0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c,
	0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e,
	0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45,
	0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e,
	0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92,
	0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52,
	0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b,
	0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65,
	0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65,
	0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49,
	0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xba, 0x01,
	0x0a, 0x2d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x32, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xc0, 0x01, 0x0a, 0x33, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x66,
	0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x30, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41,
	0x0a, 0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x76, 0x0a, 0x30, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bifast_payload_proto_rawDescOnce sync.Once
	file_bifast_payload_proto_rawDescData = file_bifast_payload_proto_rawDesc
)

func file_bifast_payload_proto_rawDescGZIP() []byte {
	file_bifast_payload_proto_rawDescOnce.Do(func() {
		file_bifast_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_bifast_payload_proto_rawDescData)
	})
	return file_bifast_payload_proto_rawDescData
}

var file_bifast_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_bifast_payload_proto_goTypes = []interface{}{
	(*TableExternalTransferTransaction)(nil),                    // 0: bifast.service.v1.TableExternalTransferTransaction
	(*ExternalTransferData)(nil),                                // 1: bifast.service.v1.ExternalTransferData
	(*SenderData)(nil),                                          // 2: bifast.service.v1.SenderData
	(*BeneficiaryData)(nil),                                     // 3: bifast.service.v1.BeneficiaryData
	(*TaskExternalTransferData)(nil),                            // 4: bifast.service.v1.TaskExternalTransferData
	(*GetTaskExternalTransferFileRequest)(nil),                  // 5: bifast.service.v1.GetTaskExternalTransferFileRequest
	(*GetTaskExternalTransferFileResponse)(nil),                 // 6: bifast.service.v1.GetTaskExternalTransferFileResponse
	(*GetTaskExternalTransferRequest)(nil),                      // 7: bifast.service.v1.GetTaskExternalTransferRequest
	(*GetTaskExternalTransferResponse)(nil),                     // 8: bifast.service.v1.GetTaskExternalTransferResponse
	(*GetTaskExternalTransferDetailRequest)(nil),                // 9: bifast.service.v1.GetTaskExternalTransferDetailRequest
	(*GetTaskExternalTransferDetailResponse)(nil),               // 10: bifast.service.v1.GetTaskExternalTransferDetailResponse
	(*GetTaskExternalTransferDetailByReffNumRequest)(nil),       // 11: bifast.service.v1.GetTaskExternalTransferDetailByReffNumRequest
	(*GetTaskExternalTransferDetailByReffNumResponse)(nil),      // 12: bifast.service.v1.GetTaskExternalTransferDetailByReffNumResponse
	(*SetTaskExternalTransferRequest)(nil),                      // 13: bifast.service.v1.SetTaskExternalTransferRequest
	(*SetTaskExternalTransferResponse)(nil),                     // 14: bifast.service.v1.SetTaskExternalTransferResponse
	(*CreateTaskExternalTransferSingleRequest)(nil),             // 15: bifast.service.v1.CreateTaskExternalTransferSingleRequest
	(*CreateTaskExternalTransferSingleResponse)(nil),            // 16: bifast.service.v1.CreateTaskExternalTransferSingleResponse
	(*CreateTaskExternalTransferMultipleRequest)(nil),           // 17: bifast.service.v1.CreateTaskExternalTransferMultipleRequest
	(*CreateTaskExternalTransferMultipleResponse)(nil),          // 18: bifast.service.v1.CreateTaskExternalTransferMultipleResponse
	(*CreateExternalTransferTransactionRequest)(nil),            // 19: bifast.service.v1.CreateExternalTransferTransactionRequest
	(*CreateExternalTransferTransactionResponse)(nil),           // 20: bifast.service.v1.CreateExternalTransferTransactionResponse
	(*CancelExternalTransferTransactionRequest)(nil),            // 21: bifast.service.v1.CancelExternalTransferTransactionRequest
	(*CancelExternalTransferTransactionResponse)(nil),           // 22: bifast.service.v1.CancelExternalTransferTransactionResponse
	(*ExecExternalTransferRequest)(nil),                         // 23: bifast.service.v1.ExecExternalTransferRequest
	(*ExecExternalTransferResponse)(nil),                        // 24: bifast.service.v1.ExecExternalTransferResponse
	(*ValidateProxyRequest)(nil),                                // 25: bifast.service.v1.ValidateProxyRequest
	(*ValidateProxyResponse)(nil),                               // 26: bifast.service.v1.ValidateProxyResponse
	(*GetTaskExternalTransferSingleTemplateRequest)(nil),        // 27: bifast.service.v1.GetTaskExternalTransferSingleTemplateRequest
	(*GetTaskExternalTransferSingleTemplateResponse)(nil),       // 28: bifast.service.v1.GetTaskExternalTransferSingleTemplateResponse
	(*GetTaskExternalTransferSingleTemplateDetailRequest)(nil),  // 29: bifast.service.v1.GetTaskExternalTransferSingleTemplateDetailRequest
	(*GetTaskExternalTransferSingleTemplateDetailResponse)(nil), // 30: bifast.service.v1.GetTaskExternalTransferSingleTemplateDetailResponse
	(*CreateTaskExternalTransferSingleTemplateRequest)(nil),     // 31: bifast.service.v1.CreateTaskExternalTransferSingleTemplateRequest
	(*CreateTaskExternalTransferSingleTemplateResponse)(nil),    // 32: bifast.service.v1.CreateTaskExternalTransferSingleTemplateResponse
	(*DeleteTaskExternalTransferSingleTemplateRequest)(nil),     // 33: bifast.service.v1.DeleteTaskExternalTransferSingleTemplateRequest
	(*DeleteTaskExternalTransferSingleTemplateResponse)(nil),    // 34: bifast.service.v1.DeleteTaskExternalTransferSingleTemplateResponse
	(*timestamppb.Timestamp)(nil),                               // 35: google.protobuf.Timestamp
	(Fee)(0),                                                    // 36: bifast.service.v1.Fee
	(TransactionSchedule)(0),                                    // 37: bifast.service.v1.TransactionSchedule
	(RecurringFrequency)(0),                                     // 38: bifast.service.v1.RecurringFrequency
	(AccountType)(0),                                            // 39: bifast.service.v1.AccountType
	(*Task)(nil),                                                // 40: bifast.service.v1.Task
	(*ValidateWorkflowData)(nil),                                // 41: bifast.service.v1.ValidateWorkflowData
	(TaskStatus)(0),                                             // 42: bifast.service.v1.TaskStatus
	(TaskStep)(0),                                               // 43: bifast.service.v1.TaskStep
	(Direction)(0),                                              // 44: bifast.service.v1.Direction
	(FormatTemplate)(0),                                         // 45: bifast.service.v1.FormatTemplate
	(*PaginationResponse)(nil),                                  // 46: bifast.service.v1.PaginationResponse
	(*ExternalTransferTransaction)(nil),                         // 47: bifast.service.v1.ExternalTransferTransaction
	(*ExternalTransferSingleTemplate)(nil),                      // 48: bifast.service.v1.ExternalTransferSingleTemplate
}
var file_bifast_payload_proto_depIdxs = []int32{
	35, // 0: bifast.service.v1.TableExternalTransferTransaction.createdAt:type_name -> google.protobuf.Timestamp
	35, // 1: bifast.service.v1.TableExternalTransferTransaction.updatedAt:type_name -> google.protobuf.Timestamp
	2,  // 2: bifast.service.v1.ExternalTransferData.sender:type_name -> bifast.service.v1.SenderData
	3,  // 3: bifast.service.v1.ExternalTransferData.beneficiary:type_name -> bifast.service.v1.BeneficiaryData
	36, // 4: bifast.service.v1.ExternalTransferData.fee:type_name -> bifast.service.v1.Fee
	37, // 5: bifast.service.v1.ExternalTransferData.transactionSchedule:type_name -> bifast.service.v1.TransactionSchedule
	35, // 6: bifast.service.v1.ExternalTransferData.scheduledAt:type_name -> google.protobuf.Timestamp
	38, // 7: bifast.service.v1.ExternalTransferData.recurringFrequency:type_name -> bifast.service.v1.RecurringFrequency
	35, // 8: bifast.service.v1.ExternalTransferData.recurringPeriodStart:type_name -> google.protobuf.Timestamp
	35, // 9: bifast.service.v1.ExternalTransferData.recurringPeriodEnd:type_name -> google.protobuf.Timestamp
	35, // 10: bifast.service.v1.ExternalTransferData.executedAt:type_name -> google.protobuf.Timestamp
	39, // 11: bifast.service.v1.BeneficiaryData.accountType:type_name -> bifast.service.v1.AccountType
	40, // 12: bifast.service.v1.TaskExternalTransferData.task:type_name -> bifast.service.v1.Task
	1,  // 13: bifast.service.v1.TaskExternalTransferData.data:type_name -> bifast.service.v1.ExternalTransferData
	41, // 14: bifast.service.v1.TaskExternalTransferData.workflow:type_name -> bifast.service.v1.ValidateWorkflowData
	42, // 15: bifast.service.v1.GetTaskExternalTransferFileRequest.status:type_name -> bifast.service.v1.TaskStatus
	43, // 16: bifast.service.v1.GetTaskExternalTransferFileRequest.step:type_name -> bifast.service.v1.TaskStep
	44, // 17: bifast.service.v1.GetTaskExternalTransferFileRequest.dir:type_name -> bifast.service.v1.Direction
	45, // 18: bifast.service.v1.GetTaskExternalTransferFileRequest.fileFormat:type_name -> bifast.service.v1.FormatTemplate
	42, // 19: bifast.service.v1.GetTaskExternalTransferRequest.status:type_name -> bifast.service.v1.TaskStatus
	43, // 20: bifast.service.v1.GetTaskExternalTransferRequest.step:type_name -> bifast.service.v1.TaskStep
	44, // 21: bifast.service.v1.GetTaskExternalTransferRequest.dir:type_name -> bifast.service.v1.Direction
	4,  // 22: bifast.service.v1.GetTaskExternalTransferResponse.data:type_name -> bifast.service.v1.TaskExternalTransferData
	46, // 23: bifast.service.v1.GetTaskExternalTransferResponse.pagination:type_name -> bifast.service.v1.PaginationResponse
	4,  // 24: bifast.service.v1.GetTaskExternalTransferDetailResponse.data:type_name -> bifast.service.v1.TaskExternalTransferData
	47, // 25: bifast.service.v1.GetTaskExternalTransferDetailByReffNumResponse.data:type_name -> bifast.service.v1.ExternalTransferTransaction
	40, // 26: bifast.service.v1.SetTaskExternalTransferResponse.data:type_name -> bifast.service.v1.Task
	1,  // 27: bifast.service.v1.CreateTaskExternalTransferSingleRequest.data:type_name -> bifast.service.v1.ExternalTransferData
	40, // 28: bifast.service.v1.CreateTaskExternalTransferSingleResponse.data:type_name -> bifast.service.v1.Task
	1,  // 29: bifast.service.v1.CreateTaskExternalTransferMultipleRequest.data:type_name -> bifast.service.v1.ExternalTransferData
	40, // 30: bifast.service.v1.CreateTaskExternalTransferMultipleResponse.data:type_name -> bifast.service.v1.Task
	1,  // 31: bifast.service.v1.CreateExternalTransferTransactionRequest.data:type_name -> bifast.service.v1.ExternalTransferData
	41, // 32: bifast.service.v1.CreateExternalTransferTransactionRequest.currentWorkflow:type_name -> bifast.service.v1.ValidateWorkflowData
	39, // 33: bifast.service.v1.ValidateProxyRequest.accountType:type_name -> bifast.service.v1.AccountType
	44, // 34: bifast.service.v1.GetTaskExternalTransferSingleTemplateRequest.dir:type_name -> bifast.service.v1.Direction
	48, // 35: bifast.service.v1.GetTaskExternalTransferSingleTemplateResponse.data:type_name -> bifast.service.v1.ExternalTransferSingleTemplate
	48, // 36: bifast.service.v1.GetTaskExternalTransferSingleTemplateDetailResponse.data:type_name -> bifast.service.v1.ExternalTransferSingleTemplate
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_bifast_payload_proto_init() }
func file_bifast_payload_proto_init() {
	if File_bifast_payload_proto != nil {
		return
	}
	file_bifast_gorm_db_proto_init()
	file_bifast_core_proto_init()
	file_bifast_core_payload_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bifast_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableExternalTransferTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalTransferData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskExternalTransferData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferDetailByReffNumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferDetailByReffNumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskExternalTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskExternalTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskExternalTransferSingleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskExternalTransferSingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskExternalTransferMultipleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskExternalTransferMultipleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalTransferTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalTransferTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelExternalTransferTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelExternalTransferTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecExternalTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecExternalTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateProxyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferSingleTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferSingleTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferSingleTemplateDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskExternalTransferSingleTemplateDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskExternalTransferSingleTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskExternalTransferSingleTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskExternalTransferSingleTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bifast_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskExternalTransferSingleTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bifast_payload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bifast_payload_proto_goTypes,
		DependencyIndexes: file_bifast_payload_proto_depIdxs,
		MessageInfos:      file_bifast_payload_proto_msgTypes,
	}.Build()
	File_bifast_payload_proto = out.File
	file_bifast_payload_proto_rawDesc = nil
	file_bifast_payload_proto_goTypes = nil
	file_bifast_payload_proto_depIdxs = nil
}
