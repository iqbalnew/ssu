// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: bifast_api.proto

package pb

import (
	context "context"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApiServiceClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	GetTaskExternalTransferSingleTemplate(ctx context.Context, in *GetTaskExternalTransferSingleTemplateRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferSingleTemplateResponse, error)
	GetTaskExternalTransferSingleTemplateDetail(ctx context.Context, in *GetTaskExternalTransferSingleTemplateDetailRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferSingleTemplateDetailResponse, error)
	CreateTaskExternalTransferSingleTemplate(ctx context.Context, in *ExternalTransferSingleTemplate, opts ...grpc.CallOption) (*CreateTaskExternalTransferSingleTemplateResponse, error)
	DeleteTaskExternalTransferSingleTemplate(ctx context.Context, in *DeleteTaskExternalTransferSingleTemplateRequest, opts ...grpc.CallOption) (*DeleteTaskExternalTransferSingleTemplateResponse, error)
	GetTaskExternalTransfer(ctx context.Context, in *GetTaskExternalTransferRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferResponse, error)
	GetTaskExternalTransferFile(ctx context.Context, in *GetTaskExternalTransferFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	GetTaskExternalTransferDetail(ctx context.Context, in *GetTaskExternalTransferDetailRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferDetailResponse, error)
	CreateExternalTransferTransaction(ctx context.Context, in *CreateExternalTransferTransactionRequest, opts ...grpc.CallOption) (*CreateExternalTransferTransactionResponse, error)
	CancelExternalTransferTransaction(ctx context.Context, in *CancelExternalTransferTransactionRequest, opts ...grpc.CallOption) (*CancelExternalTransferTransactionResponse, error)
	SetTaskExternalTransfer(ctx context.Context, in *SetTaskExternalTransferRequest, opts ...grpc.CallOption) (*SetTaskExternalTransferResponse, error)
	ExecExternalTransfer(ctx context.Context, in *ExecExternalTransferRequest, opts ...grpc.CallOption) (*ExecExternalTransferResponse, error)
	CreateTaskExternalTransferSingle(ctx context.Context, in *CreateTaskExternalTransferSingleRequest, opts ...grpc.CallOption) (*CreateTaskExternalTransferSingleResponse, error)
	CreateTaskExternalTransferMultiple(ctx context.Context, in *CreateTaskExternalTransferMultipleRequest, opts ...grpc.CallOption) (*CreateTaskExternalTransferMultipleResponse, error)
	ValidateProxy(ctx context.Context, in *ValidateProxyRequest, opts ...grpc.CallOption) (*ValidateProxyResponse, error)
}

type apiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApiServiceClient(cc grpc.ClientConnInterface) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskExternalTransferSingleTemplate(ctx context.Context, in *GetTaskExternalTransferSingleTemplateRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferSingleTemplateResponse, error) {
	out := new(GetTaskExternalTransferSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/GetTaskExternalTransferSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskExternalTransferSingleTemplateDetail(ctx context.Context, in *GetTaskExternalTransferSingleTemplateDetailRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferSingleTemplateDetailResponse, error) {
	out := new(GetTaskExternalTransferSingleTemplateDetailResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/GetTaskExternalTransferSingleTemplateDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskExternalTransferSingleTemplate(ctx context.Context, in *ExternalTransferSingleTemplate, opts ...grpc.CallOption) (*CreateTaskExternalTransferSingleTemplateResponse, error) {
	out := new(CreateTaskExternalTransferSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/CreateTaskExternalTransferSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) DeleteTaskExternalTransferSingleTemplate(ctx context.Context, in *DeleteTaskExternalTransferSingleTemplateRequest, opts ...grpc.CallOption) (*DeleteTaskExternalTransferSingleTemplateResponse, error) {
	out := new(DeleteTaskExternalTransferSingleTemplateResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/DeleteTaskExternalTransferSingleTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskExternalTransfer(ctx context.Context, in *GetTaskExternalTransferRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferResponse, error) {
	out := new(GetTaskExternalTransferResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/GetTaskExternalTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskExternalTransferFile(ctx context.Context, in *GetTaskExternalTransferFileRequest, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/GetTaskExternalTransferFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTaskExternalTransferDetail(ctx context.Context, in *GetTaskExternalTransferDetailRequest, opts ...grpc.CallOption) (*GetTaskExternalTransferDetailResponse, error) {
	out := new(GetTaskExternalTransferDetailResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/GetTaskExternalTransferDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateExternalTransferTransaction(ctx context.Context, in *CreateExternalTransferTransactionRequest, opts ...grpc.CallOption) (*CreateExternalTransferTransactionResponse, error) {
	out := new(CreateExternalTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/CreateExternalTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CancelExternalTransferTransaction(ctx context.Context, in *CancelExternalTransferTransactionRequest, opts ...grpc.CallOption) (*CancelExternalTransferTransactionResponse, error) {
	out := new(CancelExternalTransferTransactionResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/CancelExternalTransferTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SetTaskExternalTransfer(ctx context.Context, in *SetTaskExternalTransferRequest, opts ...grpc.CallOption) (*SetTaskExternalTransferResponse, error) {
	out := new(SetTaskExternalTransferResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/SetTaskExternalTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecExternalTransfer(ctx context.Context, in *ExecExternalTransferRequest, opts ...grpc.CallOption) (*ExecExternalTransferResponse, error) {
	out := new(ExecExternalTransferResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/ExecExternalTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskExternalTransferSingle(ctx context.Context, in *CreateTaskExternalTransferSingleRequest, opts ...grpc.CallOption) (*CreateTaskExternalTransferSingleResponse, error) {
	out := new(CreateTaskExternalTransferSingleResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/CreateTaskExternalTransferSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateTaskExternalTransferMultiple(ctx context.Context, in *CreateTaskExternalTransferMultipleRequest, opts ...grpc.CallOption) (*CreateTaskExternalTransferMultipleResponse, error) {
	out := new(CreateTaskExternalTransferMultipleResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/CreateTaskExternalTransferMultiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ValidateProxy(ctx context.Context, in *ValidateProxyRequest, opts ...grpc.CallOption) (*ValidateProxyResponse, error) {
	out := new(ValidateProxyResponse)
	err := c.cc.Invoke(ctx, "/bifast.service.v1.ApiService/ValidateProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
// All implementations must embed UnimplementedApiServiceServer
// for forward compatibility
type ApiServiceServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	GetTaskExternalTransferSingleTemplate(context.Context, *GetTaskExternalTransferSingleTemplateRequest) (*GetTaskExternalTransferSingleTemplateResponse, error)
	GetTaskExternalTransferSingleTemplateDetail(context.Context, *GetTaskExternalTransferSingleTemplateDetailRequest) (*GetTaskExternalTransferSingleTemplateDetailResponse, error)
	CreateTaskExternalTransferSingleTemplate(context.Context, *ExternalTransferSingleTemplate) (*CreateTaskExternalTransferSingleTemplateResponse, error)
	DeleteTaskExternalTransferSingleTemplate(context.Context, *DeleteTaskExternalTransferSingleTemplateRequest) (*DeleteTaskExternalTransferSingleTemplateResponse, error)
	GetTaskExternalTransfer(context.Context, *GetTaskExternalTransferRequest) (*GetTaskExternalTransferResponse, error)
	GetTaskExternalTransferFile(context.Context, *GetTaskExternalTransferFileRequest) (*httpbody.HttpBody, error)
	GetTaskExternalTransferDetail(context.Context, *GetTaskExternalTransferDetailRequest) (*GetTaskExternalTransferDetailResponse, error)
	CreateExternalTransferTransaction(context.Context, *CreateExternalTransferTransactionRequest) (*CreateExternalTransferTransactionResponse, error)
	CancelExternalTransferTransaction(context.Context, *CancelExternalTransferTransactionRequest) (*CancelExternalTransferTransactionResponse, error)
	SetTaskExternalTransfer(context.Context, *SetTaskExternalTransferRequest) (*SetTaskExternalTransferResponse, error)
	ExecExternalTransfer(context.Context, *ExecExternalTransferRequest) (*ExecExternalTransferResponse, error)
	CreateTaskExternalTransferSingle(context.Context, *CreateTaskExternalTransferSingleRequest) (*CreateTaskExternalTransferSingleResponse, error)
	CreateTaskExternalTransferMultiple(context.Context, *CreateTaskExternalTransferMultipleRequest) (*CreateTaskExternalTransferMultipleResponse, error)
	ValidateProxy(context.Context, *ValidateProxyRequest) (*ValidateProxyResponse, error)
	mustEmbedUnimplementedApiServiceServer()
}

// UnimplementedApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (UnimplementedApiServiceServer) HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedApiServiceServer) GetTaskExternalTransferSingleTemplate(context.Context, *GetTaskExternalTransferSingleTemplateRequest) (*GetTaskExternalTransferSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskExternalTransferSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetTaskExternalTransferSingleTemplateDetail(context.Context, *GetTaskExternalTransferSingleTemplateDetailRequest) (*GetTaskExternalTransferSingleTemplateDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskExternalTransferSingleTemplateDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskExternalTransferSingleTemplate(context.Context, *ExternalTransferSingleTemplate) (*CreateTaskExternalTransferSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskExternalTransferSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) DeleteTaskExternalTransferSingleTemplate(context.Context, *DeleteTaskExternalTransferSingleTemplateRequest) (*DeleteTaskExternalTransferSingleTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTaskExternalTransferSingleTemplate not implemented")
}
func (UnimplementedApiServiceServer) GetTaskExternalTransfer(context.Context, *GetTaskExternalTransferRequest) (*GetTaskExternalTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskExternalTransfer not implemented")
}
func (UnimplementedApiServiceServer) GetTaskExternalTransferFile(context.Context, *GetTaskExternalTransferFileRequest) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskExternalTransferFile not implemented")
}
func (UnimplementedApiServiceServer) GetTaskExternalTransferDetail(context.Context, *GetTaskExternalTransferDetailRequest) (*GetTaskExternalTransferDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskExternalTransferDetail not implemented")
}
func (UnimplementedApiServiceServer) CreateExternalTransferTransaction(context.Context, *CreateExternalTransferTransactionRequest) (*CreateExternalTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExternalTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) CancelExternalTransferTransaction(context.Context, *CancelExternalTransferTransactionRequest) (*CancelExternalTransferTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelExternalTransferTransaction not implemented")
}
func (UnimplementedApiServiceServer) SetTaskExternalTransfer(context.Context, *SetTaskExternalTransferRequest) (*SetTaskExternalTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTaskExternalTransfer not implemented")
}
func (UnimplementedApiServiceServer) ExecExternalTransfer(context.Context, *ExecExternalTransferRequest) (*ExecExternalTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecExternalTransfer not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskExternalTransferSingle(context.Context, *CreateTaskExternalTransferSingleRequest) (*CreateTaskExternalTransferSingleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskExternalTransferSingle not implemented")
}
func (UnimplementedApiServiceServer) CreateTaskExternalTransferMultiple(context.Context, *CreateTaskExternalTransferMultipleRequest) (*CreateTaskExternalTransferMultipleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTaskExternalTransferMultiple not implemented")
}
func (UnimplementedApiServiceServer) ValidateProxy(context.Context, *ValidateProxyRequest) (*ValidateProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateProxy not implemented")
}
func (UnimplementedApiServiceServer) mustEmbedUnimplementedApiServiceServer() {}

// UnsafeApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApiServiceServer will
// result in compilation errors.
type UnsafeApiServiceServer interface {
	mustEmbedUnimplementedApiServiceServer()
}

func RegisterApiServiceServer(s grpc.ServiceRegistrar, srv ApiServiceServer) {
	s.RegisterService(&ApiService_ServiceDesc, srv)
}

func _ApiService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskExternalTransferSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskExternalTransferSingleTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskExternalTransferSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/GetTaskExternalTransferSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskExternalTransferSingleTemplate(ctx, req.(*GetTaskExternalTransferSingleTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskExternalTransferSingleTemplateDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskExternalTransferSingleTemplateDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskExternalTransferSingleTemplateDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/GetTaskExternalTransferSingleTemplateDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskExternalTransferSingleTemplateDetail(ctx, req.(*GetTaskExternalTransferSingleTemplateDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskExternalTransferSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExternalTransferSingleTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskExternalTransferSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/CreateTaskExternalTransferSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskExternalTransferSingleTemplate(ctx, req.(*ExternalTransferSingleTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_DeleteTaskExternalTransferSingleTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskExternalTransferSingleTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).DeleteTaskExternalTransferSingleTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/DeleteTaskExternalTransferSingleTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).DeleteTaskExternalTransferSingleTemplate(ctx, req.(*DeleteTaskExternalTransferSingleTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskExternalTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskExternalTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskExternalTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/GetTaskExternalTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskExternalTransfer(ctx, req.(*GetTaskExternalTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskExternalTransferFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskExternalTransferFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskExternalTransferFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/GetTaskExternalTransferFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskExternalTransferFile(ctx, req.(*GetTaskExternalTransferFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTaskExternalTransferDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskExternalTransferDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTaskExternalTransferDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/GetTaskExternalTransferDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTaskExternalTransferDetail(ctx, req.(*GetTaskExternalTransferDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateExternalTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExternalTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateExternalTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/CreateExternalTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateExternalTransferTransaction(ctx, req.(*CreateExternalTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CancelExternalTransferTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelExternalTransferTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CancelExternalTransferTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/CancelExternalTransferTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CancelExternalTransferTransaction(ctx, req.(*CancelExternalTransferTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SetTaskExternalTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTaskExternalTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SetTaskExternalTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/SetTaskExternalTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SetTaskExternalTransfer(ctx, req.(*SetTaskExternalTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecExternalTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecExternalTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecExternalTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/ExecExternalTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecExternalTransfer(ctx, req.(*ExecExternalTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskExternalTransferSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskExternalTransferSingleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskExternalTransferSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/CreateTaskExternalTransferSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskExternalTransferSingle(ctx, req.(*CreateTaskExternalTransferSingleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateTaskExternalTransferMultiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskExternalTransferMultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateTaskExternalTransferMultiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/CreateTaskExternalTransferMultiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateTaskExternalTransferMultiple(ctx, req.(*CreateTaskExternalTransferMultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ValidateProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ValidateProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bifast.service.v1.ApiService/ValidateProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ValidateProxy(ctx, req.(*ValidateProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApiService_ServiceDesc is the grpc.ServiceDesc for ApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bifast.service.v1.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _ApiService_HealthCheck_Handler,
		},
		{
			MethodName: "GetTaskExternalTransferSingleTemplate",
			Handler:    _ApiService_GetTaskExternalTransferSingleTemplate_Handler,
		},
		{
			MethodName: "GetTaskExternalTransferSingleTemplateDetail",
			Handler:    _ApiService_GetTaskExternalTransferSingleTemplateDetail_Handler,
		},
		{
			MethodName: "CreateTaskExternalTransferSingleTemplate",
			Handler:    _ApiService_CreateTaskExternalTransferSingleTemplate_Handler,
		},
		{
			MethodName: "DeleteTaskExternalTransferSingleTemplate",
			Handler:    _ApiService_DeleteTaskExternalTransferSingleTemplate_Handler,
		},
		{
			MethodName: "GetTaskExternalTransfer",
			Handler:    _ApiService_GetTaskExternalTransfer_Handler,
		},
		{
			MethodName: "GetTaskExternalTransferFile",
			Handler:    _ApiService_GetTaskExternalTransferFile_Handler,
		},
		{
			MethodName: "GetTaskExternalTransferDetail",
			Handler:    _ApiService_GetTaskExternalTransferDetail_Handler,
		},
		{
			MethodName: "CreateExternalTransferTransaction",
			Handler:    _ApiService_CreateExternalTransferTransaction_Handler,
		},
		{
			MethodName: "CancelExternalTransferTransaction",
			Handler:    _ApiService_CancelExternalTransferTransaction_Handler,
		},
		{
			MethodName: "SetTaskExternalTransfer",
			Handler:    _ApiService_SetTaskExternalTransfer_Handler,
		},
		{
			MethodName: "ExecExternalTransfer",
			Handler:    _ApiService_ExecExternalTransfer_Handler,
		},
		{
			MethodName: "CreateTaskExternalTransferSingle",
			Handler:    _ApiService_CreateTaskExternalTransferSingle_Handler,
		},
		{
			MethodName: "CreateTaskExternalTransferMultiple",
			Handler:    _ApiService_CreateTaskExternalTransferMultiple_Handler,
		},
		{
			MethodName: "ValidateProxy",
			Handler:    _ApiService_ValidateProxy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bifast_api.proto",
}
